{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"Cumcord Loader","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://discord.com/*","https://ptb.discord.com/*","https://canary.discord.com/*","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=discord.com%2Fapp","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=canary.discord.com%2Fapp","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=ptb.discord.com%2Fapp"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null},"storage":{"ts":1634656386081,"data":{}},"enabled":false,"position":1,"file_url":"https://github.com/Project-Browser/Userscripts/raw/main/Cumcord-Loader.user.js","uuid":"c9bf5bcc-6dba-4bde-9f0b-7625bb002f0e","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBDdW1jb3JkIExvYWRlcgovLyBAdmVyc2lvbiAgICAgIDEuMC4wCi8vIEBkZXNjcmlwdGlvbiAgSW5qZWN0IEN1bWNvcmQgSW50byBEaXNjb3JkIFlvdSBOZWVkIFRoaXMgRXh0ZW5zaW9uIG9yIERpc2FibGUgQ1NQIEluIFRhbXBlcm1vbmtleSAtIGh0dHBzOi8vY2hyb21lLmdvb2dsZS5jb20vd2Vic3RvcmUvZGV0YWlsL2Rpc2FibGUtY29udGVudC1zZWN1cml0eS9pZWVsbWNtY2Fnb21tcGxjZWViZmVkamxha2tocGRlbgovLyBAYXV0aG9yICAgICAgIEhla2t5IzY4NjkgJiBJdCdzSnVzdEpvc2gjMjgxMgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vZGlzY29yZC5jb20vKgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vcHRiLmRpc2NvcmQuY29tLyoKLy8gQG1hdGNoICAgICAgICBodHRwczovL2NhbmFyeS5kaXNjb3JkLmNvbS8qCi8vIEBtYXRjaCAgICAgICAgaHR0cDovL2Jsb2NrZWQuY29tLWRlZmF1bHQud3MvP29JPTEwNDI4Mzg3NDQ5JnR5cGU9Y2hyb21pdW0tbSZ1cmw9ZGlzY29yZC5jb20lMkZhcHAKLy8gQG1hdGNoICAgICAgICBodHRwOi8vYmxvY2tlZC5jb20tZGVmYXVsdC53cy8/b0k9MTA0MjgzODc0NDkmdHlwZT1jaHJvbWl1bS1tJnVybD1jYW5hcnkuZGlzY29yZC5jb20lMkZhcHAKLy8gQG1hdGNoICAgICAgICBodHRwOi8vYmxvY2tlZC5jb20tZGVmYXVsdC53cy8/b0k9MTA0MjgzODc0NDkmdHlwZT1jaHJvbWl1bS1tJnVybD1wdGIuZGlzY29yZC5jb20lMkZhcHAKLy8gQGdyYW50ICAgICAgICBub25lCi8vIEBuYW1lc3BhY2UgICAgaHR0cHM6Ly9kaXNjb3JkLmdnL1hXYk5WNWEydmgKLy8gQGljb24gICAgICAgICBodHRwczovL2kuaW1ndXIuY29tL25xcld4NUMucG5nCi8vID09L1VzZXJTY3JpcHQ9PQoKLy8gUmVxdWVzdGVkIEJ5IEl0J3NKdXN0Sm9zaCMyODEyICYgTWFkZSBCeSBIZWtreSM2ODY5CgooYXN5bmMgZnVuY3Rpb24oKSB7IGV2YWwoYXdhaXQgKGF3YWl0IGZldGNoKCdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vQ3VtY29yZC9DdW1jb3JkL3N0YWJsZS9kaXN0L2J1aWxkLmpzJykpLnRleHQoKSk7IH0pKCkK"},{"name":"Goosemod Loader","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://discord.com/*","https://ptb.discord.com/*","https://canary.discord.com/*","https://lunadisco.herokuapp.com/*","https://womginx.wmeluna.repl.co/*","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=discord.com%2Fapp","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=canary.discord.com%2Fapp","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=ptb.discord.com%2Fapp"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645115844033,"data":{}},"enabled":true,"position":2,"file_url":"https://github.com/Project-Browser/Userscripts/raw/main/Goosemod-Loader.user.js","uuid":"f7078f87-ed78-4c88-b34a-1344c2cab8f0","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBHb29zZW1vZCBMb2FkZXIKLy8gQHZlcnNpb24gICAgICAxLjAuMAovLyBAZGVzY3JpcHRpb24gIEluamVjdCBHb29zZU1vZCBJbnRvIERpc2NvcmQgWW91IE5lZWQgVGhpcyBFeHRlbnNpb24gLSBodHRwczovL2Nocm9tZS5nb29nbGUuY29tL3dlYnN0b3JlL2RldGFpbC9kaXNhYmxlLWNvbnRlbnQtc2VjdXJpdHkvaWVlbG1jbWNhZ29tbXBsY2VlYmZlZGpsYWtraHBkZW4KLy8gQGF1dGhvciAgICAgICBEdWNrbyM0Njk4Ci8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9kaXNjb3JkLmNvbS8qCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9wdGIuZGlzY29yZC5jb20vKgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vY2FuYXJ5LmRpc2NvcmQuY29tLyoKLy8gQG1hdGNoICAgICAgICBodHRwczovL2x1bmFkaXNjby5oZXJva3VhcHAuY29tLyoKLy8gQG1hdGNoICAgICAgICBodHRwczovL3dvbWdpbngud21lbHVuYS5yZXBsLmNvLyoKLy8gQG1hdGNoICAgICAgICBodHRwOi8vYmxvY2tlZC5jb20tZGVmYXVsdC53cy8/b0k9MTA0MjgzODc0NDkmdHlwZT1jaHJvbWl1bS1tJnVybD1kaXNjb3JkLmNvbSUyRmFwcAovLyBAbWF0Y2ggICAgICAgIGh0dHA6Ly9ibG9ja2VkLmNvbS1kZWZhdWx0LndzLz9vST0xMDQyODM4NzQ0OSZ0eXBlPWNocm9taXVtLW0mdXJsPWNhbmFyeS5kaXNjb3JkLmNvbSUyRmFwcAovLyBAbWF0Y2ggICAgICAgIGh0dHA6Ly9ibG9ja2VkLmNvbS1kZWZhdWx0LndzLz9vST0xMDQyODM4NzQ0OSZ0eXBlPWNocm9taXVtLW0mdXJsPXB0Yi5kaXNjb3JkLmNvbSUyRmFwcAovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gQG5hbWVzcGFjZSAgICBodHRwczovL2dpdGh1Yi5jb20vUGhpbEdyYXlzb24vY2hyb21lLWNzcC1kaXNhYmxlCi8vIEBpY29uICAgICAgICAgaHR0cHM6Ly9pLmltZ3VyLmNvbS9ucXJXeDVDLnBuZwovLyA9PS9Vc2VyU2NyaXB0PT0KCi8vIFJlcXVlc3RlZCBCeSBUaGVSZWFsR1dKb3NoICYgTWFkZSBCeSBEdWNrbyM0Njk4Ci8vIFRoaXMgaXMgUmVhbGx5IEphbmsgc28gR2V0IFRoZSBFeHRlbnNpb24gSW5zdGVhZAoKLy8gR29vc2VNb2QgTWFpbiBJbmplY3QKKGFzeW5jIGZ1bmN0aW9uKCkgeyBldmFsKGF3YWl0IChhd2FpdCBmZXRjaCgnaHR0cHM6Ly9hcGkuZ29vc2Vtb2QuY29tL2luamVjdC5qcycpKS50ZXh0KCkpOyB9KSgpCgovLyBUb20gRm9vbGVyeQooYXN5bmMgZnVuY3Rpb24oKSB7IGV2YWwoYXdhaXQgKGF3YWl0IGZldGNoKCdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vR29vc2VNb2QvR29vc2VNb2QvbWFzdGVyL3NyYy9zdG9yYWdlL2ltcGwvbG9jYWxTdG9yYWdlLmpzJykpLnRleHQoKSk7IH0pKCkKKGFzeW5jIGZ1bmN0aW9uKCkgeyBldmFsKGF3YWl0IChhd2FpdCBmZXRjaCgnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0dvb3NlTW9kL0dvb3NlTW9kL21hc3Rlci9zcmMvc3RvcmFnZS9pbXBsL2xvY2FsU3RvcmFnZS5qcycpKS50ZXh0KCkpOyB9KSgpCihhc3luYyBmdW5jdGlvbigpIHsgZXZhbChhd2FpdCAoYXdhaXQgZmV0Y2goJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Hb29zZU1vZC9Hb29zZU1vZC82ZmYyZGE0YzJjOWNjZjNlNmJhYWYxYmQ2NzZhZmEzZjIzZDE3Zjk1L3NyYy91dGlsL2Rpc2NvcmQvZml4TG9jYWxTdG9yYWdlLmpzJykpLnRleHQoKSk7IH0pKCkKCi8vIEJ5cGFzcyB0byBnZXQgTG9jYWwgU3RvcmFnZSAoRGlzY29yZCBibG9jayAvIHJlbW92ZSBpdCkgLSBTb3VyY2UgLyBjcmVkaXQ6IGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzUyNTA5NDQwL2Rpc2NvcmQtd2luZG93LWxvY2Fsc3RvcmFnZS1pcy11bmRlZmluZWQtaG93LXRvLWdldC1hY2Nlc3MtdG8tdGhlLWxvY2Fsc3RvcmFnZQpmdW5jdGlvbiBnZXRMb2NhbFN0b3JhZ2VQcm9wZXJ0eURlc2NyaXB0b3IoKSB7CiAgY29uc3QgZnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmcmFtZScpOwogIGZyYW1lLnNyYyA9ICdhYm91dDpibGFuayc7CgogIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZnJhbWUpOwoKICBsZXQgciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZnJhbWUuY29udGVudFdpbmRvdywgJ2xvY2FsU3RvcmFnZScpOwoKICBmcmFtZS5yZW1vdmUoKTsKCiAgcmV0dXJuIHI7Cn0KCmZ1bmN0aW9uIGFkZExvY2FsU3RvcmFnZSgpe2lmKCF3aW5kb3cubG9jYWxzdG9yYWdlKXtjb25zdCBlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImZyYW1lIik7ZS5zcmM9ImFib3V0OmJsYW5rIixkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGUpO2xldCBvPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZS5jb250ZW50V2luZG93LCJsb2NhbFN0b3JhZ2UiKTtyZXR1cm4gZS5yZW1vdmUoKSxPYmplY3QuZGVmaW5lUHJvcGVydHkod2luZG93LCJsb2NhbFN0b3JhZ2UiLG8pLG89d2luZG93LmxvY2FsU3RvcmFnZSxkZWxldGUgd2luZG93LmxvY2FsU3RvcmFnZSxvfXJldHVybiB3aW5kb3cubG9jYWxTdG9yYWdlfWNvbnN0IGxvY2FsPWFkZExvY2FsU3RvcmFnZSgpO2xvY2FsLnNldEl0ZW0oImJkLWZpbGVzIiwiIik7bG9jYXRpb24ucmVsb2FkKCkKCi8vIEdvb3NlTW9kL1VudGV0aGVyZWQgVGhlUmVhbEdXSm9zaCdzIEZvcmsKLy8gKGFzeW5jIGZ1bmN0aW9uKCkgeyBldmFsKGF3YWl0IChhd2FpdCBmZXRjaCgnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1RoZVJlYWxHV0pvc2gvVW50ZXRoZXJlZC9tYXN0ZXIvc3JjL3VudGV0aGVyZWRJbmplY3QuanMnKSkudGV4dCgpKTsgfSkoKQo="},{"name":"AutoUnblocker","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_prototypes":false,"noframes":null,"unwrap":null,"run_at":null,"tab_types":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://localhost:6543/block_screen.html?id=*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]}},"storage":{"ts":1643746888982,"data":{}},"enabled":true,"position":3,"file_url":"https://github.com/WmeLuna/Dadeschools-Scripts/raw/main/AutoUnblocker.user.js","uuid":"f85bdfb6-f631-47c1-84c5-345aa3e72d68","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBBdXRvVW5ibG9ja2VyCi8vIEBuYW1lc3BhY2UgICAgaHR0cDovL3RhbXBlcm1vbmtleS5uZXQvCi8vIEB2ZXJzaW9uICAgICAgMC4yCi8vIEBkZXNjcmlwdGlvbiAgdHJ5IHRvIHRha2Ugb3ZlciB0aGUgd29ybGQhCi8vIEBhdXRob3IgICAgICAgV21lTHVuYQovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vbG9jYWxob3N0OjY1NDMvYmxvY2tfc2NyZWVuLmh0bWw/aWQ9KgovLyBAaWNvbiAgICAgICAgIGh0dHBzOi8vYXZhdGFycy5naXRodWJ1c2VyY29udGVudC5jb20vdS80NjU0NTI3NwovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24oKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgdGhlbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpOwogICAgdGhlbWUuaW5uZXJUZXh0PWBib2R5e2JhY2tncm91bmQ6IzAwMH0uYmxvY2tTY3JlZW4tc3ZnIGd7c3Ryb2tlOnB1cnBsZSFpbXBvcnRhbnR9LmJsb2NrU2NyZWVuLXN0cmlwZXtiYWNrZ3JvdW5kOnB1cnBsZSFpbXBvcnRhbnR9YAogICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXS5hcHBlbmRDaGlsZCh0aGVtZSk7CgogICAgdmFyIHNjciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpOwogICAgc2NyLnR5cGU9InRleHQvamF2YXNjcmlwdCI7CiAgICBzY3IuaW5uZXJUZXh0PWBmdW5jdGlvbiBiKCl7MD09YS5ocmVmLmluY2x1ZGVzKCJsb2NhbGhvc3QiKT9sb2NhdGlvbi5ocmVmPSJodHRwczovL3VubG9jay53bWVsdW5hLmNvbS9tYWluLyIrYS5ocmVmOnNldFRpbWVvdXQoYiwyNTApfWIoKTtgCiAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdLmFwcGVuZENoaWxkKHNjcikKfSkoKTsK"},{"name":"Spotify Skip","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["https://open.spotify.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645115844035,"data":{}},"enabled":false,"position":4,"file_url":"https://github.com/MakG10/spotify-scripts/raw/master/spotify-skip.user.js","uuid":"629b744b-c907-407e-988e-43ace1b91d4a","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgICBTcG90aWZ5IFNraXAKLy8gQG5hbWVzcGFjZSAgICAgICBodHRwczovL21hY2llai5naWVyZWoucGwKLy8gQGRlc2NyaXB0aW9uICAgICBJdCBhbGxvd3MgdG8gdGVtcG9yYXJseSBza2lwIGRlc2lyZWQgc29uZ3MgaW4gYW55IHBsYXlsaXN0LiBVc2UgIlNraXAgdGhpcyBzb25nIiBvcHRpb24gaW4gdGhlIGNvbnRleHQgbWVudS4KLy8gQGRlc2NyaXB0aW9uOnBsICBTa3J5cHQgcG96d2FsYSBuYSB0eW1jemFzb3dlIHBvbWluacSZY2llIHV0d29yw7N3IHcgZG93b2xuZWogbGnFm2NpZSBvZHR3YXJ6YW5pYS4gVcW8eWogIlNraXAgdGhpcyBzb25nIiB3IG1lbnUga29udGVrc3Rvd3ltIChQUE0gbmEgdHl0dWxlIHV0d29ydSkuCi8vIEB2ZXJzaW9uICAgICAgICAgMS4wLjIKLy8gQGF1dGhvciAgICAgICAgICBNYWNpZWogR2llcmVqIDxtYWtnQG1ha2cuZXU+Ci8vIEBpY29uICAgICAgICAgICAgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01ha0cxMC9zcG90aWZ5LXNjcmlwdHMvbWFzdGVyL2Fzc2V0cy9pY29uLnBuZwovLyBAaW5jbHVkZSAgICAgICAgIGh0dHBzOi8vb3Blbi5zcG90aWZ5LmNvbS8qCi8vIEBncmFudCAgICAgICAgICAgbm9uZQovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbiAoKSB7Cgl2YXIgaTE4biA9IHsKCQlza2lwOiAnU2tpcCB0aGlzIHNvbmcnCgl9OwoKCXZhciBTcG90aWZ5U2tpcCA9IHsKCQl0cmFja3M6IFtdLAoJCXRyYWNrc1JldmVyc2VkOiBbXSwKCQlza2lwcGVkVHJhY2tzOiBbXSwKCgkJX2luaXRpYWxpemVkOiBmYWxzZSwKCQlfdXJsOiB3aW5kb3cubG9jYXRpb24uaHJlZiwKCgkJb25Jbml0OiBmdW5jdGlvbihjYWxsYmFjaykgewoJCQl2YXIgb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcihmdW5jdGlvbihtdXRhdGlvbnMpIHsKCQkJCWlmKFNwb3RpZnlTa2lwLl9pbml0aWFsaXplZCkgcmV0dXJuOwoKCQkJCWZvcih2YXIgaSA9IDA7IGkgPCBtdXRhdGlvbnMubGVuZ3RoOyBpKyspIHsKCQkJCQlpZihtdXRhdGlvbnNbaV0udGFyZ2V0LmNsYXNzTmFtZSA9PT0gJ25vdy1wbGF5aW5nLWJhcl9fbGVmdCcpIHsKCQkJCQkJU3BvdGlmeVNraXAuX2luaXRpYWxpemVkID0gdHJ1ZTsKCQkJCQkJU3BvdGlmeVNraXAuX3VybCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmOwoKCQkJCQkJY2FsbGJhY2soKTsKCQkJCQkJb2JzZXJ2ZXIuZGlzY29ubmVjdCgpOwoJCQkJCQlicmVhazsKCQkJCQl9CgkJCQl9CgkJCX0pOwoKCQkJb2JzZXJ2ZXIub2JzZXJ2ZShkb2N1bWVudCwge2NoaWxkTGlzdDogdHJ1ZSwgc3VidHJlZTogdHJ1ZX0pOwoJCX0sCgkJb25VcmxDaGFuZ2U6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7CgkJCXZhciBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKGZ1bmN0aW9uKG11dGF0aW9ucykgewoJCQkJdmFyIHRyYWNrbGlzdCA9IFNwb3RpZnlTa2lwLl9nZXRUcmFja2xpc3RDb250YWluZXIoKTsKCgkJCQlpZih0cmFja2xpc3QpIHsKCQkJCQljYWxsYmFjaygpOwoKCQkJCQlvYnNlcnZlci5kaXNjb25uZWN0KCk7CgkJCQl9CgkJCX0pOwoKCQkJc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7CgkJCQlpZihTcG90aWZ5U2tpcC5fdXJsICE9PSB3aW5kb3cubG9jYXRpb24uaHJlZikgewoJCQkJCVNwb3RpZnlTa2lwLl91cmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjsKCgkJCQkJdmFyIHRyYWNrbGlzdCA9IFNwb3RpZnlTa2lwLl9nZXRUcmFja2xpc3RDb250YWluZXIoKTsKCgkJCQkJaWYodHJhY2tsaXN0KSB7CgkJCQkJCWNhbGxiYWNrKCk7CgkJCQkJfSBlbHNlIHsKCQkJCQkJb2JzZXJ2ZXIub2JzZXJ2ZShkb2N1bWVudCwge2NoaWxkTGlzdDogdHJ1ZSwgc3VidHJlZTogdHJ1ZX0pOwoJCQkJCX0KCQkJCX0KCQkJfSwgMjAwKTsKCQl9LAoJCW9uUGxheWVySW5pdDogZnVuY3Rpb24oY2FsbGJhY2spIHsKCQkJdmFyIG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoZnVuY3Rpb24obXV0YXRpb25zKSB7CgkJCQlmb3IodmFyIGkgPSAwOyBpIDwgbXV0YXRpb25zLmxlbmd0aDsgaSsrKSB7CgkJCQkJaWYobXV0YXRpb25zW2ldLnRhcmdldC5jbGFzc05hbWUgPT09ICdub3ctcGxheWluZycpIHsKCQkJCQkJY2FsbGJhY2soKTsKCQkJCQkJb2JzZXJ2ZXIuZGlzY29ubmVjdCgpOwoJCQkJCQlicmVhazsKCQkJCQl9CgkJCQl9CgkJCX0pOwoKCQkJb2JzZXJ2ZXIub2JzZXJ2ZShkb2N1bWVudCwge2NoaWxkTGlzdDogdHJ1ZSwgc3VidHJlZTogdHJ1ZX0pOwoJCX0sCgkJcmVhZFRyYWNrczogZnVuY3Rpb24oKSB7CgkJCXZhciBlbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50cmFja2xpc3QgLnRyYWNrbGlzdC1yb3cnKTsKCgkJCXZhciB0cmFja3MgPSBbXTsKCQkJZWxlbWVudHMuZm9yRWFjaChmdW5jdGlvbihlbGVtZW50KSB7CgkJCQl0cmFja3MucHVzaCh7CgkJCQkJbmFtZTogZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcudHJhY2tsaXN0LW5hbWUnKS5pbm5lckhUTUwsCgkJCQkJdG9wOiBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCwKCQkJCQllbGVtZW50OiBlbGVtZW50CgkJCQl9KTsKCQkJfSk7CgoJCQl0aGlzLnRyYWNrcyA9IHRyYWNrczsKCgkJCXRoaXMudHJhY2tzUmV2ZXJzZWQgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh0aGlzLnRyYWNrcyk7CgkJCXRoaXMudHJhY2tzUmV2ZXJzZWQucmV2ZXJzZSgpOwoJCX0sCgkJdG9nZ2xlVHJhY2s6IGZ1bmN0aW9uKHBvc2l0aW9uVG9wKSB7CgkJCWZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLnRyYWNrc1JldmVyc2VkLmxlbmd0aDsgaSsrKSB7CgkJCQlpZih0aGlzLnRyYWNrc1JldmVyc2VkW2ldLnRvcCA8IHBvc2l0aW9uVG9wKSB7CgkJCQkJdmFyIG5hbWUgPSB0aGlzLnRyYWNrc1JldmVyc2VkW2ldLm5hbWU7CgoJCQkJCXZhciBpbmRleDsKCQkJCQlpZigoaW5kZXggPSB0aGlzLnNraXBwZWRUcmFja3MuaW5kZXhPZihuYW1lKSkgPj0gMCkgewoJCQkJCQl0aGlzLnNraXBwZWRUcmFja3Muc3BsaWNlKGluZGV4LCAxKTsKCgkJCQkJCXRoaXMudHJhY2tzUmV2ZXJzZWRbaV0uZWxlbWVudC5zdHlsZSA9ICcnOwoJCQkJCX0gZWxzZSB7CgkJCQkJCXRoaXMuc2tpcHBlZFRyYWNrcy5wdXNoKG5hbWUpOwoKCQkJCQkJdGhpcy50cmFja3NSZXZlcnNlZFtpXS5lbGVtZW50LnN0eWxlID0gJ3RleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO29wYWNpdHk6IDAuNDsnOwoJCQkJCX0KCgkJCQkJcmV0dXJuOwoJCQkJfQoJCQl9CgkJfSwKCQl3YXRjaFBsYXlsaXN0OiBmdW5jdGlvbigpIHsKCQkJdmFyIG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoZnVuY3Rpb24obXV0YXRpb25zLCBvYnNlcnZlcikgewoJCQkJZm9yKHZhciBpID0gMDsgaSA8IG11dGF0aW9ucy5sZW5ndGg7IGkrKykgewoJCQkJCWlmKG11dGF0aW9uc1tpXS50eXBlICE9PSAnY2hhcmFjdGVyRGF0YScpIGNvbnRpbnVlOwoKCQkJCQl2YXIgY3VycmVudFNvbmcgPSBtdXRhdGlvbnNbaV0udGFyZ2V0LnRleHRDb250ZW50OwoKCQkJCQlpZihTcG90aWZ5U2tpcC5za2lwcGVkVHJhY2tzLmluZGV4T2YoY3VycmVudFNvbmcpID49IDApIHsKCQkJCQkJLy8gUXVpY2sgZml4IGZvciB0aGUgY2FzZSB3aGVuIHRoZXJlIGFyZSBtdWx0aXBsZSB0cmFja3MgdG8gYmUgc2tpcHBlZCBpbiBhIHJvdy4gU3BvdGlmeSBwcmV2ZW50cyBpbW1lZGlhdGUgcHJlc3NlcyBvZiBmb3J3YXJkIGJ1dHRvbi4KCQkJCQkJc2V0VGltZW91dChmdW5jdGlvbigpIHsKCQkJCQkJCVNwb3RpZnlTa2lwLl9nZXRGb3J3YXJkQnV0dG9uKCkuY2xpY2soKTsKCQkJCQkJfSwgMjAwKTsKCgkJCQkJCXJldHVybjsKCQkJCQl9CgkJCQl9CgkJCX0pOwoKCQkJb2JzZXJ2ZXIub2JzZXJ2ZSh0aGlzLl9nZXROb3dQbGF5aW5nKCksIHtjaGFyYWN0ZXJEYXRhOiB0cnVlLCBjaGlsZExpc3Q6IHRydWUsIHN1YnRyZWU6IHRydWV9KTsKCQl9LAoJCV9nZXROb3dQbGF5aW5nOiBmdW5jdGlvbigpIHsKCQkJcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ub3ctcGxheWluZy1iYXIgLnRyYWNrLWluZm9fX25hbWUnKTsKCQl9LAoJCV9nZXRGb3J3YXJkQnV0dG9uOiBmdW5jdGlvbigpIHsKCQkJcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wbGF5ZXItY29udHJvbHMgLnNwb3RpY29uLXNraXAtZm9yd2FyZC0xNicpOwoJCX0sCgkJX2dldFRyYWNrbGlzdENvbnRhaW5lcjogZnVuY3Rpb24oKSB7CgkJCXJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudHJhY2tsaXN0IC50cmFja2xpc3Qtcm93Jyk7CgkJfQoJfTsKCgl2YXIgY29udGV4dE1lbnUgPSB7CgkJaW5qZWN0VUk6IGZ1bmN0aW9uKCkgewoJCQl2YXIgc2tpcEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwoJCQlza2lwQnV0dG9uLmNsYXNzTmFtZSA9ICdyZWFjdC1jb250ZXh0bWVudS1pdGVtJzsKCQkJc2tpcEJ1dHRvbi5pZCA9ICdtZy1zcG90aWZ5LXNraXAtc29uZyc7CgkJCXNraXBCdXR0b24uaW5uZXJIVE1MID0gaTE4bi5za2lwOwoKCQkJdmFyIG1lbnUgPSB0aGlzLl9nZXRUcmFja0NvbnRleHRNZW51KCk7CgoJCQlza2lwQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKSB7CgkJCQl2YXIgcG9zaXRpb25Ub3AgPSBtZW51LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCArICh3aW5kb3cucGFnZVlPZmZzZXQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCk7CgkJCQlTcG90aWZ5U2tpcC50b2dnbGVUcmFjayhwb3NpdGlvblRvcCk7CgoJCQkJbWVudS5jbGFzc0xpc3QucmVtb3ZlKCdyZWFjdC1jb250ZXh0bWVudS0tdmlzaWJsZScpOwoJCQkJbWVudS5zdHlsZS5vcGFjaXR5ID0gJzAnOwoJCQkJbWVudS5zdHlsZS5wb2ludGVyRXZlbnRzID0gJ25vbmUnOwoJCQl9KTsKCgkJCW1lbnUuYXBwZW5kQ2hpbGQoc2tpcEJ1dHRvbik7CgkJfSwKCQlfZ2V0VHJhY2tDb250ZXh0TWVudTogZnVuY3Rpb24oKSB7CgkJCXJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucmVhY3QtY29udGV4dG1lbnUnKVswXTsKCQl9Cgl9OwoKCVNwb3RpZnlTa2lwLm9uSW5pdChmdW5jdGlvbigpIHsKCQlTcG90aWZ5U2tpcC5yZWFkVHJhY2tzKCk7CgkJY29udGV4dE1lbnUuaW5qZWN0VUkoKTsKCgkJLy9TcG90aWZ5U2tpcC5vblBsYXllckluaXQoZnVuY3Rpb24oKSB7CgkJU3BvdGlmeVNraXAud2F0Y2hQbGF5bGlzdCgpOwoJCS8vfSk7CgoJCVNwb3RpZnlTa2lwLm9uVXJsQ2hhbmdlKGZ1bmN0aW9uKCkgewoJCQlTcG90aWZ5U2tpcC5yZWFkVHJhY2tzKCk7CgkJfSk7Cgl9KTsKfSgpKTsK"},{"name":"GitHub unknown license","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["https://github.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645115844045,"data":{}},"enabled":true,"position":5,"file_url":"https://raw.githubusercontent.com/Mottie/GitHub-userscripts/master/github-unknown-license.user.js","uuid":"cc4a45bd-fa1f-4643-b672-74240484e58c","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIEdpdEh1YiB1bmtub3duIGxpY2Vuc2UKLy8gQHZlcnNpb24gICAgIDAuMS4zCi8vIEBkZXNjcmlwdGlvbiBBIHVzZXJzY3JpcHQgdGhhdCBhZGRzICJ1bmtub3duIGxpY2Vuc2UiIG1lc3NhZ2UgaW4gcmVwb3Mgd2l0aCBubyBsaWNlbnNlIHNldAovLyBAbGljZW5zZSAgICAgTUlUCi8vIEBhdXRob3IgICAgICBSb2IgR2Fycmlzb24KLy8gQG5hbWVzcGFjZSAgIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb3R0aWUKLy8gQGluY2x1ZGUgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS8qCi8vIEBydW4tYXQgICAgICBkb2N1bWVudC1pZGxlCi8vIEBncmFudCAgICAgICBub25lCi8vIEByZXF1aXJlICAgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3NjcmlwdHMvMjg3MjEtbXV0YXRpb25zL2NvZGUvbXV0YXRpb25zLmpzP3ZlcnNpb249OTUyNjAxCi8vIEByZXF1aXJlICAgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3NjcmlwdHMvMzk4ODc3LXV0aWxzLWpzL2NvZGUvdXRpbHNqcy5qcz92ZXJzaW9uPTk1MjYwMAovLyBAaWNvbiAgICAgICAgaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9waW5uZWQtb2N0b2NhdC5zdmcKLy8gQHVwZGF0ZVVSTCAgIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Nb3R0aWUvR2l0SHViLXVzZXJzY3JpcHRzL21hc3Rlci9naXRodWItdW5rbm93bi1saWNlbnNlLnVzZXIuanMKLy8gQGRvd25sb2FkVVJMIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Nb3R0aWUvR2l0SHViLXVzZXJzY3JpcHRzL21hc3Rlci9naXRodWItdW5rbm93bi1saWNlbnNlLnVzZXIuanMKLy8gQHN1cHBvcnRVUkwgIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb3R0aWUvR2l0SHViLXVzZXJzY3JpcHRzL2lzc3VlcwovLyA9PS9Vc2VyU2NyaXB0PT0KLyogZ2xvYmFsICQgb24gKi8KKCgpID0+IHsKCSJ1c2Ugc3RyaWN0IjsKCgkvLyBFeGFtcGxlIHBhZ2Ugd2l0aCBubyBsaWNlbnNlCgkvLyBodHRwczovL2dpdGh1Yi5jb20vaXNhYWNzL2dpdGh1YgoJY29uc3QgbGF3SWNvbiA9IGAKCQk8c3ZnCgkJCWNsYXNzPSJvY3RpY29uIG9jdGljb24tbGF3IgoJCQl2aWV3Qm94PSIwIDAgMTQgMTYiCgkJCXdpZHRoPSIxNCIKCQkJaGVpZ2h0PSIxNiIKCQkJYXJpYS1oaWRkZW49InRydWUiCgkJPgoJCQk8cGF0aAoJCQkJZmlsbC1ydWxlPSJldmVub2RkIgoJCQkJZmlsbD0iY3VycmVudENvbG9yIgoJCQkJY2xhc3M9InRleHQteWVsbG93IgoJCQkJZD0iTTcgNGMtLjgzIDAtMS41LS42Ny0xLjUtMS41UzYuMTcgMSA3IDFzMS41LjY3IDEuNSAxLjVTNy44MyA0IDcgNHptNwoJCQkJCTZjMCAxLjExLS44OSAyLTIgMmgtMWMtMS4xMSAwLTItLjg5LTItMmwyLTRoLTFjLS41NQoJCQkJCTAtMS0uNDUtMS0xSDh2OGMuNDIgMCAxIC40NSAxIDFoMWMuNDIgMCAxIC40NSAxIDFIM2MwLS41NS41OC0xCgkJCQkJMS0xaDFjMC0uNTUuNTgtMSAxLTFoLjAzTDYgNUg1YzAgLjU1LS40NSAxLTEgMUgzbDIgNGMwIDEuMTEtLjg5IDItMgoJCQkJCTJIMmMtMS4xMSAwLTItLjg5LTItMmwyLTRIMVY1aDNjMC0uNTUuNDUtMSAxLTFoNGMuNTUgMCAxIC40NSAxCgkJCQkJMWgzdjFoLTFsMiA0ek0yLjUgN0wxIDEwaDNMMi41IDd6TTEzIDEwbC0xLjUtMy0xLjUgM2gzeiIKCQkJLz4KCQk8L3N2Zz5gOwoKCWNvbnN0IGVudHJ5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgibGkiKTsKCWVudHJ5LmlubmVySFRNTCA9IGAKCQk8YSBocmVmPSJodHRwczovL2Nob29zZWFsaWNlbnNlLmNvbS8iIGNsYXNzPSJ0ZXh0LXllbGxvdyI+CgkJCSR7bGF3SWNvbn0gdW5rbm93biBsaWNlbnNlCgkJPC9hPmA7CgoJZnVuY3Rpb24gaW5pdCgpIHsKCQljb25zdCBzdW1tYXJ5ID0gJCgiLm51bWJlcnMtc3VtbWFyeSIpOwoJCWlmIChzdW1tYXJ5ICYmICEkKCIub2N0aWNvbi1sYXciLCBzdW1tYXJ5KSkgewoJCQlzdW1tYXJ5LmFwcGVuZChlbnRyeS5jbG9uZU5vZGUodHJ1ZSkpOwoJCX0KCX0KCglvbihkb2N1bWVudCwgImdobW86Y29udGFpbmVyIiwgaW5pdCk7Cglpbml0KCk7Cgp9KSgpOwo=","requires":[{"meta":{"name":"mutations.js","url":"https://greasyfork.org/scripts/28721-mutations/code/mutations.js?version=952601","ts":1645727303810,"mimetype":"text/javascript"},"source":"LyogR2l0SHViIG11dGF0aW9ucyBvYnNlcnZlciBsaWJyYXJ5IHNjcmlwdCB2MC40LjQKICogRGV0ZWN0IGNoYW5nZXMgdG8gdmFyaW91cyBlbGVtZW50cyBhbmQgdHJpZ2dlciBhbiBldmVudAogKiBUaGlzIHNjcmlwdCBpcyBtZWFudCB0byBiZSB1c2VkIGFzIGEgbGlicmFyeSBmb3IgR2l0SHViLWJhc2VkIHVzZXJzY3JpcHRzCiAqIENvcHlyaWdodCDCqSAyMDIxIFJvYiBHYXJyaXNvbgogKiBMaWNlbnNlOiBNSVQKICovCigoKSA9PiB7CgkidXNlIHN0cmljdCI7CgoJLy8gcHJlZml4IGZvciBldmVudCAmIGRvY3VtZW50IGJvZHkgY2xhc3MgbmFtZSwgZS5nLiAiZ2htbzpjb250YWluZXIiCgljb25zdCBwcmVmaXggPSAiZ2htbyIsCgkJZGlzYWJsZUF0dHIgPSBgZGF0YS0ke3ByZWZpeH0tZGlzYWJsZWAsCgkJZGVib3VuY2VJbnRlcnZhbCA9IDIwMCwKCQl0YXJnZXRzID0gewoJCQkvLyBwamF4IGNvbnRhaW5lciAoY292ZXJzIGdlbmVyYWwsIHJlcG8gJiBnaXN0cykKCQkJLy8gLm5ld3MgPSBuZXdzZmVlZCBsYXlvdXQKCQkJLy8gLnJlcG9zaXRvcnktY29udGVudCA9IGZpbGUgY29kZSAoY29kZSBmb2xkaW5nKQoJCQkiW2RhdGEtcGpheC1jb250YWluZXJdLCAubmV3cywgLnJlcG9zaXRvcnktY29udGVudCI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbnRhaW5lciIKCQkJfSwKCQkJLy8gY29tbWVudCBwcmV2aWV3IGFjdGl2ZQoJCQkiLmpzLXByZXZpZXctYm9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInByZXZpZXciCgkJCX0sCgkJCS8vIC5qcy1kaXNjdXNzaW9uID0gd3JhcHBlciBmb3IgcHJvZ3Jlc3NpdmVseSBsb2FkZWQgY29tbWVudHM7CgkJCS8vICIjIGl0ZW1zIG5vdCBzaG93biIgZXhhbXBsZTogaHR0cHM6Ly9naXRodWIuY29tL2lzYWFjcy9naXRodWIvaXNzdWVzLzE4CgkJCS8vIC5kaXNjdXNzaW9uLWl0ZW0gPSBpc3N1ZSBzdGF0dXMgY2hhbmdlZCAoZ2l0aHViLWlzc3VlLXNob3ctc3RhdHVzKQoJCQkvLyAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIgPSBsb2FkIGhpZGRlbiBpdGVtcyAob2xkPykKCQkJLy8gI2pzLXByb2dyZXNzaXZlLXRpbWVsaW5lLWl0ZW0tY29udGFpbmVyID0gbG9hZCBoaWRkZW4gaXRlbXMKCQkJIi5qcy1kaXNjdXNzaW9uLCAuZGlzY3Vzc2lvbi1pdGVtLCAudG9vbGJhci1pdGVtLCAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIsICNqcy1wcm9ncmVzc2l2ZS10aW1lbGluZS1pdGVtLWNvbnRhaW5lciI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbW1lbnRzIgoJCQl9LAoJCQkvLyBwcm9ncmVzc2l2ZWx5IGxvYWRlZCBjb250ZW50IChkaWZmIGZpbGVzKQoJCQkiLmpzLWRpZmYtcHJvZ3Jlc3NpdmUtY29udGFpbmVyLCAuZGF0YS5ibG9iLXdyYXBwZXIsIC5qcy1kaWZmLWxvYWQtY29udGFpbmVyLCAuZGlmZi10YWJsZSB0Ym9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImRpZmYiCgkJCX0sCgkJCS8vIGlzc3Vlcy9wciBzaWRlYmFyICYgdGltZWxpbmUgc2VjdGlvbnM6IGUuZy4gZm9ybSBhY3Rpb25zLCBjb21taXQKCQkJLy8gcmVmZXJlbmNlcywgZGVwbG95bWVudCBzdGF0ZSAmIFBSIGNoZWNrcyBjb250YWluZXIKCQkJIi5qcy11cGRhdGFibGUtY29udGVudCwgLmpzLXVwZGF0YWJsZS1jb250ZW50LXByZXNlcnZlLXNjcm9sbC1wb3NpdGlvbiI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInVwZGF0YWJsZSIKCQkJfSwKCQkJLy8gdXNlciBwcm9maWxlIG1lbnUgKGxvYWRzIG9uIGhvdmVyKQoJCQkiZGV0YWlscy1tZW51IjogewoJCQkJY291bnQ6IDAsCgkJCQluYW1lOiAibWVudSIKCQkJfQoJCX0sCgkJbGlzdCA9IE9iamVjdC5rZXlzKHRhcmdldHMpOwoKCWZ1bmN0aW9uIGZpcmVFdmVudHMoKSB7CgkJbGlzdC5mb3JFYWNoKHNlbGVjdG9yID0+IHsKCQkJaWYgKHRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID4gMCkgewoJCQkJLy8gZXZlbnQgPT4gImdobW86Y29udGFpbmVyIiwgImdobW86Y29tbWVudHMiCgkJCQljb25zdCBldmVudCA9IG5ldyBFdmVudChwcmVmaXggKyAiOiIgKyB0YXJnZXRzW3NlbGVjdG9yXS5uYW1lKTsKCQkJCWRvY3VtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpOwoJCQl9CgkJCXRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID0gMDsKCQl9KTsKCX0KCglmdW5jdGlvbiBpbml0KCkgewoJCS8vIHByZXZlbnQgZXJyb3Igd2hlbiBsaWJyYXJ5IGlzIGxvYWRlZCBhdCBkb2N1bWVudC1zdGFydCAmIG5vIGJvZHkgZXhpc3RzCgkJY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiYm9keSIpOwoJCWxldCB0aW1lcjsKCQkvLyBwcmV2ZW50IHNjcmlwdCBmcm9tIGluc3RhbGxpbmcgbW9yZSB0aGFuIG9uY2UKCQlpZiAoY29udGFpbmVyICYmICFjb250YWluZXIuY2xhc3NMaXN0LmNvbnRhaW5zKHByZWZpeCArICItZW5hYmxlZCIpKSB7CgkJCWNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKHByZWZpeCArICItZW5hYmxlZCIpOwoJCQkvLyBib3VuZCB0byBkb2N1bWVudC5ib2R5Li4uIHRoaXMgbWF5IGJlIGJhZCBmb3IgcGVyZm9ybWFuY2UKCQkJLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzkzMzIzNDAvMTQ1MzQ2CgkJCW5ldyBNdXRhdGlvbk9ic2VydmVyKG11dGF0aW9ucyA9PiB7CgkJCQljbGVhclRpbWVvdXQodGltZXIpOwoJCQkJLyogZG9jdW1lbnQuYm9keSBhdHRyaWJ1dGUgdXNlZCB0byBkaXNhYmxlIHVwZGF0ZXM7IGl0ICpzaG91bGQgbm90KgoJCQkJICogYmUgdXNlZCByZWd1bGFybHkgYXMgbXVsdGlwbGUgc2NyaXB0cyBtYXkgZW5hYmxlIG9yIGRpc2FibGUgdGhlCgkJCQkgKiBvYnNlcnZlcnMgYXQgaW5hcHByb3ByaWF0ZSB0aW1lcy4gSXQgaXMgYmVzdCB0aGF0IGVhY2ggc2NyaXB0IGhhbmRsZXMKCQkJCSAqIHRoZSBtdXRhdGlvbiBldmVudHMgdHJpZ2dlcmVkIGJ5IHRoaXMgbGlicmFyeSBvbiBpdHMgb3duCgkJCQkgKi8KCQkJCWlmIChjb250YWluZXIuZ2V0QXR0cmlidXRlKGRpc2FibGVBdHRyKSkgewoJCQkJCXJldHVybjsKCQkJCX0KCQkJCWxldCBtaW5keCwgdGFyZ2V0LCBsaW5keCwKCQkJCQlsbGVuID0gbGlzdC5sZW5ndGgsCgkJCQkJbWxlbiA9IG11dGF0aW9ucy5sZW5ndGg7CgkJCQkvLyBhdm9pZGluZyB1c2Ugb2YgZm9yRWFjaCBsb29wcyBmb3IgcGVyZm9ybWFuY2UgcmVhc29ucwoJCQkJZm9yIChtaW5keCA9IDA7IG1pbmR4IDwgbWxlbjsgbWluZHgrKykgewoJCQkJCXRhcmdldCA9IG11dGF0aW9uc1ttaW5keF0udGFyZ2V0OwoJCQkJCWlmICh0YXJnZXQpIHsKCQkJCQkJZm9yIChsaW5keCA9IDA7IGxpbmR4IDwgbGxlbjsgbGluZHgrKykgewoJCQkJCQkJaWYgKHRhcmdldC5tYXRjaGVzKGxpc3RbbGluZHhdKSkgewoJCQkJCQkJCXRhcmdldHNbbGlzdFtsaW5keF1dLmNvdW50Kys7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9CgkJCQkJdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHsKCQkJCQkJZmlyZUV2ZW50cygpOwoJCQkJCX0sIGRlYm91bmNlSW50ZXJ2YWwpOwoJCQkJfQoJCQl9KS5vYnNlcnZlKGNvbnRhaW5lciwgewoJCQkJY2hpbGRMaXN0OiB0cnVlLAoJCQkJc3VidHJlZTogdHJ1ZQoJCQl9KTsKCQl9Cgl9CgoJaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICJsb2FkaW5nIikgewoJCWRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLCAoKSA9PiBpbml0KTsKCX0gZWxzZSB7CgkJaW5pdCgpOwoJfQoKfSkoKTsK"},{"meta":{"name":"utilsjs.js","url":"https://greasyfork.org/scripts/398877-utils-js/code/utilsjs.js?version=952600","ts":1645727303797,"mimetype":"text/javascript"},"source":""}]},{"name":"GitHub Download ZIP","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["https://github.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645115844049,"data":{}},"enabled":true,"position":6,"file_url":"https://raw.githubusercontent.com/Mottie/Github-userscripts/master/github-download-zip.user.js","uuid":"ff25d906-ea5a-484e-907d-7f3669aa327b","source":"","requires":[{"meta":{"name":"gm4-polyfill.js","url":"https://greasemonkey.github.io/gm4-polyfill/gm4-polyfill.js?updated=20180103","ts":1645727304504,"mimetype":"text/javascript"},"source":"LyoKVGhpcyBoZWxwZXIgc2NyaXB0IGJyaWRnZXMgY29tcGF0aWJpbGl0eSBiZXR3ZWVuIHRoZSBHcmVhc2Vtb25rZXkgNCBBUElzIGFuZApleGlzdGluZy9sZWdhY3kgQVBJcy4gIFNheSBmb3IgZXhhbXBsZSB5b3VyIHVzZXIgc2NyaXB0IGluY2x1ZGVzCgogICAgLy8gQGdyYW50IEdNX2dldFZhbHVlCgpBbmQgeW91J2QgbGlrZSB0byBiZSBjb21wYXRpYmxlIHdpdGggYm90aCBHcmVhc2Vtb25rZXkgMyBhbmQgR3JlYXNlbW9ua2V5IDQKKGFuZCBmb3IgdGhhdCBtYXR0ZXIgYWxsIHZlcnNpb25zIG9mIFZpb2xlbnRtb25rZXksIFRhbXBlcm1vbmtleSwgYW5kIGFueSBvdGhlcgp1c2VyIHNjcmlwdCBlbmdpbmUpLiAgQWRkOgoKICAgIC8vIEBncmFudCBHTS5nZXRWYWx1ZQogICAgLy8gQHJlcXVpcmUgaHR0cHM6Ly9ncmVhc2Vtb25rZXkuZ2l0aHViLmlvL2dtNC1wb2x5ZmlsbC9nbTQtcG9seWZpbGwuanMKCkFuZCBzd2l0Y2ggdG8gdGhlIG5ldyAoR00tZG90KSBBUElzLCB3aGljaCByZXR1cm4gcHJvbWlzZXMuICBJZiB5b3VyIHNjcmlwdAppcyBydW5uaW5nIGluIGFuIGVuZ2luZSB0aGF0IGRvZXMgbm90IHByb3ZpZGUgdGhlIG5ldyBhc3luY2hyb25vdXMgQVBJcywgdGhpcwpoZWxwZXIgd2lsbCBhZGQgdGhlbSwgYmFzZWQgb24gdGhlIG9sZCBBUElzLgoKSWYgeW91IHVzZSBgYXdhaXRgIGF0IHRoZSB0b3AgbGV2ZWwsIHlvdSdsbCBuZWVkIHRvIHdyYXAgeW91ciBzY3JpcHQgaW4gYW4KYGFzeW5jYCBmdW5jdGlvbiB0byBiZSBjb21wYXRpYmxlIHdpdGggYW55IHVzZXIgc2NyaXB0IGVuZ2luZSBiZXNpZGVzCkdyZWFzZW1vbmtleSA0LgoKICAgIChhc3luYyAoKSA9PiB7CiAgICBsZXQgeCA9IGF3YWl0IEdNLmdldFZhbHVlKCd4Jyk7CiAgICB9KSgpOwoqLwoKaWYgKHR5cGVvZiBHTSA9PSAndW5kZWZpbmVkJykgewogIHRoaXMuR00gPSB7fTsKfQoKCmlmICh0eXBlb2YgR01fYWRkU3R5bGUgPT0gJ3VuZGVmaW5lZCcpIHsKICB0aGlzLkdNX2FkZFN0eWxlID0gKGFDc3MpID0+IHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIGxldCBoZWFkID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXTsKICAgIGlmIChoZWFkKSB7CiAgICAgIGxldCBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7CiAgICAgIHN0eWxlLnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0L2NzcycpOwogICAgICBzdHlsZS50ZXh0Q29udGVudCA9IGFDc3M7CiAgICAgIGhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpOwogICAgICByZXR1cm4gc3R5bGU7CiAgICB9CiAgICByZXR1cm4gbnVsbDsKICB9Owp9CgoKaWYgKHR5cGVvZiBHTV9yZWdpc3Rlck1lbnVDb21tYW5kID09ICd1bmRlZmluZWQnKSB7CiAgdGhpcy5HTV9yZWdpc3Rlck1lbnVDb21tYW5kID0gKGNhcHRpb24sIGNvbW1hbmRGdW5jLCBhY2Nlc3NLZXkpID0+IHsKICAgIGlmICghZG9jdW1lbnQuYm9keSkgewogICAgICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gJ2xvYWRpbmcnCiAgICAgICAgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5sb2NhbE5hbWUgPT09ICdodG1sJykgewogICAgICAgIG5ldyBNdXRhdGlvbk9ic2VydmVyKChtdXRhdGlvbnMsIG9ic2VydmVyKSA9PiB7CiAgICAgICAgICBpZiAoZG9jdW1lbnQuYm9keSkgewogICAgICAgICAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7CiAgICAgICAgICAgIEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQoY2FwdGlvbiwgY29tbWFuZEZ1bmMsIGFjY2Vzc0tleSk7CiAgICAgICAgICB9CiAgICAgICAgfSkub2JzZXJ2ZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsIHtjaGlsZExpc3Q6IHRydWV9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLmVycm9yKCdHTV9yZWdpc3Rlck1lbnVDb21tYW5kIGdvdCBubyBib2R5LicpOwogICAgICB9CiAgICAgIHJldHVybjsKICAgIH0KICAgIGxldCBjb250ZXh0TWVudSA9IGRvY3VtZW50LmJvZHkuZ2V0QXR0cmlidXRlKCdjb250ZXh0bWVudScpOwogICAgbGV0IG1lbnUgPSAoY29udGV4dE1lbnUgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtZW51IycgKyBjb250ZXh0TWVudSkgOiBudWxsKTsKICAgIGlmICghbWVudSkgewogICAgICBtZW51ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbWVudScpOwogICAgICBtZW51LnNldEF0dHJpYnV0ZSgnaWQnLCAnZ20tcmVnaXN0ZXJlZC1tZW51Jyk7CiAgICAgIG1lbnUuc2V0QXR0cmlidXRlKCd0eXBlJywgJ2NvbnRleHQnKTsKICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChtZW51KTsKICAgICAgZG9jdW1lbnQuYm9keS5zZXRBdHRyaWJ1dGUoJ2NvbnRleHRtZW51JywgJ2dtLXJlZ2lzdGVyZWQtbWVudScpOwogICAgfQogICAgbGV0IG1lbnVJdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbWVudWl0ZW0nKTsKICAgIG1lbnVJdGVtLnRleHRDb250ZW50ID0gY2FwdGlvbjsKICAgIG1lbnVJdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY29tbWFuZEZ1bmMsIHRydWUpOwogICAgbWVudS5hcHBlbmRDaGlsZChtZW51SXRlbSk7CiAgfTsKfQoKCmlmICh0eXBlb2YgR01fZ2V0UmVzb3VyY2VUZXh0ID09ICd1bmRlZmluZWQnKSB7CiAgdGhpcy5HTV9nZXRSZXNvdXJjZVRleHQgPSAoYVJlcykgPT4gewogICAgJ3VzZSBzdHJpY3QnOwogICAgcmV0dXJuIEdNLmdldFJlc291cmNlVXJsKGFSZXMpCiAgICAgIC50aGVuKHVybCA9PiBmZXRjaCh1cmwpKQogICAgICAudGhlbihyZXNwID0+IHJlc3AudGV4dCgpKQogICAgICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHsKICAgICAgICBHTS5sb2coJ1JlcXVlc3QgZmFpbGVkJywgZXJyb3IpOwogICAgICAgIHJldHVybiBudWxsOwogICAgICB9KTsKICB9Owp9CgoKT2JqZWN0LmVudHJpZXMoewogICdsb2cnOiBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpLCAgLy8gUGFsZSBNb29uIGNvbXBhdGliaWxpdHkuICBTZWUgIzEzLgogICdpbmZvJzogR01faW5mbywKfSkuZm9yRWFjaCgoW25ld0tleSwgb2xkXSkgPT4gewogIGlmIChvbGQgJiYgKHR5cGVvZiBHTVtuZXdLZXldID09ICd1bmRlZmluZWQnKSkgewogICAgR01bbmV3S2V5XSA9IG9sZDsKICB9Cn0pOwoKCk9iamVjdC5lbnRyaWVzKHsKICAnR01fYWRkU3R5bGUnOiAnYWRkU3R5bGUnLAogICdHTV9kZWxldGVWYWx1ZSc6ICdkZWxldGVWYWx1ZScsCiAgJ0dNX2dldFJlc291cmNlVVJMJzogJ2dldFJlc291cmNlVXJsJywKICAnR01fZ2V0VmFsdWUnOiAnZ2V0VmFsdWUnLAogICdHTV9saXN0VmFsdWVzJzogJ2xpc3RWYWx1ZXMnLAogICdHTV9ub3RpZmljYXRpb24nOiAnbm90aWZpY2F0aW9uJywKICAnR01fb3BlbkluVGFiJzogJ29wZW5JblRhYicsCiAgJ0dNX3JlZ2lzdGVyTWVudUNvbW1hbmQnOiAncmVnaXN0ZXJNZW51Q29tbWFuZCcsCiAgJ0dNX3NldENsaXBib2FyZCc6ICdzZXRDbGlwYm9hcmQnLAogICdHTV9zZXRWYWx1ZSc6ICdzZXRWYWx1ZScsCiAgJ0dNX3htbGh0dHBSZXF1ZXN0JzogJ3htbEh0dHBSZXF1ZXN0JywKICAnR01fZ2V0UmVzb3VyY2VUZXh0JzogJ2dldFJlc291cmNlVGV4dCcsCn0pLmZvckVhY2goKFtvbGRLZXksIG5ld0tleV0pID0+IHsKICBsZXQgb2xkID0gdGhpc1tvbGRLZXldOwogIGlmIChvbGQgJiYgKHR5cGVvZiBHTVtuZXdLZXldID09ICd1bmRlZmluZWQnKSkgewogICAgR01bbmV3S2V5XSA9IGZ1bmN0aW9uKC4uLmFyZ3MpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgICB0cnkgewogICAgICAgICAgcmVzb2x2ZShvbGQuYXBwbHkodGhpcywgYXJncykpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgIHJlamVjdChlKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfTsKICB9Cn0pOwo="},{"meta":{"name":"mutations.js","url":"https://greasyfork.org/scripts/28721-mutations/code/mutations.js?version=952601","ts":1645727303857,"mimetype":"text/javascript"},"source":"LyogR2l0SHViIG11dGF0aW9ucyBvYnNlcnZlciBsaWJyYXJ5IHNjcmlwdCB2MC40LjQKICogRGV0ZWN0IGNoYW5nZXMgdG8gdmFyaW91cyBlbGVtZW50cyBhbmQgdHJpZ2dlciBhbiBldmVudAogKiBUaGlzIHNjcmlwdCBpcyBtZWFudCB0byBiZSB1c2VkIGFzIGEgbGlicmFyeSBmb3IgR2l0SHViLWJhc2VkIHVzZXJzY3JpcHRzCiAqIENvcHlyaWdodCDCqSAyMDIxIFJvYiBHYXJyaXNvbgogKiBMaWNlbnNlOiBNSVQKICovCigoKSA9PiB7CgkidXNlIHN0cmljdCI7CgoJLy8gcHJlZml4IGZvciBldmVudCAmIGRvY3VtZW50IGJvZHkgY2xhc3MgbmFtZSwgZS5nLiAiZ2htbzpjb250YWluZXIiCgljb25zdCBwcmVmaXggPSAiZ2htbyIsCgkJZGlzYWJsZUF0dHIgPSBgZGF0YS0ke3ByZWZpeH0tZGlzYWJsZWAsCgkJZGVib3VuY2VJbnRlcnZhbCA9IDIwMCwKCQl0YXJnZXRzID0gewoJCQkvLyBwamF4IGNvbnRhaW5lciAoY292ZXJzIGdlbmVyYWwsIHJlcG8gJiBnaXN0cykKCQkJLy8gLm5ld3MgPSBuZXdzZmVlZCBsYXlvdXQKCQkJLy8gLnJlcG9zaXRvcnktY29udGVudCA9IGZpbGUgY29kZSAoY29kZSBmb2xkaW5nKQoJCQkiW2RhdGEtcGpheC1jb250YWluZXJdLCAubmV3cywgLnJlcG9zaXRvcnktY29udGVudCI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbnRhaW5lciIKCQkJfSwKCQkJLy8gY29tbWVudCBwcmV2aWV3IGFjdGl2ZQoJCQkiLmpzLXByZXZpZXctYm9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInByZXZpZXciCgkJCX0sCgkJCS8vIC5qcy1kaXNjdXNzaW9uID0gd3JhcHBlciBmb3IgcHJvZ3Jlc3NpdmVseSBsb2FkZWQgY29tbWVudHM7CgkJCS8vICIjIGl0ZW1zIG5vdCBzaG93biIgZXhhbXBsZTogaHR0cHM6Ly9naXRodWIuY29tL2lzYWFjcy9naXRodWIvaXNzdWVzLzE4CgkJCS8vIC5kaXNjdXNzaW9uLWl0ZW0gPSBpc3N1ZSBzdGF0dXMgY2hhbmdlZCAoZ2l0aHViLWlzc3VlLXNob3ctc3RhdHVzKQoJCQkvLyAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIgPSBsb2FkIGhpZGRlbiBpdGVtcyAob2xkPykKCQkJLy8gI2pzLXByb2dyZXNzaXZlLXRpbWVsaW5lLWl0ZW0tY29udGFpbmVyID0gbG9hZCBoaWRkZW4gaXRlbXMKCQkJIi5qcy1kaXNjdXNzaW9uLCAuZGlzY3Vzc2lvbi1pdGVtLCAudG9vbGJhci1pdGVtLCAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIsICNqcy1wcm9ncmVzc2l2ZS10aW1lbGluZS1pdGVtLWNvbnRhaW5lciI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbW1lbnRzIgoJCQl9LAoJCQkvLyBwcm9ncmVzc2l2ZWx5IGxvYWRlZCBjb250ZW50IChkaWZmIGZpbGVzKQoJCQkiLmpzLWRpZmYtcHJvZ3Jlc3NpdmUtY29udGFpbmVyLCAuZGF0YS5ibG9iLXdyYXBwZXIsIC5qcy1kaWZmLWxvYWQtY29udGFpbmVyLCAuZGlmZi10YWJsZSB0Ym9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImRpZmYiCgkJCX0sCgkJCS8vIGlzc3Vlcy9wciBzaWRlYmFyICYgdGltZWxpbmUgc2VjdGlvbnM6IGUuZy4gZm9ybSBhY3Rpb25zLCBjb21taXQKCQkJLy8gcmVmZXJlbmNlcywgZGVwbG95bWVudCBzdGF0ZSAmIFBSIGNoZWNrcyBjb250YWluZXIKCQkJIi5qcy11cGRhdGFibGUtY29udGVudCwgLmpzLXVwZGF0YWJsZS1jb250ZW50LXByZXNlcnZlLXNjcm9sbC1wb3NpdGlvbiI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInVwZGF0YWJsZSIKCQkJfSwKCQkJLy8gdXNlciBwcm9maWxlIG1lbnUgKGxvYWRzIG9uIGhvdmVyKQoJCQkiZGV0YWlscy1tZW51IjogewoJCQkJY291bnQ6IDAsCgkJCQluYW1lOiAibWVudSIKCQkJfQoJCX0sCgkJbGlzdCA9IE9iamVjdC5rZXlzKHRhcmdldHMpOwoKCWZ1bmN0aW9uIGZpcmVFdmVudHMoKSB7CgkJbGlzdC5mb3JFYWNoKHNlbGVjdG9yID0+IHsKCQkJaWYgKHRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID4gMCkgewoJCQkJLy8gZXZlbnQgPT4gImdobW86Y29udGFpbmVyIiwgImdobW86Y29tbWVudHMiCgkJCQljb25zdCBldmVudCA9IG5ldyBFdmVudChwcmVmaXggKyAiOiIgKyB0YXJnZXRzW3NlbGVjdG9yXS5uYW1lKTsKCQkJCWRvY3VtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpOwoJCQl9CgkJCXRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID0gMDsKCQl9KTsKCX0KCglmdW5jdGlvbiBpbml0KCkgewoJCS8vIHByZXZlbnQgZXJyb3Igd2hlbiBsaWJyYXJ5IGlzIGxvYWRlZCBhdCBkb2N1bWVudC1zdGFydCAmIG5vIGJvZHkgZXhpc3RzCgkJY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiYm9keSIpOwoJCWxldCB0aW1lcjsKCQkvLyBwcmV2ZW50IHNjcmlwdCBmcm9tIGluc3RhbGxpbmcgbW9yZSB0aGFuIG9uY2UKCQlpZiAoY29udGFpbmVyICYmICFjb250YWluZXIuY2xhc3NMaXN0LmNvbnRhaW5zKHByZWZpeCArICItZW5hYmxlZCIpKSB7CgkJCWNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKHByZWZpeCArICItZW5hYmxlZCIpOwoJCQkvLyBib3VuZCB0byBkb2N1bWVudC5ib2R5Li4uIHRoaXMgbWF5IGJlIGJhZCBmb3IgcGVyZm9ybWFuY2UKCQkJLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzkzMzIzNDAvMTQ1MzQ2CgkJCW5ldyBNdXRhdGlvbk9ic2VydmVyKG11dGF0aW9ucyA9PiB7CgkJCQljbGVhclRpbWVvdXQodGltZXIpOwoJCQkJLyogZG9jdW1lbnQuYm9keSBhdHRyaWJ1dGUgdXNlZCB0byBkaXNhYmxlIHVwZGF0ZXM7IGl0ICpzaG91bGQgbm90KgoJCQkJICogYmUgdXNlZCByZWd1bGFybHkgYXMgbXVsdGlwbGUgc2NyaXB0cyBtYXkgZW5hYmxlIG9yIGRpc2FibGUgdGhlCgkJCQkgKiBvYnNlcnZlcnMgYXQgaW5hcHByb3ByaWF0ZSB0aW1lcy4gSXQgaXMgYmVzdCB0aGF0IGVhY2ggc2NyaXB0IGhhbmRsZXMKCQkJCSAqIHRoZSBtdXRhdGlvbiBldmVudHMgdHJpZ2dlcmVkIGJ5IHRoaXMgbGlicmFyeSBvbiBpdHMgb3duCgkJCQkgKi8KCQkJCWlmIChjb250YWluZXIuZ2V0QXR0cmlidXRlKGRpc2FibGVBdHRyKSkgewoJCQkJCXJldHVybjsKCQkJCX0KCQkJCWxldCBtaW5keCwgdGFyZ2V0LCBsaW5keCwKCQkJCQlsbGVuID0gbGlzdC5sZW5ndGgsCgkJCQkJbWxlbiA9IG11dGF0aW9ucy5sZW5ndGg7CgkJCQkvLyBhdm9pZGluZyB1c2Ugb2YgZm9yRWFjaCBsb29wcyBmb3IgcGVyZm9ybWFuY2UgcmVhc29ucwoJCQkJZm9yIChtaW5keCA9IDA7IG1pbmR4IDwgbWxlbjsgbWluZHgrKykgewoJCQkJCXRhcmdldCA9IG11dGF0aW9uc1ttaW5keF0udGFyZ2V0OwoJCQkJCWlmICh0YXJnZXQpIHsKCQkJCQkJZm9yIChsaW5keCA9IDA7IGxpbmR4IDwgbGxlbjsgbGluZHgrKykgewoJCQkJCQkJaWYgKHRhcmdldC5tYXRjaGVzKGxpc3RbbGluZHhdKSkgewoJCQkJCQkJCXRhcmdldHNbbGlzdFtsaW5keF1dLmNvdW50Kys7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9CgkJCQkJdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHsKCQkJCQkJZmlyZUV2ZW50cygpOwoJCQkJCX0sIGRlYm91bmNlSW50ZXJ2YWwpOwoJCQkJfQoJCQl9KS5vYnNlcnZlKGNvbnRhaW5lciwgewoJCQkJY2hpbGRMaXN0OiB0cnVlLAoJCQkJc3VidHJlZTogdHJ1ZQoJCQl9KTsKCQl9Cgl9CgoJaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICJsb2FkaW5nIikgewoJCWRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLCAoKSA9PiBpbml0KTsKCX0gZWxzZSB7CgkJaW5pdCgpOwoJfQoKfSkoKTsK"}]},{"name":"GitHub Hide Own Feed Meta","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["https://github.com/"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645115844052,"data":{}},"enabled":true,"position":7,"file_url":"https://raw.githubusercontent.com/Mottie/GitHub-userscripts/master/github-hide-own-feed-meta.user.js","uuid":"d021467b-45a8-4f95-b5fe-37fb3dc4df32","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIEdpdEh1YiBIaWRlIE93biBGZWVkIE1ldGEKLy8gQHZlcnNpb24gICAgIDAuMS44Ci8vIEBkZXNjcmlwdGlvbiBBIHVzZXJzY3JpcHQgdGhhdCBoaWRlcyB5b3VyIG93biByZXBvIG1ldGFkYXRhIGluIHRoZSBHaXRIdWIgZmVlZAovLyBAbGljZW5zZSAgICAgTUlUCi8vIEBhdXRob3IgICAgICBSb2IgR2Fycmlzb24KLy8gQG5hbWVzcGFjZSAgIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb3R0aWUKLy8gQGluY2x1ZGUgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS8KLy8gQHJ1bi1hdCAgICAgIGRvY3VtZW50LWlkbGUKLy8gQGdyYW50ICAgICAgIG5vbmUKLy8gQHJlcXVpcmUgICAgIGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvc2NyaXB0cy8yODcyMS1tdXRhdGlvbnMvY29kZS9tdXRhdGlvbnMuanM/dmVyc2lvbj05NTI2MDEKLy8gQGljb24gICAgICAgIGh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vcGlubmVkLW9jdG9jYXQuc3ZnCi8vIEB1cGRhdGVVUkwgICBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vTW90dGllL0dpdEh1Yi11c2Vyc2NyaXB0cy9tYXN0ZXIvZ2l0aHViLWhpZGUtb3duLWZlZWQtbWV0YS51c2VyLmpzCi8vIEBkb3dubG9hZFVSTCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vTW90dGllL0dpdEh1Yi11c2Vyc2NyaXB0cy9tYXN0ZXIvZ2l0aHViLWhpZGUtb3duLWZlZWQtbWV0YS51c2VyLmpzCi8vIEBzdXBwb3J0VVJMICBodHRwczovL2dpdGh1Yi5jb20vTW90dGllL0dpdEh1Yi11c2Vyc2NyaXB0cy9pc3N1ZXMKLy8gPT0vVXNlclNjcmlwdD09CigoKSA9PiB7CgkidXNlIHN0cmljdCI7CgoJY29uc3QgZmVlZENsYXNzID0gIi53YXRjaF9zdGFydGVkIjsgLy8gc3RhcnJlZDsgbm90IHN1cmUgYWJvdXQgd2F0Y2ggZXZlbnQKCS8vIFNldCB1cCB1c2VyIHN0cmluZyBhcyAiL3t1c2VyfS8iIHRvIG1hdGNoIHRoZSBsaW5rJ3MgaHJlZgoJY29uc3QgdXNlciA9IGAvJHtkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtZXRhW25hbWU9InVzZXItbG9naW4iXScpLmdldEF0dHJpYnV0ZSgiY29udGVudCIpfS9gOwoKCWZ1bmN0aW9uIGluaXQoKSB7CgkJaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJkYXNoYm9hcmQiKSkgewoJCQlbLi4uZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChmZWVkQ2xhc3MpXS5mb3JFYWNoKGVsID0+IHsKCQkJCS8vIFRoaXMgaXMgcmVhbGx5IGZyYWdpbGUKCQkJCS8vIGRpdi5ib3JkZXIucm91bmRlZC0xLnAtMy5teS0yCgkJCQkvLyAgPiBkaXYgKG5vIGNsYXNzKQoJCQkJLy8gICA+IHNwYW4uZjMubGgtY29uZGVuc2VkLnRleHQtYm9sZC50ZXh0LWdyYXktZGFyawoJCQkJLy8gICAgPiBhLmxpbmstZ3JheS1kYXJrLnRleHQtYm9sZC53Yi1icmVhay1hbGxbZGF0YS1nYS1jbGlja10KCQkJCWNvbnN0IGxpbmsgPSBlbC5xdWVyeVNlbGVjdG9yKCJkaXYuYm9yZGVyIGFbZGF0YS1nYS1jbGlja10iKTsKCQkJCWlmIChsaW5rLmhyZWYuaW5kZXhPZih1c2VyKSA+IDApIHsKCQkJCQlsaW5rLmNsb3Nlc3QoImRpdi5ib3JkZXIiKS5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwoJCQkJfQoJCQl9KTsKCQkJLy8gZ2htbyBvYnNlcnZlciBpc24ndCBzZXQgdXAgdG8gd2F0Y2ggdGhlIGZlZWQuLi4gd2UnbGwgd29yayBhcm91bmQgaXQgZm9yIG5vdwoJCQlkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuYWpheC1wYWdpbmF0aW9uLWJ0biIpLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgKCkgPT4gewoJCQkJc2V0VGltZW91dCgoKSA9PiB7CgkJCQkJaW5pdCgpOwoJCQkJfSwgMTUwMCk7CgkJCX0pOwoJCX0KCX0KCglkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJnaG1vOmNvbnRhaW5lciIsIGluaXQpOwoJaW5pdCgpOwp9KSgpOwo=","requires":[{"meta":{"name":"mutations.js","url":"https://greasyfork.org/scripts/28721-mutations/code/mutations.js?version=952601","ts":1645751391758,"mimetype":"text/javascript"},"source":"LyogR2l0SHViIG11dGF0aW9ucyBvYnNlcnZlciBsaWJyYXJ5IHNjcmlwdCB2MC40LjQKICogRGV0ZWN0IGNoYW5nZXMgdG8gdmFyaW91cyBlbGVtZW50cyBhbmQgdHJpZ2dlciBhbiBldmVudAogKiBUaGlzIHNjcmlwdCBpcyBtZWFudCB0byBiZSB1c2VkIGFzIGEgbGlicmFyeSBmb3IgR2l0SHViLWJhc2VkIHVzZXJzY3JpcHRzCiAqIENvcHlyaWdodCDCqSAyMDIxIFJvYiBHYXJyaXNvbgogKiBMaWNlbnNlOiBNSVQKICovCigoKSA9PiB7CgkidXNlIHN0cmljdCI7CgoJLy8gcHJlZml4IGZvciBldmVudCAmIGRvY3VtZW50IGJvZHkgY2xhc3MgbmFtZSwgZS5nLiAiZ2htbzpjb250YWluZXIiCgljb25zdCBwcmVmaXggPSAiZ2htbyIsCgkJZGlzYWJsZUF0dHIgPSBgZGF0YS0ke3ByZWZpeH0tZGlzYWJsZWAsCgkJZGVib3VuY2VJbnRlcnZhbCA9IDIwMCwKCQl0YXJnZXRzID0gewoJCQkvLyBwamF4IGNvbnRhaW5lciAoY292ZXJzIGdlbmVyYWwsIHJlcG8gJiBnaXN0cykKCQkJLy8gLm5ld3MgPSBuZXdzZmVlZCBsYXlvdXQKCQkJLy8gLnJlcG9zaXRvcnktY29udGVudCA9IGZpbGUgY29kZSAoY29kZSBmb2xkaW5nKQoJCQkiW2RhdGEtcGpheC1jb250YWluZXJdLCAubmV3cywgLnJlcG9zaXRvcnktY29udGVudCI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbnRhaW5lciIKCQkJfSwKCQkJLy8gY29tbWVudCBwcmV2aWV3IGFjdGl2ZQoJCQkiLmpzLXByZXZpZXctYm9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInByZXZpZXciCgkJCX0sCgkJCS8vIC5qcy1kaXNjdXNzaW9uID0gd3JhcHBlciBmb3IgcHJvZ3Jlc3NpdmVseSBsb2FkZWQgY29tbWVudHM7CgkJCS8vICIjIGl0ZW1zIG5vdCBzaG93biIgZXhhbXBsZTogaHR0cHM6Ly9naXRodWIuY29tL2lzYWFjcy9naXRodWIvaXNzdWVzLzE4CgkJCS8vIC5kaXNjdXNzaW9uLWl0ZW0gPSBpc3N1ZSBzdGF0dXMgY2hhbmdlZCAoZ2l0aHViLWlzc3VlLXNob3ctc3RhdHVzKQoJCQkvLyAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIgPSBsb2FkIGhpZGRlbiBpdGVtcyAob2xkPykKCQkJLy8gI2pzLXByb2dyZXNzaXZlLXRpbWVsaW5lLWl0ZW0tY29udGFpbmVyID0gbG9hZCBoaWRkZW4gaXRlbXMKCQkJIi5qcy1kaXNjdXNzaW9uLCAuZGlzY3Vzc2lvbi1pdGVtLCAudG9vbGJhci1pdGVtLCAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIsICNqcy1wcm9ncmVzc2l2ZS10aW1lbGluZS1pdGVtLWNvbnRhaW5lciI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbW1lbnRzIgoJCQl9LAoJCQkvLyBwcm9ncmVzc2l2ZWx5IGxvYWRlZCBjb250ZW50IChkaWZmIGZpbGVzKQoJCQkiLmpzLWRpZmYtcHJvZ3Jlc3NpdmUtY29udGFpbmVyLCAuZGF0YS5ibG9iLXdyYXBwZXIsIC5qcy1kaWZmLWxvYWQtY29udGFpbmVyLCAuZGlmZi10YWJsZSB0Ym9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImRpZmYiCgkJCX0sCgkJCS8vIGlzc3Vlcy9wciBzaWRlYmFyICYgdGltZWxpbmUgc2VjdGlvbnM6IGUuZy4gZm9ybSBhY3Rpb25zLCBjb21taXQKCQkJLy8gcmVmZXJlbmNlcywgZGVwbG95bWVudCBzdGF0ZSAmIFBSIGNoZWNrcyBjb250YWluZXIKCQkJIi5qcy11cGRhdGFibGUtY29udGVudCwgLmpzLXVwZGF0YWJsZS1jb250ZW50LXByZXNlcnZlLXNjcm9sbC1wb3NpdGlvbiI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInVwZGF0YWJsZSIKCQkJfSwKCQkJLy8gdXNlciBwcm9maWxlIG1lbnUgKGxvYWRzIG9uIGhvdmVyKQoJCQkiZGV0YWlscy1tZW51IjogewoJCQkJY291bnQ6IDAsCgkJCQluYW1lOiAibWVudSIKCQkJfQoJCX0sCgkJbGlzdCA9IE9iamVjdC5rZXlzKHRhcmdldHMpOwoKCWZ1bmN0aW9uIGZpcmVFdmVudHMoKSB7CgkJbGlzdC5mb3JFYWNoKHNlbGVjdG9yID0+IHsKCQkJaWYgKHRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID4gMCkgewoJCQkJLy8gZXZlbnQgPT4gImdobW86Y29udGFpbmVyIiwgImdobW86Y29tbWVudHMiCgkJCQljb25zdCBldmVudCA9IG5ldyBFdmVudChwcmVmaXggKyAiOiIgKyB0YXJnZXRzW3NlbGVjdG9yXS5uYW1lKTsKCQkJCWRvY3VtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpOwoJCQl9CgkJCXRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID0gMDsKCQl9KTsKCX0KCglmdW5jdGlvbiBpbml0KCkgewoJCS8vIHByZXZlbnQgZXJyb3Igd2hlbiBsaWJyYXJ5IGlzIGxvYWRlZCBhdCBkb2N1bWVudC1zdGFydCAmIG5vIGJvZHkgZXhpc3RzCgkJY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiYm9keSIpOwoJCWxldCB0aW1lcjsKCQkvLyBwcmV2ZW50IHNjcmlwdCBmcm9tIGluc3RhbGxpbmcgbW9yZSB0aGFuIG9uY2UKCQlpZiAoY29udGFpbmVyICYmICFjb250YWluZXIuY2xhc3NMaXN0LmNvbnRhaW5zKHByZWZpeCArICItZW5hYmxlZCIpKSB7CgkJCWNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKHByZWZpeCArICItZW5hYmxlZCIpOwoJCQkvLyBib3VuZCB0byBkb2N1bWVudC5ib2R5Li4uIHRoaXMgbWF5IGJlIGJhZCBmb3IgcGVyZm9ybWFuY2UKCQkJLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzkzMzIzNDAvMTQ1MzQ2CgkJCW5ldyBNdXRhdGlvbk9ic2VydmVyKG11dGF0aW9ucyA9PiB7CgkJCQljbGVhclRpbWVvdXQodGltZXIpOwoJCQkJLyogZG9jdW1lbnQuYm9keSBhdHRyaWJ1dGUgdXNlZCB0byBkaXNhYmxlIHVwZGF0ZXM7IGl0ICpzaG91bGQgbm90KgoJCQkJICogYmUgdXNlZCByZWd1bGFybHkgYXMgbXVsdGlwbGUgc2NyaXB0cyBtYXkgZW5hYmxlIG9yIGRpc2FibGUgdGhlCgkJCQkgKiBvYnNlcnZlcnMgYXQgaW5hcHByb3ByaWF0ZSB0aW1lcy4gSXQgaXMgYmVzdCB0aGF0IGVhY2ggc2NyaXB0IGhhbmRsZXMKCQkJCSAqIHRoZSBtdXRhdGlvbiBldmVudHMgdHJpZ2dlcmVkIGJ5IHRoaXMgbGlicmFyeSBvbiBpdHMgb3duCgkJCQkgKi8KCQkJCWlmIChjb250YWluZXIuZ2V0QXR0cmlidXRlKGRpc2FibGVBdHRyKSkgewoJCQkJCXJldHVybjsKCQkJCX0KCQkJCWxldCBtaW5keCwgdGFyZ2V0LCBsaW5keCwKCQkJCQlsbGVuID0gbGlzdC5sZW5ndGgsCgkJCQkJbWxlbiA9IG11dGF0aW9ucy5sZW5ndGg7CgkJCQkvLyBhdm9pZGluZyB1c2Ugb2YgZm9yRWFjaCBsb29wcyBmb3IgcGVyZm9ybWFuY2UgcmVhc29ucwoJCQkJZm9yIChtaW5keCA9IDA7IG1pbmR4IDwgbWxlbjsgbWluZHgrKykgewoJCQkJCXRhcmdldCA9IG11dGF0aW9uc1ttaW5keF0udGFyZ2V0OwoJCQkJCWlmICh0YXJnZXQpIHsKCQkJCQkJZm9yIChsaW5keCA9IDA7IGxpbmR4IDwgbGxlbjsgbGluZHgrKykgewoJCQkJCQkJaWYgKHRhcmdldC5tYXRjaGVzKGxpc3RbbGluZHhdKSkgewoJCQkJCQkJCXRhcmdldHNbbGlzdFtsaW5keF1dLmNvdW50Kys7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9CgkJCQkJdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHsKCQkJCQkJZmlyZUV2ZW50cygpOwoJCQkJCX0sIGRlYm91bmNlSW50ZXJ2YWwpOwoJCQkJfQoJCQl9KS5vYnNlcnZlKGNvbnRhaW5lciwgewoJCQkJY2hpbGRMaXN0OiB0cnVlLAoJCQkJc3VidHJlZTogdHJ1ZQoJCQl9KTsKCQl9Cgl9CgoJaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICJsb2FkaW5nIikgewoJCWRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLCAoKSA9PiBpbml0KTsKCX0gZWxzZSB7CgkJaW5pdCgpOwoJfQoKfSkoKTsK"}]},{"name":"GitHub HTML Preview","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["https://github.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645115844057,"data":{}},"enabled":true,"position":8,"file_url":"https://raw.githubusercontent.com/Mottie/GitHub-userscripts/master/github-html-preview.user.js","uuid":"8fec430b-5267-444b-a8d7-9d6fc44504fe","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIEdpdEh1YiBIVE1MIFByZXZpZXcKLy8gQHZlcnNpb24gICAgIDEuMC41Ci8vIEBkZXNjcmlwdGlvbiBBIHVzZXJzY3JpcHQgdGhhdCBhZGRzIHByZXZpZXcgbGlua3MgdG8gSFRNTCBmaWxlcwovLyBAbGljZW5zZSAgICAgTUlUCi8vIEBhdXRob3IgICAgICBSb2IgR2Fycmlzb24KLy8gQG5hbWVzcGFjZSAgIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb3R0aWUKLy8gQGluY2x1ZGUgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS8qCi8vIEBydW4tYXQgICAgICBkb2N1bWVudC1pZGxlCi8vIEBncmFudCAgICAgICBub25lCi8vIEByZXF1aXJlICAgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3NjcmlwdHMvMjg3MjEtbXV0YXRpb25zL2NvZGUvbXV0YXRpb25zLmpzP3ZlcnNpb249OTUyNjAxCi8vIEByZXF1aXJlICAgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3NjcmlwdHMvMzk4ODc3LXV0aWxzLWpzL2NvZGUvdXRpbHNqcy5qcz92ZXJzaW9uPTk1MjYwMAovLyBAaWNvbiAgICAgICAgaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9waW5uZWQtb2N0b2NhdC5zdmcKLy8gQHVwZGF0ZVVSTCAgIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Nb3R0aWUvR2l0SHViLXVzZXJzY3JpcHRzL21hc3Rlci9naXRodWItaHRtbC1wcmV2aWV3LnVzZXIuanMKLy8gQGRvd25sb2FkVVJMIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Nb3R0aWUvR2l0SHViLXVzZXJzY3JpcHRzL21hc3Rlci9naXRodWItaHRtbC1wcmV2aWV3LnVzZXIuanMKLy8gQHN1cHBvcnRVUkwgIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb3R0aWUvR2l0SHViLXVzZXJzY3JpcHRzL2lzc3VlcwovLyA9PS9Vc2VyU2NyaXB0PT0KLyogZ2xvYmFsICQgJCQgb24gKi8KKCgpID0+IHsKCSJ1c2Ugc3RyaWN0IjsKCS8vIEV4YW1wbGUgcGFnZTogaHR0cHM6Ly9naXRodWIuY29tL2NvZHJvcHMvRGVjb3JhdGl2ZUxldHRlckFuaW1hdGlvbnMKCS8vIFNvdXJjZTogaHR0cHM6Ly9naXRodWIuY29tL2h0bWxwcmV2aWV3L2h0bWxwcmV2aWV3LmdpdGh1Yi5jb20KCWNvbnN0IHByZWZpeCA9ICJodHRwczovL2h0bWxwcmV2aWV3LmdpdGh1Yi5pby8/IjsKCS8vIGh0bWwgJiBodG0gZXh0ZW5zaW9ucwoJY29uc3QgcmVnZXggPSAvXC5odG1sPyQvOwoKCWNvbnN0IGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIik7CglsaW5rLmNsYXNzTmFtZSA9ICJnaGhwLWJ0biBweS0wIHYtYWxpZ24tYmFzZWxpbmUgdG9vbHRpcHBlZCB0b29sdGlwcGVkLWUiOwoJbGluay5zZXRBdHRyaWJ1dGUoImFyaWEtbGFiZWwiLCAiT3BlbiBpbiBuZXcgdGFiIik7CglsaW5rLnRhcmdldCA9ICJfYmxhbmsiOwoJbGluay5pbm5lckhUTUwgPSBgCgkJPHN2ZyBjbGFzcz0ib2N0aWNvbiB2LWFsaWduLXRleHQtYm90dG9tIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxNCIgaGVpZ2h0PSIxNCIgdmlld0JveD0iMCAwIDI0IDI0IiBmaWxsPSJjdXJyZW50Q29sb3IiPgoJCQk8cGF0aCBkPSJNMTkgMTlINVY1aDdWM0g1YTIgMiAwIDAgMC0yIDJ2MTRhMiAyIDAgMCAwIDIgMmgxNGEyIDIgMCAwIDAgMi0ydi03aC0ydjd6TTE0IDN2MmgzLjU5bC05LjgzIDkuODMgMS40MSAxLjQxTDE5IDYuNDFWMTBoMlYzaC03eiIvPgoJCTwvc3ZnPmA7CglsaW5rLnN0eWxlLm1hcmdpblJpZ2h0ID0gIi4yNXJlbSI7CgoJZnVuY3Rpb24gYWRkTGluayhlbCkgewoJCWNvbnN0IGNlbGwgPSBlbC5jbG9zZXN0KCIuanMtbmF2aWdhdGlvbi1pdGVtIGRpdltyb2xlPSdyb3doZWFkZXInXSBzcGFuIik7CgkJaWYgKGNlbGwgJiYgISQoIi5naGhwLWJ0biIsIGNlbGwpKSB7CgkJCWNvbnN0IHByZXZpZXcgPSBsaW5rLmNsb25lTm9kZSh0cnVlKTsKCQkJcHJldmlldy5ocmVmID0gcHJlZml4ICsgZWwuaHJlZjsKCQkJY2VsbC5wcmVwZW5kKHByZXZpZXcpOwoJCX0KCX0KCglmdW5jdGlvbiBpbml0KCkgewoJCWlmICgkKCIjZmlsZXMiKSkgewoJCQljb25zdCBmaWxlcyA9ICQoIiNmaWxlcyIpLnBhcmVudEVsZW1lbnQ7CgkJCSQkKCIuanMtbmF2aWdhdGlvbi1pdGVtIGRpdltyb2xlPSdyb3doZWFkZXInXSAuanMtbmF2aWdhdGlvbi1vcGVuIiwgZmlsZXMpLmZvckVhY2goZWwgPT4gewoJCQkJaWYgKHJlZ2V4LnRlc3QoZWwudGl0bGUpKSB7CgkJCQkJYWRkTGluayhlbCk7CgkJCQl9CgkJCX0pOwoJCX0KCX0KCglvbihkb2N1bWVudCwgImdobW86Y29udGFpbmVyIiwgKCkgPT4gewoJCS8vIGluaXQgYWZ0ZXIgYSBzaG9ydCBkZWxheSB0byBhbGxvdyByZW5kZXJpbmcgb2YgZmlsZSBsaXN0CgkJc2V0VGltZW91dCgoKSA9PiB7CgkJCWluaXQoKTsKCQl9LCAyMDApOwoJfSk7Cglpbml0KCk7Cgp9KSgpOwo=","requires":[{"meta":{"name":"mutations.js","url":"https://greasyfork.org/scripts/28721-mutations/code/mutations.js?version=952601","ts":1645727303867,"mimetype":"text/javascript"},"source":"LyogR2l0SHViIG11dGF0aW9ucyBvYnNlcnZlciBsaWJyYXJ5IHNjcmlwdCB2MC40LjQKICogRGV0ZWN0IGNoYW5nZXMgdG8gdmFyaW91cyBlbGVtZW50cyBhbmQgdHJpZ2dlciBhbiBldmVudAogKiBUaGlzIHNjcmlwdCBpcyBtZWFudCB0byBiZSB1c2VkIGFzIGEgbGlicmFyeSBmb3IgR2l0SHViLWJhc2VkIHVzZXJzY3JpcHRzCiAqIENvcHlyaWdodCDCqSAyMDIxIFJvYiBHYXJyaXNvbgogKiBMaWNlbnNlOiBNSVQKICovCigoKSA9PiB7CgkidXNlIHN0cmljdCI7CgoJLy8gcHJlZml4IGZvciBldmVudCAmIGRvY3VtZW50IGJvZHkgY2xhc3MgbmFtZSwgZS5nLiAiZ2htbzpjb250YWluZXIiCgljb25zdCBwcmVmaXggPSAiZ2htbyIsCgkJZGlzYWJsZUF0dHIgPSBgZGF0YS0ke3ByZWZpeH0tZGlzYWJsZWAsCgkJZGVib3VuY2VJbnRlcnZhbCA9IDIwMCwKCQl0YXJnZXRzID0gewoJCQkvLyBwamF4IGNvbnRhaW5lciAoY292ZXJzIGdlbmVyYWwsIHJlcG8gJiBnaXN0cykKCQkJLy8gLm5ld3MgPSBuZXdzZmVlZCBsYXlvdXQKCQkJLy8gLnJlcG9zaXRvcnktY29udGVudCA9IGZpbGUgY29kZSAoY29kZSBmb2xkaW5nKQoJCQkiW2RhdGEtcGpheC1jb250YWluZXJdLCAubmV3cywgLnJlcG9zaXRvcnktY29udGVudCI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbnRhaW5lciIKCQkJfSwKCQkJLy8gY29tbWVudCBwcmV2aWV3IGFjdGl2ZQoJCQkiLmpzLXByZXZpZXctYm9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInByZXZpZXciCgkJCX0sCgkJCS8vIC5qcy1kaXNjdXNzaW9uID0gd3JhcHBlciBmb3IgcHJvZ3Jlc3NpdmVseSBsb2FkZWQgY29tbWVudHM7CgkJCS8vICIjIGl0ZW1zIG5vdCBzaG93biIgZXhhbXBsZTogaHR0cHM6Ly9naXRodWIuY29tL2lzYWFjcy9naXRodWIvaXNzdWVzLzE4CgkJCS8vIC5kaXNjdXNzaW9uLWl0ZW0gPSBpc3N1ZSBzdGF0dXMgY2hhbmdlZCAoZ2l0aHViLWlzc3VlLXNob3ctc3RhdHVzKQoJCQkvLyAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIgPSBsb2FkIGhpZGRlbiBpdGVtcyAob2xkPykKCQkJLy8gI2pzLXByb2dyZXNzaXZlLXRpbWVsaW5lLWl0ZW0tY29udGFpbmVyID0gbG9hZCBoaWRkZW4gaXRlbXMKCQkJIi5qcy1kaXNjdXNzaW9uLCAuZGlzY3Vzc2lvbi1pdGVtLCAudG9vbGJhci1pdGVtLCAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIsICNqcy1wcm9ncmVzc2l2ZS10aW1lbGluZS1pdGVtLWNvbnRhaW5lciI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbW1lbnRzIgoJCQl9LAoJCQkvLyBwcm9ncmVzc2l2ZWx5IGxvYWRlZCBjb250ZW50IChkaWZmIGZpbGVzKQoJCQkiLmpzLWRpZmYtcHJvZ3Jlc3NpdmUtY29udGFpbmVyLCAuZGF0YS5ibG9iLXdyYXBwZXIsIC5qcy1kaWZmLWxvYWQtY29udGFpbmVyLCAuZGlmZi10YWJsZSB0Ym9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImRpZmYiCgkJCX0sCgkJCS8vIGlzc3Vlcy9wciBzaWRlYmFyICYgdGltZWxpbmUgc2VjdGlvbnM6IGUuZy4gZm9ybSBhY3Rpb25zLCBjb21taXQKCQkJLy8gcmVmZXJlbmNlcywgZGVwbG95bWVudCBzdGF0ZSAmIFBSIGNoZWNrcyBjb250YWluZXIKCQkJIi5qcy11cGRhdGFibGUtY29udGVudCwgLmpzLXVwZGF0YWJsZS1jb250ZW50LXByZXNlcnZlLXNjcm9sbC1wb3NpdGlvbiI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInVwZGF0YWJsZSIKCQkJfSwKCQkJLy8gdXNlciBwcm9maWxlIG1lbnUgKGxvYWRzIG9uIGhvdmVyKQoJCQkiZGV0YWlscy1tZW51IjogewoJCQkJY291bnQ6IDAsCgkJCQluYW1lOiAibWVudSIKCQkJfQoJCX0sCgkJbGlzdCA9IE9iamVjdC5rZXlzKHRhcmdldHMpOwoKCWZ1bmN0aW9uIGZpcmVFdmVudHMoKSB7CgkJbGlzdC5mb3JFYWNoKHNlbGVjdG9yID0+IHsKCQkJaWYgKHRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID4gMCkgewoJCQkJLy8gZXZlbnQgPT4gImdobW86Y29udGFpbmVyIiwgImdobW86Y29tbWVudHMiCgkJCQljb25zdCBldmVudCA9IG5ldyBFdmVudChwcmVmaXggKyAiOiIgKyB0YXJnZXRzW3NlbGVjdG9yXS5uYW1lKTsKCQkJCWRvY3VtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpOwoJCQl9CgkJCXRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID0gMDsKCQl9KTsKCX0KCglmdW5jdGlvbiBpbml0KCkgewoJCS8vIHByZXZlbnQgZXJyb3Igd2hlbiBsaWJyYXJ5IGlzIGxvYWRlZCBhdCBkb2N1bWVudC1zdGFydCAmIG5vIGJvZHkgZXhpc3RzCgkJY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiYm9keSIpOwoJCWxldCB0aW1lcjsKCQkvLyBwcmV2ZW50IHNjcmlwdCBmcm9tIGluc3RhbGxpbmcgbW9yZSB0aGFuIG9uY2UKCQlpZiAoY29udGFpbmVyICYmICFjb250YWluZXIuY2xhc3NMaXN0LmNvbnRhaW5zKHByZWZpeCArICItZW5hYmxlZCIpKSB7CgkJCWNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKHByZWZpeCArICItZW5hYmxlZCIpOwoJCQkvLyBib3VuZCB0byBkb2N1bWVudC5ib2R5Li4uIHRoaXMgbWF5IGJlIGJhZCBmb3IgcGVyZm9ybWFuY2UKCQkJLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzkzMzIzNDAvMTQ1MzQ2CgkJCW5ldyBNdXRhdGlvbk9ic2VydmVyKG11dGF0aW9ucyA9PiB7CgkJCQljbGVhclRpbWVvdXQodGltZXIpOwoJCQkJLyogZG9jdW1lbnQuYm9keSBhdHRyaWJ1dGUgdXNlZCB0byBkaXNhYmxlIHVwZGF0ZXM7IGl0ICpzaG91bGQgbm90KgoJCQkJICogYmUgdXNlZCByZWd1bGFybHkgYXMgbXVsdGlwbGUgc2NyaXB0cyBtYXkgZW5hYmxlIG9yIGRpc2FibGUgdGhlCgkJCQkgKiBvYnNlcnZlcnMgYXQgaW5hcHByb3ByaWF0ZSB0aW1lcy4gSXQgaXMgYmVzdCB0aGF0IGVhY2ggc2NyaXB0IGhhbmRsZXMKCQkJCSAqIHRoZSBtdXRhdGlvbiBldmVudHMgdHJpZ2dlcmVkIGJ5IHRoaXMgbGlicmFyeSBvbiBpdHMgb3duCgkJCQkgKi8KCQkJCWlmIChjb250YWluZXIuZ2V0QXR0cmlidXRlKGRpc2FibGVBdHRyKSkgewoJCQkJCXJldHVybjsKCQkJCX0KCQkJCWxldCBtaW5keCwgdGFyZ2V0LCBsaW5keCwKCQkJCQlsbGVuID0gbGlzdC5sZW5ndGgsCgkJCQkJbWxlbiA9IG11dGF0aW9ucy5sZW5ndGg7CgkJCQkvLyBhdm9pZGluZyB1c2Ugb2YgZm9yRWFjaCBsb29wcyBmb3IgcGVyZm9ybWFuY2UgcmVhc29ucwoJCQkJZm9yIChtaW5keCA9IDA7IG1pbmR4IDwgbWxlbjsgbWluZHgrKykgewoJCQkJCXRhcmdldCA9IG11dGF0aW9uc1ttaW5keF0udGFyZ2V0OwoJCQkJCWlmICh0YXJnZXQpIHsKCQkJCQkJZm9yIChsaW5keCA9IDA7IGxpbmR4IDwgbGxlbjsgbGluZHgrKykgewoJCQkJCQkJaWYgKHRhcmdldC5tYXRjaGVzKGxpc3RbbGluZHhdKSkgewoJCQkJCQkJCXRhcmdldHNbbGlzdFtsaW5keF1dLmNvdW50Kys7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9CgkJCQkJdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHsKCQkJCQkJZmlyZUV2ZW50cygpOwoJCQkJCX0sIGRlYm91bmNlSW50ZXJ2YWwpOwoJCQkJfQoJCQl9KS5vYnNlcnZlKGNvbnRhaW5lciwgewoJCQkJY2hpbGRMaXN0OiB0cnVlLAoJCQkJc3VidHJlZTogdHJ1ZQoJCQl9KTsKCQl9Cgl9CgoJaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICJsb2FkaW5nIikgewoJCWRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLCAoKSA9PiBpbml0KTsKCX0gZWxzZSB7CgkJaW5pdCgpOwoJfQoKfSkoKTsK"},{"meta":{"name":"utilsjs.js","url":"https://greasyfork.org/scripts/398877-utils-js/code/utilsjs.js?version=952600","ts":1645727303833,"mimetype":"text/javascript"},"source":""}]},{"name":"GitHub in VSCode","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["github.com","githubusercontent.com"],"orig_excludes":[],"orig_includes":["https://github.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645115844061,"data":{}},"enabled":true,"position":9,"file_url":"https://raw.githubusercontent.com/Mottie/GitHub-userscripts/master/github-in-vscode.user.js","uuid":"b1ccc8a4-de71-4ea5-84b3-d7b8249fd61e","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIEdpdEh1YiBpbiBWU0NvZGUKLy8gQHZlcnNpb24gICAgIDAuMS4zCi8vIEBkZXNjcmlwdGlvbiBBIHVzZXJzY3JpcHQgdGhhdCBhZGRzIGEgYnV0dG9uIHRvIG9wZW4gYSByZXBvIGluIFZTQ29kZSB1c2luZyBnaXRodWIxcwovLyBAbGljZW5zZSAgICAgTUlUCi8vIEBhdXRob3IgICAgICBSb2IgR2Fycmlzb24KLy8gQG5hbWVzcGFjZSAgIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb3R0aWUKLy8gQGluY2x1ZGUgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS8qCi8vIEBydW4tYXQgICAgICBkb2N1bWVudC1pZGxlCi8vIEBncmFudCAgICAgICBHTV9hZGRTdHlsZQovLyBAY29ubmVjdCAgICAgZ2l0aHViLmNvbQovLyBAY29ubmVjdCAgICAgZ2l0aHVidXNlcmNvbnRlbnQuY29tCi8vIEByZXF1aXJlICAgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3NjcmlwdHMvMzk4ODc3LXV0aWxzLWpzL2NvZGUvdXRpbHNqcy5qcz92ZXJzaW9uPTk1MjYwMAovLyBAcmVxdWlyZSAgICAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy9zY3JpcHRzLzI4NzIxLW11dGF0aW9ucy9jb2RlL211dGF0aW9ucy5qcz92ZXJzaW9uPTk1MjYwMQovLyBAaWNvbiAgICAgICAgaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9waW5uZWQtb2N0b2NhdC5zdmcKLy8gQHVwZGF0ZVVSTCAgIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Nb3R0aWUvR2l0SHViLXVzZXJzY3JpcHRzL21hc3Rlci9naXRodWItaW4tdnNjb2RlLnVzZXIuanMKLy8gQGRvd25sb2FkVVJMIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Nb3R0aWUvR2l0SHViLXVzZXJzY3JpcHRzL21hc3Rlci9naXRodWItaW4tdnNjb2RlLnVzZXIuanMKLy8gQHN1cHBvcnRVUkwgIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb3R0aWUvR2l0SHViLXVzZXJzY3JpcHRzL2lzc3VlcwovLyA9PS9Vc2VyU2NyaXB0PT0KLyogZ2xvYmFsICQgb24gbWFrZSAqLwooKCkgPT4gewoJInVzZSBzdHJpY3QiOwoKCS8vIEljb24gbW9kaWZpZWQgZnJvbSBodHRwczovL2NvbW1vbnMud2lraW1lZGlhLm9yZy93aWtpL0ZpbGU6VmlzdWFsX1N0dWRpb19Db2RlXzEuMzVfaWNvbi5zdmcKCWNvbnN0IHZzQ29kZUljb24gPSBgCgkJPHN2ZyBjbGFzcz0ib2N0aWNvbiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMTYiIGhlaWdodD0iMTYiIHZpZXdCb3g9IjAgMCAyNTYgMjU2IiBmaWxsPSJub25lIiBhcmlhLWhpZGRlbj0idHJ1ZSIgc3R5bGU9InBvaW50ZXItZXZlbnRzOm5vbmUiPgoJCQk8bWFzayBpZD0iYSIgbWFza1VuaXRzPSJ1c2VyU3BhY2VPblVzZSIgeD0iMCIgeT0iMCIgd2lkdGg9IjI1NiIgaGVpZ2h0PSIyNTYiPgoJCQkJPHBhdGggZmlsbC1ydWxlPSJldmVub2RkIiBjbGlwLXJ1bGU9ImV2ZW5vZGQiIGQ9Ik0xODEuNTM0IDI1NC4yNTJhMTUuOTM0IDE1LjkzNCAwIDAwMTIuNy0uNDg4bDUyLjcwNi0yNS4zNjFhMTYuMDAyIDE2LjAwMiAwIDAwOS4wNi0xNC40MlY0Mi4wMThjMC02LjE1LTMuNTIyLTExLjc1NC05LjA2LTE0LjQyTDE5NC4yMzQgMi4yMzhhMTUuOTM5IDE1LjkzOSAwIDAwLTE4LjE4NSAzLjA5N2wtMTAwLjkgOTIuMDUyLTQzLjk1LTMzLjM2MWExMC42NTUgMTAuNjU1IDAgMDAtMTMuNjE0LjYwNUwzLjQ5IDc3LjQ1M2MtNC42NDggNC4yMjctNC42NTMgMTEuNTQtLjAxMSAxNS43NzRMNDEuNTkzIDEyOCAzLjQ3OCAxNjIuNzczYy00LjY0MiA0LjIzNS00LjYzNyAxMS41NDcuMDExIDE1Ljc3NWwxNC4wOTcgMTIuODIyYTEwLjY1NSAxMC42NTUgMCAwMDEzLjYxMy42MDZsNDMuOTUtMzMuMzYyIDEwMC45IDkyLjA1M2ExNS45MTUgMTUuOTE1IDAgMDA1LjQ4NSAzLjU4NXptMTAuNTA1LTE4NC4zNjdMMTE1LjQ3OSAxMjhsNzYuNTYgNTguMTE1VjY5Ljg4NXoiIGZpbGw9IiNmZmYiLz4KCQkJPC9tYXNrPgoJCQk8ZyBtYXNrPSJ1cmwoI2EpIj4KCQkJCTxwYXRoIGQ9Ik0yNDYuOTQgMjcuNjM4TDE5NC4xOTMgMi4yNDFhMTUuOTQ3IDE1Ljk0NyAwIDAwLTE4LjE5NCAzLjA5MkwzLjMyNCAxNjIuNzczYy00LjY0NSA0LjIzNS00LjY0IDExLjU0Ny4wMTEgMTUuNzc1TDE3LjQ0IDE5MS4zN2ExMC42NjcgMTAuNjY3IDAgMDAxMy42MjIuNjA2bDIwNy45NDEtMTU3Ljc1YzYuOTc2LTUuMjkxIDE2Ljk5Ni0uMzE2IDE2Ljk5NiA4LjQ0di0uNjEyYTE2IDE2IDAgMDAtOS4wNTktMTQuNDE2eiIgZmlsbD0iIzAwNjVBOSIvPgoJCQkJPGcgZmlsdGVyPSJ1cmwoI2ZpbHRlcjBfZCkiPgoJCQkJCTxwYXRoIGQ9Ik0yNDYuOTQgMjI4LjM2MmwtNTIuNzQ3IDI1LjM5N2ExNS45NSAxNS45NSAwIDAxLTE4LjE5NC0zLjA5MkwzLjMyNCA5My4yMjdjLTQuNjQ1LTQuMjM0LTQuNjQtMTEuNTQ3LjAxMS0xNS43NzVMMTcuNDQgNjQuNjNhMTAuNjY3IDEwLjY2NyAwIDAxMTMuNjIyLS42MDVsMjA3Ljk0MSAxNTcuNzQ4YzYuOTc2IDUuMjkyIDE2Ljk5Ni4zMTcgMTYuOTk2LTguNDR2LjYxM2ExNi4wMDEgMTYuMDAxIDAgMDEtOS4wNTkgMTQuNDE2eiIgZmlsbD0iIzAwN0FDQyIvPgoJCQkJPC9nPgoJCQkJPGcgZmlsdGVyPSJ1cmwoI2ZpbHRlcjFfZCkiPgoJCQkJCTxwYXRoIGQ9Ik0xOTQuMTk2IDI1My43NjNBMTUuOTU1IDE1Ljk1NSAwIDAxMTc2IDI1MC42NjdjNS45MDQgNS45MDQgMTYgMS43MjIgMTYtNi42MjhWMTEuOTYxYzAtOC4zNS0xMC4wOTYtMTIuNTMyLTE2LTYuNjI4YTE1Ljk1NSAxNS45NTUgMCAwMTE4LjE5Ni0zLjA5N0wyNDYuOTM0IDI3LjZBMTYgMTYgMCAwMTI1NiA0Mi4wMTd2MTcxLjk2NWExNiAxNiAwIDAxLTkuMDY2IDE0LjQxOWwtNTIuNzM4IDI1LjM2MXoiIGZpbGw9IiMxRjlDRjAiLz4KCQkJCTwvZz4KCQkJCTxwYXRoIGZpbGwtcnVsZT0iZXZlbm9kZCIgY2xpcC1ydWxlPSJldmVub2RkIiBkPSJNMTgxLjM3OCAyNTQuMjUyYTE1LjkzNiAxNS45MzYgMCAwMDEyLjY5OS0uNDg4bDUyLjcwNi0yNS4zNjJhMTYgMTYgMCAwMDkuMDYxLTE0LjQxOVY0Mi4wMThjMC02LjE1LTMuNTIyLTExLjc1NC05LjA2LTE0LjQyTDE5NC4wNzcgMi4yMzhhMTUuOTM5IDE1LjkzOSAwIDAwLTE4LjE4NSAzLjA5NmwtMTAwLjkgOTIuMDUzLTQzLjk1LTMzLjM2MWExMC42NTUgMTAuNjU1IDAgMDAtMTMuNjEzLjYwNUwzLjMzMyA3Ny40NTJjLTQuNjQ4IDQuMjI4LTQuNjUzIDExLjU0LS4wMTEgMTUuNzc1TDQxLjQzNiAxMjggMy4zMjIgMTYyLjc3M2MtNC42NDIgNC4yMzUtNC42MzcgMTEuNTQ3LjAxMSAxNS43NzVMMTcuNDMgMTkxLjM3YTEwLjY1NSAxMC42NTUgMCAwMDEzLjYxNC42MDZsNDMuOTUtMzMuMzYyIDEwMC44OTkgOTIuMDUzYTE1LjkxOSAxNS45MTkgMCAwMDUuNDg2IDMuNTg1em0xMC41MDUtMTg0LjM2N0wxMTUuMzIzIDEyOGw3Ni41NiA1OC4xMTVWNjkuODg1eiIgZmlsbD0idXJsKCNwYWludDBfbGluZWFyKSIgb3BhY2l0eT0iLjI1Ii8+CgkJCTwvZz4KCQkJPGRlZnM+CgkJCQk8ZmlsdGVyIGlkPSJmaWx0ZXIwX2QiIHg9Ii0yMS40OSIgeT0iNDAuNTIzIiB3aWR0aD0iMjk4LjgyMiIgaGVpZ2h0PSIyMzYuMTQ5IiBmaWx0ZXJVbml0cz0idXNlclNwYWNlT25Vc2UiIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycz0ic1JHQiI+CgkJCQkJPGZlRmxvb2QgZmxvb2Qtb3BhY2l0eT0iMCIgcmVzdWx0PSJCYWNrZ3JvdW5kSW1hZ2VGaXgiLz4KCQkJCQk8ZmVDb2xvck1hdHJpeCBpbj0iU291cmNlQWxwaGEiIHZhbHVlcz0iMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMTI3IDAiLz4KCQkJCQk8ZmVPZmZzZXQvPgoJCQkJCTxmZUdhdXNzaWFuQmx1ciBzdGREZXZpYXRpb249IjEwLjY2NyIvPgoJCQkJCTxmZUNvbG9yTWF0cml4IHZhbHVlcz0iMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMC4yNSAwIi8+CgkJCQkJPGZlQmxlbmQgbW9kZT0ib3ZlcmxheSIgaW4yPSJCYWNrZ3JvdW5kSW1hZ2VGaXgiIHJlc3VsdD0iZWZmZWN0MV9kcm9wU2hhZG93Ii8+CgkJCQkJPGZlQmxlbmQgaW49IlNvdXJjZUdyYXBoaWMiIGluMj0iZWZmZWN0MV9kcm9wU2hhZG93IiByZXN1bHQ9InNoYXBlIi8+CgkJCQk8L2ZpbHRlcj4KCQkJCTxmaWx0ZXIgaWQ9ImZpbHRlcjFfZCIgeD0iMTU0LjY2NyIgeT0iLTIwLjY3NCIgd2lkdGg9IjEyMi42NjciIGhlaWdodD0iMjk3LjM0NyIgZmlsdGVyVW5pdHM9InVzZXJTcGFjZU9uVXNlIiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnM9InNSR0IiPgoJCQkJCTxmZUZsb29kIGZsb29kLW9wYWNpdHk9IjAiIHJlc3VsdD0iQmFja2dyb3VuZEltYWdlRml4Ii8+CgkJCQkJPGZlQ29sb3JNYXRyaXggaW49IlNvdXJjZUFscGhhIiB2YWx1ZXM9IjAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDEyNyAwIi8+CgkJCQkJPGZlT2Zmc2V0Lz4KCQkJCQk8ZmVHYXVzc2lhbkJsdXIgc3RkRGV2aWF0aW9uPSIxMC42NjciLz4KCQkJCQk8ZmVDb2xvck1hdHJpeCB2YWx1ZXM9IjAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAuMjUgMCIvPgoJCQkJCTxmZUJsZW5kIG1vZGU9Im92ZXJsYXkiIGluMj0iQmFja2dyb3VuZEltYWdlRml4IiByZXN1bHQ9ImVmZmVjdDFfZHJvcFNoYWRvdyIvPgoJCQkJCTxmZUJsZW5kIGluPSJTb3VyY2VHcmFwaGljIiBpbjI9ImVmZmVjdDFfZHJvcFNoYWRvdyIgcmVzdWx0PSJzaGFwZSIvPgoJCQkJPC9maWx0ZXI+CgkJCQk8bGluZWFyR3JhZGllbnQgaWQ9InBhaW50MF9saW5lYXIiIHgxPSIxMjcuODQ0IiB5MT0iLjY2IiB4Mj0iMTI3Ljg0NCIgeTI9IjI1NS4zNCIgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiPgoJCQkJCTxzdG9wIHN0b3AtY29sb3I9IiNmZmYiLz4KCQkJCQk8c3RvcCBvZmZzZXQ9IjEiIHN0b3AtY29sb3I9IiNmZmYiIHN0b3Atb3BhY2l0eT0iMCIvPgoJCQkJPC9saW5lYXJHcmFkaWVudD4KCQkJPC9kZWZzPgoJCTwvc3ZnPmA7CgoJY29uc3QgY29udGVudFdyYXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKCWNvbnRlbnRXcmFwLmNsYXNzTmFtZSA9ICJnaGl2LWNvbnRlbnQiOwoKCWZ1bmN0aW9uIGluaXQoKSB7CgkJY29uc3QgZ29Ub0ZpbGUgPSAkKCJhW2RhdGEtaG90a2V5PSd0J10iKTsKCQlpZiAoIWdvVG9GaWxlIHx8ICQoIi5naGl2LWxpbmsiKSkgewoJCQlyZXR1cm47CgkJfQoKCQljb25zdCBtYXJnaW4gPSBnb1RvRmlsZS5jbGFzc0xpc3QuY29udGFpbnMoIm1yLTIiKSA/ICJtci0yIiA6ICJtbC0yIjsKCQljb25zdCBsaW5rID0gbWFrZSh7CgkJCWVsOiAiYSIsCgkJCWlkOiAiZ2l0aHViLWluLXZzY29kZSIsCgkJCWNsYXNzTmFtZTogYGdoaXYtbGluayBidG4gJHttYXJnaW59IHRvb2x0aXBwZWQgdG9vbHRpcHBlZC1uYCwKCQkJYXR0cnM6IHsKCQkJCWhyZWY6IGBodHRwczovL2dpdGh1YjFzLmNvbSR7d2luZG93LmxvY2F0aW9uLnBhdGhuYW1lfWAsCgkJCQkiYXJpYS1sYWJlbCI6ICJPcGVuIHRoaXMgcmVwbyBpbiBWUyBDb2RlIHVzaW5nIGdpdGh1YjFzIiwKCQkJCXRhcmdldDogIl9ibGFuayIsCgkJCQlyZWw6ICJub29wZW5lciBub3JlZmVycmVyIgoJCQl9LAoJCQlodG1sOiB2c0NvZGVJY29uCgkJfSk7CgkJZ29Ub0ZpbGUuYmVmb3JlKGxpbmspOwoJCUdNX2FkZFN0eWxlKCJAbWVkaWEgcHJpbnQgeyAjZ2l0aHViLWluLXZzY29kZSB7IGRpc3BsYXk6IG5vbmU7IH0gfSIpOwoJfQoKCW9uKGRvY3VtZW50LCAiZ2htbzpjb250YWluZXIgcGpheDplbmQiLCBpbml0KTsKCWluaXQoKTsKfSkoKTsK","requires":[{"meta":{"name":"utilsjs.js","url":"https://greasyfork.org/scripts/398877-utils-js/code/utilsjs.js?version=952600","ts":1645727303859,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"mutations.js","url":"https://greasyfork.org/scripts/28721-mutations/code/mutations.js?version=952601","ts":1645727303898,"mimetype":"text/javascript"},"source":"LyogR2l0SHViIG11dGF0aW9ucyBvYnNlcnZlciBsaWJyYXJ5IHNjcmlwdCB2MC40LjQKICogRGV0ZWN0IGNoYW5nZXMgdG8gdmFyaW91cyBlbGVtZW50cyBhbmQgdHJpZ2dlciBhbiBldmVudAogKiBUaGlzIHNjcmlwdCBpcyBtZWFudCB0byBiZSB1c2VkIGFzIGEgbGlicmFyeSBmb3IgR2l0SHViLWJhc2VkIHVzZXJzY3JpcHRzCiAqIENvcHlyaWdodCDCqSAyMDIxIFJvYiBHYXJyaXNvbgogKiBMaWNlbnNlOiBNSVQKICovCigoKSA9PiB7CgkidXNlIHN0cmljdCI7CgoJLy8gcHJlZml4IGZvciBldmVudCAmIGRvY3VtZW50IGJvZHkgY2xhc3MgbmFtZSwgZS5nLiAiZ2htbzpjb250YWluZXIiCgljb25zdCBwcmVmaXggPSAiZ2htbyIsCgkJZGlzYWJsZUF0dHIgPSBgZGF0YS0ke3ByZWZpeH0tZGlzYWJsZWAsCgkJZGVib3VuY2VJbnRlcnZhbCA9IDIwMCwKCQl0YXJnZXRzID0gewoJCQkvLyBwamF4IGNvbnRhaW5lciAoY292ZXJzIGdlbmVyYWwsIHJlcG8gJiBnaXN0cykKCQkJLy8gLm5ld3MgPSBuZXdzZmVlZCBsYXlvdXQKCQkJLy8gLnJlcG9zaXRvcnktY29udGVudCA9IGZpbGUgY29kZSAoY29kZSBmb2xkaW5nKQoJCQkiW2RhdGEtcGpheC1jb250YWluZXJdLCAubmV3cywgLnJlcG9zaXRvcnktY29udGVudCI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbnRhaW5lciIKCQkJfSwKCQkJLy8gY29tbWVudCBwcmV2aWV3IGFjdGl2ZQoJCQkiLmpzLXByZXZpZXctYm9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInByZXZpZXciCgkJCX0sCgkJCS8vIC5qcy1kaXNjdXNzaW9uID0gd3JhcHBlciBmb3IgcHJvZ3Jlc3NpdmVseSBsb2FkZWQgY29tbWVudHM7CgkJCS8vICIjIGl0ZW1zIG5vdCBzaG93biIgZXhhbXBsZTogaHR0cHM6Ly9naXRodWIuY29tL2lzYWFjcy9naXRodWIvaXNzdWVzLzE4CgkJCS8vIC5kaXNjdXNzaW9uLWl0ZW0gPSBpc3N1ZSBzdGF0dXMgY2hhbmdlZCAoZ2l0aHViLWlzc3VlLXNob3ctc3RhdHVzKQoJCQkvLyAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIgPSBsb2FkIGhpZGRlbiBpdGVtcyAob2xkPykKCQkJLy8gI2pzLXByb2dyZXNzaXZlLXRpbWVsaW5lLWl0ZW0tY29udGFpbmVyID0gbG9hZCBoaWRkZW4gaXRlbXMKCQkJIi5qcy1kaXNjdXNzaW9uLCAuZGlzY3Vzc2lvbi1pdGVtLCAudG9vbGJhci1pdGVtLCAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIsICNqcy1wcm9ncmVzc2l2ZS10aW1lbGluZS1pdGVtLWNvbnRhaW5lciI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbW1lbnRzIgoJCQl9LAoJCQkvLyBwcm9ncmVzc2l2ZWx5IGxvYWRlZCBjb250ZW50IChkaWZmIGZpbGVzKQoJCQkiLmpzLWRpZmYtcHJvZ3Jlc3NpdmUtY29udGFpbmVyLCAuZGF0YS5ibG9iLXdyYXBwZXIsIC5qcy1kaWZmLWxvYWQtY29udGFpbmVyLCAuZGlmZi10YWJsZSB0Ym9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImRpZmYiCgkJCX0sCgkJCS8vIGlzc3Vlcy9wciBzaWRlYmFyICYgdGltZWxpbmUgc2VjdGlvbnM6IGUuZy4gZm9ybSBhY3Rpb25zLCBjb21taXQKCQkJLy8gcmVmZXJlbmNlcywgZGVwbG95bWVudCBzdGF0ZSAmIFBSIGNoZWNrcyBjb250YWluZXIKCQkJIi5qcy11cGRhdGFibGUtY29udGVudCwgLmpzLXVwZGF0YWJsZS1jb250ZW50LXByZXNlcnZlLXNjcm9sbC1wb3NpdGlvbiI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInVwZGF0YWJsZSIKCQkJfSwKCQkJLy8gdXNlciBwcm9maWxlIG1lbnUgKGxvYWRzIG9uIGhvdmVyKQoJCQkiZGV0YWlscy1tZW51IjogewoJCQkJY291bnQ6IDAsCgkJCQluYW1lOiAibWVudSIKCQkJfQoJCX0sCgkJbGlzdCA9IE9iamVjdC5rZXlzKHRhcmdldHMpOwoKCWZ1bmN0aW9uIGZpcmVFdmVudHMoKSB7CgkJbGlzdC5mb3JFYWNoKHNlbGVjdG9yID0+IHsKCQkJaWYgKHRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID4gMCkgewoJCQkJLy8gZXZlbnQgPT4gImdobW86Y29udGFpbmVyIiwgImdobW86Y29tbWVudHMiCgkJCQljb25zdCBldmVudCA9IG5ldyBFdmVudChwcmVmaXggKyAiOiIgKyB0YXJnZXRzW3NlbGVjdG9yXS5uYW1lKTsKCQkJCWRvY3VtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpOwoJCQl9CgkJCXRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID0gMDsKCQl9KTsKCX0KCglmdW5jdGlvbiBpbml0KCkgewoJCS8vIHByZXZlbnQgZXJyb3Igd2hlbiBsaWJyYXJ5IGlzIGxvYWRlZCBhdCBkb2N1bWVudC1zdGFydCAmIG5vIGJvZHkgZXhpc3RzCgkJY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiYm9keSIpOwoJCWxldCB0aW1lcjsKCQkvLyBwcmV2ZW50IHNjcmlwdCBmcm9tIGluc3RhbGxpbmcgbW9yZSB0aGFuIG9uY2UKCQlpZiAoY29udGFpbmVyICYmICFjb250YWluZXIuY2xhc3NMaXN0LmNvbnRhaW5zKHByZWZpeCArICItZW5hYmxlZCIpKSB7CgkJCWNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKHByZWZpeCArICItZW5hYmxlZCIpOwoJCQkvLyBib3VuZCB0byBkb2N1bWVudC5ib2R5Li4uIHRoaXMgbWF5IGJlIGJhZCBmb3IgcGVyZm9ybWFuY2UKCQkJLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzkzMzIzNDAvMTQ1MzQ2CgkJCW5ldyBNdXRhdGlvbk9ic2VydmVyKG11dGF0aW9ucyA9PiB7CgkJCQljbGVhclRpbWVvdXQodGltZXIpOwoJCQkJLyogZG9jdW1lbnQuYm9keSBhdHRyaWJ1dGUgdXNlZCB0byBkaXNhYmxlIHVwZGF0ZXM7IGl0ICpzaG91bGQgbm90KgoJCQkJICogYmUgdXNlZCByZWd1bGFybHkgYXMgbXVsdGlwbGUgc2NyaXB0cyBtYXkgZW5hYmxlIG9yIGRpc2FibGUgdGhlCgkJCQkgKiBvYnNlcnZlcnMgYXQgaW5hcHByb3ByaWF0ZSB0aW1lcy4gSXQgaXMgYmVzdCB0aGF0IGVhY2ggc2NyaXB0IGhhbmRsZXMKCQkJCSAqIHRoZSBtdXRhdGlvbiBldmVudHMgdHJpZ2dlcmVkIGJ5IHRoaXMgbGlicmFyeSBvbiBpdHMgb3duCgkJCQkgKi8KCQkJCWlmIChjb250YWluZXIuZ2V0QXR0cmlidXRlKGRpc2FibGVBdHRyKSkgewoJCQkJCXJldHVybjsKCQkJCX0KCQkJCWxldCBtaW5keCwgdGFyZ2V0LCBsaW5keCwKCQkJCQlsbGVuID0gbGlzdC5sZW5ndGgsCgkJCQkJbWxlbiA9IG11dGF0aW9ucy5sZW5ndGg7CgkJCQkvLyBhdm9pZGluZyB1c2Ugb2YgZm9yRWFjaCBsb29wcyBmb3IgcGVyZm9ybWFuY2UgcmVhc29ucwoJCQkJZm9yIChtaW5keCA9IDA7IG1pbmR4IDwgbWxlbjsgbWluZHgrKykgewoJCQkJCXRhcmdldCA9IG11dGF0aW9uc1ttaW5keF0udGFyZ2V0OwoJCQkJCWlmICh0YXJnZXQpIHsKCQkJCQkJZm9yIChsaW5keCA9IDA7IGxpbmR4IDwgbGxlbjsgbGluZHgrKykgewoJCQkJCQkJaWYgKHRhcmdldC5tYXRjaGVzKGxpc3RbbGluZHhdKSkgewoJCQkJCQkJCXRhcmdldHNbbGlzdFtsaW5keF1dLmNvdW50Kys7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9CgkJCQkJdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHsKCQkJCQkJZmlyZUV2ZW50cygpOwoJCQkJCX0sIGRlYm91bmNlSW50ZXJ2YWwpOwoJCQkJfQoJCQl9KS5vYnNlcnZlKGNvbnRhaW5lciwgewoJCQkJY2hpbGRMaXN0OiB0cnVlLAoJCQkJc3VidHJlZTogdHJ1ZQoJCQl9KTsKCQl9Cgl9CgoJaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICJsb2FkaW5nIikgewoJCWRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLCAoKSA9PiBpbml0KTsKCX0gZWxzZSB7CgkJaW5pdCgpOwoJfQoKfSkoKTsK"}]},{"name":"GitHub Issue Comments","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["https://github.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645115844064,"data":{}},"enabled":true,"position":10,"file_url":"https://raw.githubusercontent.com/Mottie/GitHub-userscripts/master/github-issue-comments.user.js","uuid":"a44d31f0-509f-48b1-aa27-dbe3c7fc4363","source":"","requires":[{"meta":{"name":"mutations.js","url":"https://greasyfork.org/scripts/28721-mutations/code/mutations.js?version=952601","ts":1645727303930,"mimetype":"text/javascript"},"source":"LyogR2l0SHViIG11dGF0aW9ucyBvYnNlcnZlciBsaWJyYXJ5IHNjcmlwdCB2MC40LjQKICogRGV0ZWN0IGNoYW5nZXMgdG8gdmFyaW91cyBlbGVtZW50cyBhbmQgdHJpZ2dlciBhbiBldmVudAogKiBUaGlzIHNjcmlwdCBpcyBtZWFudCB0byBiZSB1c2VkIGFzIGEgbGlicmFyeSBmb3IgR2l0SHViLWJhc2VkIHVzZXJzY3JpcHRzCiAqIENvcHlyaWdodCDCqSAyMDIxIFJvYiBHYXJyaXNvbgogKiBMaWNlbnNlOiBNSVQKICovCigoKSA9PiB7CgkidXNlIHN0cmljdCI7CgoJLy8gcHJlZml4IGZvciBldmVudCAmIGRvY3VtZW50IGJvZHkgY2xhc3MgbmFtZSwgZS5nLiAiZ2htbzpjb250YWluZXIiCgljb25zdCBwcmVmaXggPSAiZ2htbyIsCgkJZGlzYWJsZUF0dHIgPSBgZGF0YS0ke3ByZWZpeH0tZGlzYWJsZWAsCgkJZGVib3VuY2VJbnRlcnZhbCA9IDIwMCwKCQl0YXJnZXRzID0gewoJCQkvLyBwamF4IGNvbnRhaW5lciAoY292ZXJzIGdlbmVyYWwsIHJlcG8gJiBnaXN0cykKCQkJLy8gLm5ld3MgPSBuZXdzZmVlZCBsYXlvdXQKCQkJLy8gLnJlcG9zaXRvcnktY29udGVudCA9IGZpbGUgY29kZSAoY29kZSBmb2xkaW5nKQoJCQkiW2RhdGEtcGpheC1jb250YWluZXJdLCAubmV3cywgLnJlcG9zaXRvcnktY29udGVudCI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbnRhaW5lciIKCQkJfSwKCQkJLy8gY29tbWVudCBwcmV2aWV3IGFjdGl2ZQoJCQkiLmpzLXByZXZpZXctYm9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInByZXZpZXciCgkJCX0sCgkJCS8vIC5qcy1kaXNjdXNzaW9uID0gd3JhcHBlciBmb3IgcHJvZ3Jlc3NpdmVseSBsb2FkZWQgY29tbWVudHM7CgkJCS8vICIjIGl0ZW1zIG5vdCBzaG93biIgZXhhbXBsZTogaHR0cHM6Ly9naXRodWIuY29tL2lzYWFjcy9naXRodWIvaXNzdWVzLzE4CgkJCS8vIC5kaXNjdXNzaW9uLWl0ZW0gPSBpc3N1ZSBzdGF0dXMgY2hhbmdlZCAoZ2l0aHViLWlzc3VlLXNob3ctc3RhdHVzKQoJCQkvLyAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIgPSBsb2FkIGhpZGRlbiBpdGVtcyAob2xkPykKCQkJLy8gI2pzLXByb2dyZXNzaXZlLXRpbWVsaW5lLWl0ZW0tY29udGFpbmVyID0gbG9hZCBoaWRkZW4gaXRlbXMKCQkJIi5qcy1kaXNjdXNzaW9uLCAuZGlzY3Vzc2lvbi1pdGVtLCAudG9vbGJhci1pdGVtLCAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIsICNqcy1wcm9ncmVzc2l2ZS10aW1lbGluZS1pdGVtLWNvbnRhaW5lciI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbW1lbnRzIgoJCQl9LAoJCQkvLyBwcm9ncmVzc2l2ZWx5IGxvYWRlZCBjb250ZW50IChkaWZmIGZpbGVzKQoJCQkiLmpzLWRpZmYtcHJvZ3Jlc3NpdmUtY29udGFpbmVyLCAuZGF0YS5ibG9iLXdyYXBwZXIsIC5qcy1kaWZmLWxvYWQtY29udGFpbmVyLCAuZGlmZi10YWJsZSB0Ym9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImRpZmYiCgkJCX0sCgkJCS8vIGlzc3Vlcy9wciBzaWRlYmFyICYgdGltZWxpbmUgc2VjdGlvbnM6IGUuZy4gZm9ybSBhY3Rpb25zLCBjb21taXQKCQkJLy8gcmVmZXJlbmNlcywgZGVwbG95bWVudCBzdGF0ZSAmIFBSIGNoZWNrcyBjb250YWluZXIKCQkJIi5qcy11cGRhdGFibGUtY29udGVudCwgLmpzLXVwZGF0YWJsZS1jb250ZW50LXByZXNlcnZlLXNjcm9sbC1wb3NpdGlvbiI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInVwZGF0YWJsZSIKCQkJfSwKCQkJLy8gdXNlciBwcm9maWxlIG1lbnUgKGxvYWRzIG9uIGhvdmVyKQoJCQkiZGV0YWlscy1tZW51IjogewoJCQkJY291bnQ6IDAsCgkJCQluYW1lOiAibWVudSIKCQkJfQoJCX0sCgkJbGlzdCA9IE9iamVjdC5rZXlzKHRhcmdldHMpOwoKCWZ1bmN0aW9uIGZpcmVFdmVudHMoKSB7CgkJbGlzdC5mb3JFYWNoKHNlbGVjdG9yID0+IHsKCQkJaWYgKHRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID4gMCkgewoJCQkJLy8gZXZlbnQgPT4gImdobW86Y29udGFpbmVyIiwgImdobW86Y29tbWVudHMiCgkJCQljb25zdCBldmVudCA9IG5ldyBFdmVudChwcmVmaXggKyAiOiIgKyB0YXJnZXRzW3NlbGVjdG9yXS5uYW1lKTsKCQkJCWRvY3VtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpOwoJCQl9CgkJCXRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID0gMDsKCQl9KTsKCX0KCglmdW5jdGlvbiBpbml0KCkgewoJCS8vIHByZXZlbnQgZXJyb3Igd2hlbiBsaWJyYXJ5IGlzIGxvYWRlZCBhdCBkb2N1bWVudC1zdGFydCAmIG5vIGJvZHkgZXhpc3RzCgkJY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiYm9keSIpOwoJCWxldCB0aW1lcjsKCQkvLyBwcmV2ZW50IHNjcmlwdCBmcm9tIGluc3RhbGxpbmcgbW9yZSB0aGFuIG9uY2UKCQlpZiAoY29udGFpbmVyICYmICFjb250YWluZXIuY2xhc3NMaXN0LmNvbnRhaW5zKHByZWZpeCArICItZW5hYmxlZCIpKSB7CgkJCWNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKHByZWZpeCArICItZW5hYmxlZCIpOwoJCQkvLyBib3VuZCB0byBkb2N1bWVudC5ib2R5Li4uIHRoaXMgbWF5IGJlIGJhZCBmb3IgcGVyZm9ybWFuY2UKCQkJLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzkzMzIzNDAvMTQ1MzQ2CgkJCW5ldyBNdXRhdGlvbk9ic2VydmVyKG11dGF0aW9ucyA9PiB7CgkJCQljbGVhclRpbWVvdXQodGltZXIpOwoJCQkJLyogZG9jdW1lbnQuYm9keSBhdHRyaWJ1dGUgdXNlZCB0byBkaXNhYmxlIHVwZGF0ZXM7IGl0ICpzaG91bGQgbm90KgoJCQkJICogYmUgdXNlZCByZWd1bGFybHkgYXMgbXVsdGlwbGUgc2NyaXB0cyBtYXkgZW5hYmxlIG9yIGRpc2FibGUgdGhlCgkJCQkgKiBvYnNlcnZlcnMgYXQgaW5hcHByb3ByaWF0ZSB0aW1lcy4gSXQgaXMgYmVzdCB0aGF0IGVhY2ggc2NyaXB0IGhhbmRsZXMKCQkJCSAqIHRoZSBtdXRhdGlvbiBldmVudHMgdHJpZ2dlcmVkIGJ5IHRoaXMgbGlicmFyeSBvbiBpdHMgb3duCgkJCQkgKi8KCQkJCWlmIChjb250YWluZXIuZ2V0QXR0cmlidXRlKGRpc2FibGVBdHRyKSkgewoJCQkJCXJldHVybjsKCQkJCX0KCQkJCWxldCBtaW5keCwgdGFyZ2V0LCBsaW5keCwKCQkJCQlsbGVuID0gbGlzdC5sZW5ndGgsCgkJCQkJbWxlbiA9IG11dGF0aW9ucy5sZW5ndGg7CgkJCQkvLyBhdm9pZGluZyB1c2Ugb2YgZm9yRWFjaCBsb29wcyBmb3IgcGVyZm9ybWFuY2UgcmVhc29ucwoJCQkJZm9yIChtaW5keCA9IDA7IG1pbmR4IDwgbWxlbjsgbWluZHgrKykgewoJCQkJCXRhcmdldCA9IG11dGF0aW9uc1ttaW5keF0udGFyZ2V0OwoJCQkJCWlmICh0YXJnZXQpIHsKCQkJCQkJZm9yIChsaW5keCA9IDA7IGxpbmR4IDwgbGxlbjsgbGluZHgrKykgewoJCQkJCQkJaWYgKHRhcmdldC5tYXRjaGVzKGxpc3RbbGluZHhdKSkgewoJCQkJCQkJCXRhcmdldHNbbGlzdFtsaW5keF1dLmNvdW50Kys7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9CgkJCQkJdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHsKCQkJCQkJZmlyZUV2ZW50cygpOwoJCQkJCX0sIGRlYm91bmNlSW50ZXJ2YWwpOwoJCQkJfQoJCQl9KS5vYnNlcnZlKGNvbnRhaW5lciwgewoJCQkJY2hpbGRMaXN0OiB0cnVlLAoJCQkJc3VidHJlZTogdHJ1ZQoJCQl9KTsKCQl9Cgl9CgoJaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICJsb2FkaW5nIikgewoJCWRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLCAoKSA9PiBpbml0KTsKCX0gZWxzZSB7CgkJaW5pdCgpOwoJfQoKfSkoKTsK"}]},{"name":"GitHub Issue Add Details","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["https://github.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645115844070,"data":{}},"enabled":true,"position":11,"file_url":"https://raw.githubusercontent.com/Mottie/Github-userscripts/master/github-issue-add-details.user.js","uuid":"e49af5ae-31c3-415b-a050-2677ccbd1d87","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIEdpdEh1YiBJc3N1ZSBBZGQgRGV0YWlscwovLyBAdmVyc2lvbiAgICAgMS4wLjExCi8vIEBkZXNjcmlwdGlvbiBBIHVzZXJzY3JpcHQgdGhhdCBhZGRzIGEgYnV0dG9uIHRvIGluc2VydCBhIGRldGFpbHMgYmxvY2sgaW50byBjb21tZW50cwovLyBAbGljZW5zZSAgICAgTUlUCi8vIEBhdXRob3IgICAgICBSb2IgR2Fycmlzb24KLy8gQG5hbWVzcGFjZSAgIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb3R0aWUKLy8gQGluY2x1ZGUgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS8qCi8vIEBydW4tYXQgICAgICBkb2N1bWVudC1pZGxlCi8vIEBncmFudCAgICAgICBub25lCi8vIEByZXF1aXJlICAgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3NjcmlwdHMvMjg3MjEtbXV0YXRpb25zL2NvZGUvbXV0YXRpb25zLmpzP3ZlcnNpb249OTUyNjAxCi8vIEByZXF1aXJlICAgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3NjcmlwdHMvMzk4ODc3LXV0aWxzLWpzL2NvZGUvdXRpbHNqcy5qcz92ZXJzaW9uPTk1MjYwMAovLyBAcmVxdWlyZSAgICAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy9zY3JpcHRzLzI4MjM5LXJhbmd5LWlucHV0cy1tb2QtanMvY29kZS9yYW5neS1pbnB1dHMtbW9kanMuanM/dmVyc2lvbj0xODE3NjkKLy8gQGljb24gICAgICAgIGh0dHBzOi8vZ2l0aHViLmdpdGh1YmFzc2V0cy5jb20vcGlubmVkLW9jdG9jYXQuc3ZnCi8vIEB1cGRhdGVVUkwgICBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vTW90dGllL0dpdGh1Yi11c2Vyc2NyaXB0cy9tYXN0ZXIvZ2l0aHViLWlzc3VlLWFkZC1kZXRhaWxzLnVzZXIuanMKLy8gQGRvd25sb2FkVVJMIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Nb3R0aWUvR2l0aHViLXVzZXJzY3JpcHRzL21hc3Rlci9naXRodWItaXNzdWUtYWRkLWRldGFpbHMudXNlci5qcwovLyBAc3VwcG9ydFVSTCAgaHR0cHM6Ly9naXRodWIuY29tL01vdHRpZS9HaXRIdWItdXNlcnNjcmlwdHMvaXNzdWVzCi8vID09L1VzZXJTY3JpcHQ9PQovKiBnbG9iYWwgJCAkJCBvbiBtYWtlICovCigoKSA9PiB7CgkidXNlIHN0cmljdCI7CgoJY29uc3QgaWNvbiA9IGAKCQk8c3ZnIGNsYXNzPSJvY3RpY29uIiBzdHlsZT0icG9pbnRlci1ldmVudHM6bm9uZSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMTYiIGhlaWdodD0iMTYiIHZpZXdCb3g9IjAgMCAxNiAxNiI+CgkJCTxwYXRoIGQ9Ik0xNS41IDloLTdDOCA5IDggOC42IDggOHMwLTEgLjUtMWg3Yy41IDAgLjUuNC41IDFzMCAxLS41IDF6bS01LTVjLS41IDAtLjUtLjQtLjUtMXMwLTEgLjUtMWg1Yy41IDAgLjUuNC41IDFzMCAxLS41IDFoLTV6TTAgMmg4TDQgNyAwIDJ6bTguNSAxMGg3Yy41IDAgLjUuNC41IDFzMCAxLS41IDFoLTdjLS41IDAtLjUtLjQtLjUtMXMwLTEgLjUtMXoiLz4KCQk8L3N2Zz5gLAoKCQlkZXRhaWxzQmxvY2sgPSBbCgkJCS8vIHN0YXJ0IGRldGFpbHMgYmxvY2sKCQkJIjxkZXRhaWxzPlxuPHN1bW1hcnk+VGl0bGU8L3N1bW1hcnk+XG5cbjwhLS0gbGVhdmUgYSBibGFuayBsaW5lIGFib3ZlIC0tPlxuIiwKCQkJLy8gc2VsZWN0ZWQgY29udGVudC9jYXJldCB3aWxsIGJlIHBsYWNlZCBoZXJlCgkJCSJcbjwvZGV0YWlscz5cbiIKCQldOwoKCS8vIEFkZCBpbnNlcnQgZGV0YWlscyBidXR0b24KCWNvbnN0IGFkZERldGFpbHNCdXR0b24gPSAoKSA9PiB7CgkJY29uc3QgYnV0dG9uID0gbWFrZSh7CgkJCWVsOiAiYnV0dG9uIiwKCQkJY2xhc3NOYW1lOiAiZ2hhZC1kZXRhaWxzIGJ0bi1saW5rIHRvb2xiYXItaXRlbSBidG4tb2N0aWNvbiBuby11bmRlcmxpbmUgdG9vbHRpcHBlZCB0b29sdGlwcGVkLW4iLAoJCQlhdHRyczogewoJCQkJImFyaWEtbGFiZWwiOiAiQWRkIGEgZGV0YWlscy9zdW1tYXJ5IGJsb2NrIiwKCQkJCXRhYmluZGV4OiAiLTEiLAoJCQkJdHlwZTogImJ1dHRvbiIKCQkJfSwKCQkJaHRtbDogaWNvbgoJCX0pOwoJCSQkKCIudG9vbGJhci1jb21tZW50aW5nIikuZm9yRWFjaChlbCA9PiB7CgkJCWlmIChlbCAmJiAhJCgiLmdoYWQtZGV0YWlscyIsIGVsKSkgewoJCQkJY29uc3QgYnRuID0gJCgibWQtcXVvdGUiLCBlbCk7CgkJCQlidG4uYmVmb3JlKGJ1dHRvbi5jbG9uZU5vZGUodHJ1ZSkpOwoJCQl9CgkJfSk7Cgl9OwoKCWNvbnN0IGFkZEJpbmRpbmdzID0gKCkgPT4gewoJCXdpbmRvdy5yYW5neUlucHV0LmluaXQoKTsKCQlvbigkKCJib2R5IiksICJjbGljayIsIGV2ZW50ID0+IHsKCQkJY29uc3QgeyB0YXJnZXQgfSA9IGV2ZW50OwoJCQlpZiAodGFyZ2V0Py5jbGFzc0xpc3QuY29udGFpbnMoImdoYWQtZGV0YWlscyIpKSB7CgkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQkJY29uc3QgZm9ybSA9IHRhcmdldC5jbG9zZXN0KCIucHJldmlld2FibGUtY29tbWVudC1mb3JtIik7CgkJCQljb25zdCB0ZXh0YXJlYSA9ICQoIi5jb21tZW50LWZvcm0tdGV4dGFyZWEiLCBmb3JtKTsKCQkJCXNldFRpbWVvdXQoKCkgPT4gewoJCQkJCXRleHRhcmVhLmZvY3VzKCk7CgkJCQkJd2luZG93LnJhbmd5SW5wdXQuc3Vycm91bmRTZWxlY3RlZFRleHQoCgkJCQkJCXRleHRhcmVhLAoJCQkJCQlkZXRhaWxzQmxvY2tbMF0sIC8vIHByZWZpeAoJCQkJCQlkZXRhaWxzQmxvY2tbMV0gLy8gc3VmZml4CgkJCQkJKTsKCQkJCX0sIDEwMCk7CgkJCQlyZXR1cm4gZmFsc2U7CgkJCX0KCQl9KTsKCX07CgoJb24oZG9jdW1lbnQsICJnaG1vOmNvbnRhaW5lciIsIGFkZERldGFpbHNCdXR0b24pOwoJb24oZG9jdW1lbnQsICJnaG1vOmNvbW1lbnRzIiwgYWRkRGV0YWlsc0J1dHRvbik7CgoJYWRkRGV0YWlsc0J1dHRvbigpOwoJYWRkQmluZGluZ3MoKTsKCn0pKCk7Cg==","requires":[{"meta":{"name":"mutations.js","url":"https://greasyfork.org/scripts/28721-mutations/code/mutations.js?version=952601","ts":1645727303961,"mimetype":"text/javascript"},"source":"LyogR2l0SHViIG11dGF0aW9ucyBvYnNlcnZlciBsaWJyYXJ5IHNjcmlwdCB2MC40LjQKICogRGV0ZWN0IGNoYW5nZXMgdG8gdmFyaW91cyBlbGVtZW50cyBhbmQgdHJpZ2dlciBhbiBldmVudAogKiBUaGlzIHNjcmlwdCBpcyBtZWFudCB0byBiZSB1c2VkIGFzIGEgbGlicmFyeSBmb3IgR2l0SHViLWJhc2VkIHVzZXJzY3JpcHRzCiAqIENvcHlyaWdodCDCqSAyMDIxIFJvYiBHYXJyaXNvbgogKiBMaWNlbnNlOiBNSVQKICovCigoKSA9PiB7CgkidXNlIHN0cmljdCI7CgoJLy8gcHJlZml4IGZvciBldmVudCAmIGRvY3VtZW50IGJvZHkgY2xhc3MgbmFtZSwgZS5nLiAiZ2htbzpjb250YWluZXIiCgljb25zdCBwcmVmaXggPSAiZ2htbyIsCgkJZGlzYWJsZUF0dHIgPSBgZGF0YS0ke3ByZWZpeH0tZGlzYWJsZWAsCgkJZGVib3VuY2VJbnRlcnZhbCA9IDIwMCwKCQl0YXJnZXRzID0gewoJCQkvLyBwamF4IGNvbnRhaW5lciAoY292ZXJzIGdlbmVyYWwsIHJlcG8gJiBnaXN0cykKCQkJLy8gLm5ld3MgPSBuZXdzZmVlZCBsYXlvdXQKCQkJLy8gLnJlcG9zaXRvcnktY29udGVudCA9IGZpbGUgY29kZSAoY29kZSBmb2xkaW5nKQoJCQkiW2RhdGEtcGpheC1jb250YWluZXJdLCAubmV3cywgLnJlcG9zaXRvcnktY29udGVudCI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbnRhaW5lciIKCQkJfSwKCQkJLy8gY29tbWVudCBwcmV2aWV3IGFjdGl2ZQoJCQkiLmpzLXByZXZpZXctYm9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInByZXZpZXciCgkJCX0sCgkJCS8vIC5qcy1kaXNjdXNzaW9uID0gd3JhcHBlciBmb3IgcHJvZ3Jlc3NpdmVseSBsb2FkZWQgY29tbWVudHM7CgkJCS8vICIjIGl0ZW1zIG5vdCBzaG93biIgZXhhbXBsZTogaHR0cHM6Ly9naXRodWIuY29tL2lzYWFjcy9naXRodWIvaXNzdWVzLzE4CgkJCS8vIC5kaXNjdXNzaW9uLWl0ZW0gPSBpc3N1ZSBzdGF0dXMgY2hhbmdlZCAoZ2l0aHViLWlzc3VlLXNob3ctc3RhdHVzKQoJCQkvLyAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIgPSBsb2FkIGhpZGRlbiBpdGVtcyAob2xkPykKCQkJLy8gI2pzLXByb2dyZXNzaXZlLXRpbWVsaW5lLWl0ZW0tY29udGFpbmVyID0gbG9hZCBoaWRkZW4gaXRlbXMKCQkJIi5qcy1kaXNjdXNzaW9uLCAuZGlzY3Vzc2lvbi1pdGVtLCAudG9vbGJhci1pdGVtLCAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIsICNqcy1wcm9ncmVzc2l2ZS10aW1lbGluZS1pdGVtLWNvbnRhaW5lciI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbW1lbnRzIgoJCQl9LAoJCQkvLyBwcm9ncmVzc2l2ZWx5IGxvYWRlZCBjb250ZW50IChkaWZmIGZpbGVzKQoJCQkiLmpzLWRpZmYtcHJvZ3Jlc3NpdmUtY29udGFpbmVyLCAuZGF0YS5ibG9iLXdyYXBwZXIsIC5qcy1kaWZmLWxvYWQtY29udGFpbmVyLCAuZGlmZi10YWJsZSB0Ym9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImRpZmYiCgkJCX0sCgkJCS8vIGlzc3Vlcy9wciBzaWRlYmFyICYgdGltZWxpbmUgc2VjdGlvbnM6IGUuZy4gZm9ybSBhY3Rpb25zLCBjb21taXQKCQkJLy8gcmVmZXJlbmNlcywgZGVwbG95bWVudCBzdGF0ZSAmIFBSIGNoZWNrcyBjb250YWluZXIKCQkJIi5qcy11cGRhdGFibGUtY29udGVudCwgLmpzLXVwZGF0YWJsZS1jb250ZW50LXByZXNlcnZlLXNjcm9sbC1wb3NpdGlvbiI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInVwZGF0YWJsZSIKCQkJfSwKCQkJLy8gdXNlciBwcm9maWxlIG1lbnUgKGxvYWRzIG9uIGhvdmVyKQoJCQkiZGV0YWlscy1tZW51IjogewoJCQkJY291bnQ6IDAsCgkJCQluYW1lOiAibWVudSIKCQkJfQoJCX0sCgkJbGlzdCA9IE9iamVjdC5rZXlzKHRhcmdldHMpOwoKCWZ1bmN0aW9uIGZpcmVFdmVudHMoKSB7CgkJbGlzdC5mb3JFYWNoKHNlbGVjdG9yID0+IHsKCQkJaWYgKHRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID4gMCkgewoJCQkJLy8gZXZlbnQgPT4gImdobW86Y29udGFpbmVyIiwgImdobW86Y29tbWVudHMiCgkJCQljb25zdCBldmVudCA9IG5ldyBFdmVudChwcmVmaXggKyAiOiIgKyB0YXJnZXRzW3NlbGVjdG9yXS5uYW1lKTsKCQkJCWRvY3VtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpOwoJCQl9CgkJCXRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID0gMDsKCQl9KTsKCX0KCglmdW5jdGlvbiBpbml0KCkgewoJCS8vIHByZXZlbnQgZXJyb3Igd2hlbiBsaWJyYXJ5IGlzIGxvYWRlZCBhdCBkb2N1bWVudC1zdGFydCAmIG5vIGJvZHkgZXhpc3RzCgkJY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiYm9keSIpOwoJCWxldCB0aW1lcjsKCQkvLyBwcmV2ZW50IHNjcmlwdCBmcm9tIGluc3RhbGxpbmcgbW9yZSB0aGFuIG9uY2UKCQlpZiAoY29udGFpbmVyICYmICFjb250YWluZXIuY2xhc3NMaXN0LmNvbnRhaW5zKHByZWZpeCArICItZW5hYmxlZCIpKSB7CgkJCWNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKHByZWZpeCArICItZW5hYmxlZCIpOwoJCQkvLyBib3VuZCB0byBkb2N1bWVudC5ib2R5Li4uIHRoaXMgbWF5IGJlIGJhZCBmb3IgcGVyZm9ybWFuY2UKCQkJLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzkzMzIzNDAvMTQ1MzQ2CgkJCW5ldyBNdXRhdGlvbk9ic2VydmVyKG11dGF0aW9ucyA9PiB7CgkJCQljbGVhclRpbWVvdXQodGltZXIpOwoJCQkJLyogZG9jdW1lbnQuYm9keSBhdHRyaWJ1dGUgdXNlZCB0byBkaXNhYmxlIHVwZGF0ZXM7IGl0ICpzaG91bGQgbm90KgoJCQkJICogYmUgdXNlZCByZWd1bGFybHkgYXMgbXVsdGlwbGUgc2NyaXB0cyBtYXkgZW5hYmxlIG9yIGRpc2FibGUgdGhlCgkJCQkgKiBvYnNlcnZlcnMgYXQgaW5hcHByb3ByaWF0ZSB0aW1lcy4gSXQgaXMgYmVzdCB0aGF0IGVhY2ggc2NyaXB0IGhhbmRsZXMKCQkJCSAqIHRoZSBtdXRhdGlvbiBldmVudHMgdHJpZ2dlcmVkIGJ5IHRoaXMgbGlicmFyeSBvbiBpdHMgb3duCgkJCQkgKi8KCQkJCWlmIChjb250YWluZXIuZ2V0QXR0cmlidXRlKGRpc2FibGVBdHRyKSkgewoJCQkJCXJldHVybjsKCQkJCX0KCQkJCWxldCBtaW5keCwgdGFyZ2V0LCBsaW5keCwKCQkJCQlsbGVuID0gbGlzdC5sZW5ndGgsCgkJCQkJbWxlbiA9IG11dGF0aW9ucy5sZW5ndGg7CgkJCQkvLyBhdm9pZGluZyB1c2Ugb2YgZm9yRWFjaCBsb29wcyBmb3IgcGVyZm9ybWFuY2UgcmVhc29ucwoJCQkJZm9yIChtaW5keCA9IDA7IG1pbmR4IDwgbWxlbjsgbWluZHgrKykgewoJCQkJCXRhcmdldCA9IG11dGF0aW9uc1ttaW5keF0udGFyZ2V0OwoJCQkJCWlmICh0YXJnZXQpIHsKCQkJCQkJZm9yIChsaW5keCA9IDA7IGxpbmR4IDwgbGxlbjsgbGluZHgrKykgewoJCQkJCQkJaWYgKHRhcmdldC5tYXRjaGVzKGxpc3RbbGluZHhdKSkgewoJCQkJCQkJCXRhcmdldHNbbGlzdFtsaW5keF1dLmNvdW50Kys7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9CgkJCQkJdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHsKCQkJCQkJZmlyZUV2ZW50cygpOwoJCQkJCX0sIGRlYm91bmNlSW50ZXJ2YWwpOwoJCQkJfQoJCQl9KS5vYnNlcnZlKGNvbnRhaW5lciwgewoJCQkJY2hpbGRMaXN0OiB0cnVlLAoJCQkJc3VidHJlZTogdHJ1ZQoJCQl9KTsKCQl9Cgl9CgoJaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICJsb2FkaW5nIikgewoJCWRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLCAoKSA9PiBpbml0KTsKCX0gZWxzZSB7CgkJaW5pdCgpOwoJfQoKfSkoKTsK"},{"meta":{"name":"utilsjs.js","url":"https://greasyfork.org/scripts/398877-utils-js/code/utilsjs.js?version=952600","ts":1645727303904,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"rangy-inputs-modjs.js","url":"https://greasyfork.org/scripts/28239-rangy-inputs-mod-js/code/rangy-inputs-modjs.js?version=181769","ts":1645727303790,"mimetype":"text/javascript"},"source":""}]},{"name":"GitHub Label Color Picker","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["https://github.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645805841550,"data":{"colorPickerMemosNoAlpha":"s'rgba(0,0,0,1)','rgba(255,255,255,1)'"}},"enabled":true,"position":12,"file_url":"https://raw.githubusercontent.com/Mottie/GitHub-userscripts/master/github-label-color-picker.user.js","uuid":"15dbac32-4cb0-410e-9a77-9df8840bb5b5","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIEdpdEh1YiBMYWJlbCBDb2xvciBQaWNrZXIKLy8gQHZlcnNpb24gICAgIDEuMC43Ci8vIEBkZXNjcmlwdGlvbiBBIHVzZXJzY3JpcHQgdGhhdCBhZGRzIGEgY29sb3IgcGlja2VyIHRvIHRoZSBsYWJlbCBjb2xvciBpbnB1dAovLyBAbGljZW5zZSAgICAgTUlUCi8vIEBhdXRob3IgICAgICBSb2IgR2Fycmlzb24KLy8gQGNvbnRyaWJ1dG9yIGRhcmtyZWQKLy8gQG5hbWVzcGFjZSAgIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb3R0aWUKLy8gQGluY2x1ZGUgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS8qCi8vIEBydW4tYXQgICAgICBkb2N1bWVudC1pZGxlCi8vIEBncmFudCAgICAgICBHTV9hZGRTdHlsZQovLyBAZ3JhbnQgICAgICAgR01fZ2V0VmFsdWUKLy8gQGdyYW50ICAgICAgIEdNX3NldFZhbHVlCi8vIEBncmFudCAgICAgICBHTV9yZWdpc3Rlck1lbnVDb21tYW5kCi8vIEByZXF1aXJlICAgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3NjcmlwdHMvMjMxODEtY29sb3JwaWNrZXIvY29kZS9jb2xvclBpY2tlci5qcz92ZXJzaW9uPTE0Nzg2MgovLyBAaWNvbiAgICAgICAgaHR0cHM6Ly9naXRodWIuZ2l0aHViYXNzZXRzLmNvbS9waW5uZWQtb2N0b2NhdC5zdmcKLy8gQHVwZGF0ZVVSTCAgIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Nb3R0aWUvR2l0SHViLXVzZXJzY3JpcHRzL21hc3Rlci9naXRodWItbGFiZWwtY29sb3ItcGlja2VyLnVzZXIuanMKLy8gQGRvd25sb2FkVVJMIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9Nb3R0aWUvR2l0SHViLXVzZXJzY3JpcHRzL21hc3Rlci9naXRodWItbGFiZWwtY29sb3ItcGlja2VyLnVzZXIuanMKLy8gPT0vVXNlclNjcmlwdD09Ci8qIGdsb2JhbCBqc0NvbG9yUGlja2VyICovCigoKSA9PiB7CgkidXNlIHN0cmljdCI7CgoJLy8gR2l0SHViLURhcmsgY2hhbmdlcyAidGV4dC1ibGFjayIgdG8gI2MwYzBjMAoJR01fYWRkU3R5bGUoYAoJCWRpdi5jcC1hcHAgeyBtYXJnaW46MDsgei1pbmRleDoxMDsgfQoJCS5qcy1uZXctbGFiZWwtY29sb3ItaWNvbiB7IHBvaW50ZXItZXZlbnRzOm5vbmU7IH0KCQkuanMtbmV3LWxhYmVsLWNvbG9yLWljb24udGV4dC1ibGFjayB7IGNvbG9yOiMwMDAgIWltcG9ydGFudDsgfQoJYCk7CgoJZnVuY3Rpb24gYWRkUGlja2VyKCkgewoJCWlmICgkKCIuanMtbmV3LWxhYmVsLWNvbG9yIikpIHsKCQkJanNDb2xvclBpY2tlcigiLmpzLW5ldy1sYWJlbC1jb2xvci1pbnB1dCIsIHsKCQkJCWN1c3RvbUJHOiAiIzIyMiIsCgkJCQlub0FscGhhOiB0cnVlLAoJCQkJcmVuZGVyQ2FsbGJhY2s6IGZ1bmN0aW9uKGNvbG9ycykgewoJCQkJCWxldCBpbnB1dCA9IHRoaXMgJiYgdGhpcy5pbnB1dDsKCQkJCQlpZiAoaW5wdXQpIHsKCQkJCQkJdXBkYXRlU3dhdGNoKGlucHV0LCBjb2xvcnMpOwoJCQkJCX0KCQkJCX0KCQkJfSk7CgkJfQoJfQoKCWZ1bmN0aW9uIHVwZGF0ZVN3YXRjaChpbnB1dCwgY29sb3JzKSB7CgkJbGV0IGJhY2tncm91bmQgPSAiIyIgKyBjb2xvcnMuSEVYOwoJCWlucHV0LnZhbHVlID0gYmFja2dyb3VuZDsKCQlsZXQgdGV4dENvbG9yID0gY2FsY0NvbnRyYXN0KGNvbG9ycy5IRVgpOwoJCS8vIFVwZGF0ZSBjb2xvciBzd2F0Y2ggbmV4dCB0byBpbnB1dAoJCWxldCBzd2F0Y2ggPSAkKCIuanMtbmV3LWxhYmVsLWNvbG9yIiwgaW5wdXQuY2xvc2VzdCgiZGQiKSk7CgkJdXBkYXRlSWNvbihzd2F0Y2gsIHRleHRDb2xvcik7CgkJdXBkYXRlQ29sb3JzKHN3YXRjaCwgYmFja2dyb3VuZCwgdGV4dENvbG9yKTsKCQkvLyBVcGRhdGUgbGFiZWwgcHJldmlldwoJCXN3YXRjaCA9ICQoCgkJCSIuanMtbGFiZWwtcHJldmlldyAuSXNzdWVMYWJlbC0tYmlnIiwKCQkJaW5wdXQuY2xvc2VzdCgiLnRhYmxlLWxpc3QtaXRlbSIpCgkJKTsKCQl1cGRhdGVDb2xvcnMoc3dhdGNoLCBiYWNrZ3JvdW5kLCB0ZXh0Q29sb3IpOwoJfQoKCWZ1bmN0aW9uIHVwZGF0ZUljb24oc3dhdGNoLCB0ZXh0Q29sb3IpIHsKCQlsZXQgaWNvbiA9ICQoIi5vY3RpY29uIiwgc3dhdGNoKTsKCQkvLyAhaW1wb3J0YW50IHNldCBvbiB0aGVzZSBHaXRIdWIgcHJpbWVyIGNvbG9yIGRlZmluaXRpb25zCgkJaWNvbi5jbGFzc0xpc3QucmVtb3ZlKCJ0ZXh0LXdoaXRlIiwgInRleHQtYmxhY2siKTsKCQlpY29uLmNsYXNzTGlzdC5hZGQoInRleHQtIiArIHRleHRDb2xvcik7Cgl9CgoJZnVuY3Rpb24gdXBkYXRlQ29sb3JzKGVsLCBiYWNrZ3JvdW5kLCBjb2xvcikgewoJCWVsLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGJhY2tncm91bmQ7CgkJZWwuc3R5bGUuY29sb3IgPSBjb2xvcjsKCX0KCgkvKiByZXBsYWNlIGNvbG9yUGlja2VyIHN0b3JhZ2UgKi8KCXdpbmRvdy5Db2xvclBpY2tlci5kb2NDb29raWVzID0gKGtleSwgdmFsKSA9PiB7CgkJaWYgKHR5cGVvZiB2YWwgPT09ICJ1bmRlZmluZWQiKSB7CgkJCXJldHVybiBHTV9nZXRWYWx1ZShrZXkpOwoJCX0KCQlHTV9zZXRWYWx1ZShrZXksIHZhbCk7Cgl9OwoKCS8qIGNvbG9yUGlja2VyTWVtb3NOb0FscGhhICpNVVNUKiBmb2xsb3cgdGhpcyBmb3JtYXQKCSIncmdiYSg4MywyNSwyMzEsMSknLCdyZ2JhKDg2LDY2LDY2LDEpJywncmdiYSgyMiwyMCwyMjMsMSknIgoJKi8KCWZ1bmN0aW9uIGNvbnZlcnRDb2xvcnNUb1JnYmEodmFsdWVzKSB7CgkJbGV0IHJlc3VsdCA9IFtdOwoJCS8vIHNlZSBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yNjE5NjAxMi8xNDUzNDYKCQl2YWx1ZXMKCQkJLnJlcGxhY2UoL1snIl0vZywgIiIpCgkJCS5zcGxpdCgvXHMqLCg/IVteKCldKig/OlwoW14oKV0qXCkpP1wpKVxzKi9nKQoJCQkuZm9yRWFjaCh2YWwgPT4gewoJCQkJbGV0IHJnYiA9IGhleFRvUmdiKHZhbCk7CgkJCQlpZiAocmdiKSB7CgkJCQkJcmVzdWx0LnB1c2goYCdyZ2JhKCR7cmdiLnJ9LCR7cmdiLmd9LCR7cmdiLmJ9LDEpJ2ApOwoJCQkJfSBlbHNlIGlmIChyZ2IgPT09IG51bGwgJiYgdmFsLmluZGV4T2YoInJnYmEoIikgPiAtMSkgewoJCQkJCS8vIGFsbG93IGFkZGluZyByZ2JhKCkgZGVmaW5pdGlvbnMKCQkJCQlyZXN1bHQucHVzaChgJyR7dmFsfSdgKTsKCQkJCX0KCQkJfSk7CgkJcmV0dXJuIHJlc3VsdC5qb2luKCIsIik7Cgl9CgoJLy8gTW9kaWZpZWQgY29kZSBmcm9tIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzU2MjQxMzkvMTQ1MzQ2CglmdW5jdGlvbiBoZXhUb1JnYihoZXgpIHsKCQlsZXQgcmVzdWx0LAoJCQkvLyBFeHBhbmQgc2hvcnRoYW5kIGZvcm0gKGUuZy4gIjAzRiIpIHRvIGZ1bGwgZm9ybSAoZS5nLiAiMDAzM0ZGIikKCQkJc2hvcnRoYW5kUmVnZXggPSAvXiM/KFthLWZcZF0pKFthLWZcZF0pKFthLWZcZF0pJC9pOwoJCWhleCA9IGhleC5yZXBsYWNlKHNob3J0aGFuZFJlZ2V4LCAobSwgciwgZywgYikgPT4gewoJCQlyZXR1cm4gciArIHIgKyBnICsgZyArIGIgKyBiOwoJCX0pOwoJCXJlc3VsdCA9IC9eIz8oW2EtZlxkXXsyfSkoW2EtZlxkXXsyfSkoW2EtZlxkXXsyfSkkL2kuZXhlYyhoZXgpOwoJCXJldHVybiByZXN1bHQgPyB7CgkJCXI6IHBhcnNlSW50KHJlc3VsdFsxXSwgMTYpLAoJCQlnOiBwYXJzZUludChyZXN1bHRbMl0sIDE2KSwKCQkJYjogcGFyc2VJbnQocmVzdWx0WzNdLCAxNikKCQl9IDogbnVsbDsKCX0KCgkvLyBDYWxjdWxhdGUgY29udHJhc3RpbmcgdGV4dCBjb2xvciBmb3IgdGhlIGdpdmVuIGJhY2tncm91bmQgY29sb3IKCS8vIGh0dHBzOi8vMjR3YXlzLm9yZy8yMDEwL2NhbGN1bGF0aW5nLWNvbG9yLWNvbnRyYXN0LwoJZnVuY3Rpb24gY2FsY0NvbnRyYXN0KGhleCkgewoJCWNvbnN0IHIgPSBwYXJzZUludChoZXguc3Vic3RyKDAsIDIpLCAxNiksCgkJCWcgPSBwYXJzZUludChoZXguc3Vic3RyKDIsIDIpLCAxNiksCgkJCWIgPSBwYXJzZUludChoZXguc3Vic3RyKDQsIDIpLCAxNiksCgkJCXlpcSA9ICgociAqIDI5OSkgKyAoZyAqIDU4NykgKyAoYiAqIDExNCkpIC8gMTAwMDsKCQlyZXR1cm4geWlxID49IDEyOCA/ICJibGFjayIgOiAid2hpdGUiOwoJfQoKCWZ1bmN0aW9uICQoc2VsZWN0b3IsIGVsKSB7CgkJcmV0dXJuIChlbCB8fCBkb2N1bWVudCkucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7Cgl9CgoJLy8gQWRkIEdNIG9wdGlvbnMKCUdNX3JlZ2lzdGVyTWVudUNvbW1hbmQoCgkJIlNldCBsYWJlbCBDb2xvclBpY2tlciBzd2F0Y2hlcyAoOCBIRVggb3IgUkdCQSBNYXgpIiwKCQkoKSA9PiB7CgkJCWNvbnN0IGNvbG9ycyA9IEdNX2dldFZhbHVlKCJjb2xvclBpY2tlck1lbW9zTm9BbHBoYSIsICIjMDAwMDAwLCNmZmZmZmYiKSwKCQkJCXZhbCA9IHByb21wdCgiU2V0IGxhYmVsIGRlZmF1bHQgY29sb3JzICg4IG1heCk6IiwgY29sb3JzKTsKCQkJaWYgKHZhbCAhPT0gbnVsbCAmJiB0eXBlb2YgdmFsID09PSAic3RyaW5nIikgewoJCQkJR01fc2V0VmFsdWUoImNvbG9yUGlja2VyTWVtb3NOb0FscGhhIiwgY29udmVydENvbG9yc1RvUmdiYSh2YWwpKTsKCQkJfQoJCX0KCSk7CgoJZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIGV2ZW50ID0+IHsKCQkvLyBpbml0aWFsaXplIGlmICJFZGl0IiBvciAiTmV3IGxhYmVsIiBidXR0b24gY2xpY2tlZAoJCS8vIGJlY2F1c2UgIlNhdmUgY2hhbmdlcyIgdXBkYXRlcyB0aGUgZW50aXJlIGl0ZW0KCQlpZiAoCgkJCWV2ZW50LnRhcmdldCAmJiBldmVudC50YXJnZXQubWF0Y2hlcygiLmpzLWVkaXQtbGFiZWwsIC5qcy1kZXRhaWxzLXRhcmdldCIpCgkJKSB7CgkJCWFkZFBpY2tlcigpOwoJCX0KCX0pOwoJYWRkUGlja2VyKCk7Cgp9KSgpOwo=","requires":[{"meta":{"name":"colorPicker.js","url":"https://greasyfork.org/scripts/23181-colorpicker/code/colorPicker.js?version=147862","ts":1645727303806,"mimetype":"text/javascript"},"source":""}]},{"name":"GitHub Mentioned Links","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["https://github.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645115844085,"data":{}},"enabled":true,"position":13,"file_url":"https://raw.githubusercontent.com/Mottie/GitHub-userscripts/master/github-mentioned-links.user.js","uuid":"d7f35db1-d1a1-475a-9157-3f4e22d07318","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIEdpdEh1YiBNZW50aW9uZWQgTGlua3MKLy8gQHZlcnNpb24gICAgIDAuMS4yCi8vIEBkZXNjcmlwdGlvbiBBIHVzZXJzY3JpcHQgYWRkcyBhbGwgbWVudGlvbmVkIGxpbmtzIGluIHRoZSBzaWRlIGJhcgovLyBAbGljZW5zZSAgICAgTUlUCi8vIEBhdXRob3IgICAgICBSb2IgR2Fycmlzb24KLy8gQG5hbWVzcGFjZSAgIGh0dHBzOi8vZ2l0aHViLmNvbS9Nb3R0aWUKLy8gQGluY2x1ZGUgICAgIGh0dHBzOi8vZ2l0aHViLmNvbS8qCi8vIEBydW4tYXQgICAgICBkb2N1bWVudC1pZGxlCi8vIEBncmFudCAgICAgICBHTV9nZXRWYWx1ZQovLyBAZ3JhbnQgICAgICAgR01fc2V0VmFsdWUKLy8gQHJlcXVpcmUgICAgIGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvc2NyaXB0cy8yODcyMS1tdXRhdGlvbnMvY29kZS9tdXRhdGlvbnMuanM/dmVyc2lvbj05NTI2MDEKLy8gQHJlcXVpcmUgICAgIGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvc2NyaXB0cy8zOTg4NzctdXRpbHMtanMvY29kZS91dGlsc2pzLmpzP3ZlcnNpb249OTUyNjAwCi8vIEBpY29uICAgICAgICBodHRwczovL2dpdGh1Yi5naXRodWJhc3NldHMuY29tL3Bpbm5lZC1vY3RvY2F0LnN2ZwovLyBAdXBkYXRlVVJMICAgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01vdHRpZS9HaXRIdWItdXNlcnNjcmlwdHMvbWFzdGVyL2dpdGh1Yi1tZW50aW9uZWQtbGlua3MudXNlci5qcwovLyBAZG93bmxvYWRVUkwgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01vdHRpZS9HaXRIdWItdXNlcnNjcmlwdHMvbWFzdGVyL2dpdGh1Yi1tZW50aW9uZWQtbGlua3MudXNlci5qcwovLyBAc3VwcG9ydFVSTCAgaHR0cHM6Ly9naXRodWIuY29tL01vdHRpZS9HaXRIdWItdXNlcnNjcmlwdHMvaXNzdWVzCi8vID09L1VzZXJTY3JpcHQ9PQovKiBnbG9iYWwgJCAkJCBvbiAqLwooKCkgPT4gewoJInVzZSBzdHJpY3QiOwoKCS8vIEdpdEh1YiBsb3ZlcyB0byBjaGFuZ2UgY2xhc3MgbmFtZXMKCWNvbnN0IHNlbGVjdG9ycyA9IHsKCQkvLyBJbnNlcnQgZW50cnkgYWZ0ZXIgbWlsZXN0b25lIGluIHRoZSBzaWRlYmFyCgkJc2lkZWJhcjogIi5kaXNjdXNzaW9uLXNpZGViYXItaXRlbS5zaWRlYmFyLXByb2dyZXNzLWJhciIsCgkJLy8gTG9hZCBtb3JlIGNvbW1lbnRzIGJ1dHRvbiAoMiBidXR0b25zOyBlaXRoZXIgd29ya3MpCgkJbG9hZE1vcmU6ICJmb3JtW2FjdGlvbio9J21vcmVfaXRlbXMnXSBidXR0b24iLAoJCS8vIElzc3VlL1BSIHRpbWVsaW5lIGVsZW1lbnQgd2l0aCBhbmNob3IgaWQKCQl0aW1lbGluZUdyb3VwOiAiLnRpbWVsaW5lLWNvbW1lbnQtZ3JvdXAiLAoJCS8vIEFsbCBsaW5rcyB3aXRoaW4gYSB0aW1lbGluZSBjb21tZW50CgkJbGlua3M6ICIuY29tbWVudC1ib2R5IGE6bm90KC51c2VyLW1lbnRpb24pIgoJfTsKCgljb25zdCBpbnRlcm5hbExpbmtJY29uID0gYAoJCTxzdmcgYXJpYS1oaWRkZW49InRydWUiIGNsYXNzPSJvY3RpY29uIG9jdGljb24taW50ZXJuYWwtbGluayIgdmlld0JveD0iMCAwIDEyIDE2IiBoZWlnaHQ9IjEyIj4KCQkJPHBhdGggZD0iTTExIDEwaDF2M2MwIC42LS40IDEtMSAxSDFjLS42IDAtMS0uNC0xLTFWM2MwLS41LjQtMSAxLTFoM3YxSDF2MTBoMTB2LTN6Ii8+CgkJCTxwYXRoIGQ9Ik0xMSA5TDguOCA2LjcgMTIgMy41IDEwLjUgMiA3LjMgNS4yIDUgM3Y2eiIvPgoJCTwvc3ZnPmAKCgkvLyBTaWRlYmFyIGl0ZW0KCWNvbnN0IGl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkZXRhaWxzIik7CglpdGVtLmlkID0gImdobWwtd3JhcHBlciI7CglpdGVtLmNsYXNzTmFtZSA9ICJkaXNjdXNzaW9uLXNpZGViYXItaXRlbSBzaWRlYmFyLW1lbnRpb25lZC1saW5rcyI7CglpdGVtLm9wZW4gPSBHTV9nZXRWYWx1ZSgibWVudGlvbmVkT3BlbmVkIiwgZmFsc2UpOwoJaXRlbS5vbmNsaWNrID0gZXZlbnQgPT4gewoJCS8vIFNldCBhcyBvcHBvc2l0ZSBtYWtlcyBpdCB3b3JrPyEgRE9NIHVwZGF0ZSBkZWxheSwgbWF5YmU/CgkJR01fc2V0VmFsdWUoIm1lbnRpb25lZE9wZW5lZCIsICFldmVudC50YXJnZXQucGFyZW50RWxlbWVudC5vcGVuKTsKCX07CgoJLy8gTG9hZCBtb3JlIGJ1dHRvbgoJY29uc3QgbG9hZE1vcmVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJidXR0b24iKTsKCWxvYWRNb3JlQnV0dG9uLmNsYXNzTmFtZSA9ICJidG4gYnRuLWJsb2NrIGJ0bi1zbSB3aWR0aC1hdXRvIG1sLTIgcHktMCBweC0xIHRleHQtbm9ybWFsIjsKCWxvYWRNb3JlQnV0dG9uLnN0eWxlLmZvbnRTaXplID0gIjEwcHgiOwoJbG9hZE1vcmVCdXR0b24udGl0bGUgPSAiRWFjaCBjbGljayBsb2FkcyB1cCB0byA2MCBpdGVtcyI7CgoJZnVuY3Rpb24gZ2V0TGlua3MoKSB7CgkJY29uc3QgbGlzdCA9IG5ldyBTZXQoKTsKCQljb25zdCBsaW5rcyA9IFtdOwoJCSQkKHNlbGVjdG9ycy50aW1lbGluZUdyb3VwKS5mb3JFYWNoKGJvZHkgPT4gewoJCQkkJChzZWxlY3RvcnMubGlua3MsIGJvZHkpLmZvckVhY2gobGluayA9PiB7CgkJCQlpZiAoIWxpc3QuaGFzKGxpbmsuaHJlZikgJiYgISQoImltZyIsIGxpbmspKSB7CgkJCQkJbGlzdC5hZGQobGluay5ocmVmKTsKCQkJCQlsaW5rcy5wdXNoKAoJCQkJCQlgPGxpIGNsYXNzPSJjc3MtdHJ1bmNhdGUgY3NzLXRydW5jYXRlLW92ZXJmbG93Ij4KCQkJCQkJCTxhIGhyZWY9IiMke2JvZHkuaWR9IiBjbGFzcz0ibGluay1ncmF5IiB0aXRsZT0iSW50ZXJuYWwgbGluayI+CgkJCQkJCQkJJHtpbnRlcm5hbExpbmtJY29ufQoJCQkJCQkJPC9hPgoJCQkJCQkJJHtsaW5rLm91dGVySFRNTH0KCQkJCQkJPC9saT5gCgkJCQkJKTsKCQkJCX0KCQkJfSk7CgkJfSk7CgkJbGlzdC5jbGVhcigpOwoJCWJ1aWxkTGlua3MobGlua3MpOwoJfQoKCWZ1bmN0aW9uIGFkZExvYWRNb3JlQnV0dG9uKCkgewoJCWNvbnN0IGZvcm1CdXR0b24gPSAkKHNlbGVjdG9ycy5sb2FkTW9yZSk7CgkJaWYgKGZvcm1CdXR0b24pIHsKCQkJY29uc3QgbW9yZSA9IGxvYWRNb3JlQnV0dG9uLmNsb25lTm9kZSh0cnVlKTsKCQkJbW9yZS50ZXh0Q29udGVudCA9IGZvcm1CdXR0b24udGV4dENvbnRlbnQ7CgkJCW1vcmUub25jbGljayA9IGV2ZW50ID0+IHsKCQkJCWNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDsKCQkJCXRhcmdldC50ZXh0Q29udGVudCA9ICJMb2FkaW5n4oCmIjsKCQkJCWZvcm1CdXR0b24uY2xpY2soKTsKCQkJfTsKCQkJJCgiI2dobWwtd3JhcHBlciBzdW1tYXJ5IikuYXBwZW5kKG1vcmUpOwoJCX0KCX0KCglmdW5jdGlvbiBidWlsZExpbmtzKGxpbmtzKSB7CgkJY29uc3QgZW50cnkgPSAkKCIjZ2htbC13cmFwcGVyIikgfHwgaXRlbS5jbG9uZU5vZGUodHJ1ZSk7CgkJZW50cnkuaW5uZXJIVE1MID0gYAoJCQk8c3VtbWFyeSBjbGFzcz0iZGlzY3Vzc2lvbi1zaWRlYmFyLWhlYWRpbmcgdGV4dC1ib2xkIGQtZmxleCBmbGV4LWl0ZW1zLWNlbnRlciI+CgkJCQlNZW50aW9uZWQgTGlua3MKCQkJPC9zdW1tYXJ5PgoJCQk8dWwgY2xhc3M9Imxpc3Qtc3R5bGUtbm9uZSI+CgkJCQkke2xpbmtzLmxlbmd0aCA/IGxpbmtzLmpvaW4oIiIpIDogIk5vIGxpbmtzIGZvdW5kIn0KCQkJPC91bD5gOwoJCSQoc2VsZWN0b3JzLnNpZGViYXIpLmFmdGVyKGVudHJ5KTsKCQlhZGRMb2FkTW9yZUJ1dHRvbigpOwoJfQoKCWZ1bmN0aW9uIGluaXQoKSB7CgkJaWYgKCQoIiNkaXNjdXNzaW9uX2J1Y2tldCIpICYmICQoc2VsZWN0b3JzLnNpZGViYXIpKSB7CgkJCWdldExpbmtzKCk7CgkJfQoJfQoKCW9uKGRvY3VtZW50LCAiZ2htbzpjb250YWluZXIgZ2htbzpjb21tZW50cyIsIGluaXQpOwoJaW5pdCgpOwoKfSkoKTsK","requires":[{"meta":{"name":"mutations.js","url":"https://greasyfork.org/scripts/28721-mutations/code/mutations.js?version=952601","ts":1645727303986,"mimetype":"text/javascript"},"source":"LyogR2l0SHViIG11dGF0aW9ucyBvYnNlcnZlciBsaWJyYXJ5IHNjcmlwdCB2MC40LjQKICogRGV0ZWN0IGNoYW5nZXMgdG8gdmFyaW91cyBlbGVtZW50cyBhbmQgdHJpZ2dlciBhbiBldmVudAogKiBUaGlzIHNjcmlwdCBpcyBtZWFudCB0byBiZSB1c2VkIGFzIGEgbGlicmFyeSBmb3IgR2l0SHViLWJhc2VkIHVzZXJzY3JpcHRzCiAqIENvcHlyaWdodCDCqSAyMDIxIFJvYiBHYXJyaXNvbgogKiBMaWNlbnNlOiBNSVQKICovCigoKSA9PiB7CgkidXNlIHN0cmljdCI7CgoJLy8gcHJlZml4IGZvciBldmVudCAmIGRvY3VtZW50IGJvZHkgY2xhc3MgbmFtZSwgZS5nLiAiZ2htbzpjb250YWluZXIiCgljb25zdCBwcmVmaXggPSAiZ2htbyIsCgkJZGlzYWJsZUF0dHIgPSBgZGF0YS0ke3ByZWZpeH0tZGlzYWJsZWAsCgkJZGVib3VuY2VJbnRlcnZhbCA9IDIwMCwKCQl0YXJnZXRzID0gewoJCQkvLyBwamF4IGNvbnRhaW5lciAoY292ZXJzIGdlbmVyYWwsIHJlcG8gJiBnaXN0cykKCQkJLy8gLm5ld3MgPSBuZXdzZmVlZCBsYXlvdXQKCQkJLy8gLnJlcG9zaXRvcnktY29udGVudCA9IGZpbGUgY29kZSAoY29kZSBmb2xkaW5nKQoJCQkiW2RhdGEtcGpheC1jb250YWluZXJdLCAubmV3cywgLnJlcG9zaXRvcnktY29udGVudCI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbnRhaW5lciIKCQkJfSwKCQkJLy8gY29tbWVudCBwcmV2aWV3IGFjdGl2ZQoJCQkiLmpzLXByZXZpZXctYm9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInByZXZpZXciCgkJCX0sCgkJCS8vIC5qcy1kaXNjdXNzaW9uID0gd3JhcHBlciBmb3IgcHJvZ3Jlc3NpdmVseSBsb2FkZWQgY29tbWVudHM7CgkJCS8vICIjIGl0ZW1zIG5vdCBzaG93biIgZXhhbXBsZTogaHR0cHM6Ly9naXRodWIuY29tL2lzYWFjcy9naXRodWIvaXNzdWVzLzE4CgkJCS8vIC5kaXNjdXNzaW9uLWl0ZW0gPSBpc3N1ZSBzdGF0dXMgY2hhbmdlZCAoZ2l0aHViLWlzc3VlLXNob3ctc3RhdHVzKQoJCQkvLyAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIgPSBsb2FkIGhpZGRlbiBpdGVtcyAob2xkPykKCQkJLy8gI2pzLXByb2dyZXNzaXZlLXRpbWVsaW5lLWl0ZW0tY29udGFpbmVyID0gbG9hZCBoaWRkZW4gaXRlbXMKCQkJIi5qcy1kaXNjdXNzaW9uLCAuZGlzY3Vzc2lvbi1pdGVtLCAudG9vbGJhci1pdGVtLCAjcHJvZ3Jlc3NpdmUtdGltZWxpbmUtaXRlbS1jb250YWluZXIsICNqcy1wcm9ncmVzc2l2ZS10aW1lbGluZS1pdGVtLWNvbnRhaW5lciI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImNvbW1lbnRzIgoJCQl9LAoJCQkvLyBwcm9ncmVzc2l2ZWx5IGxvYWRlZCBjb250ZW50IChkaWZmIGZpbGVzKQoJCQkiLmpzLWRpZmYtcHJvZ3Jlc3NpdmUtY29udGFpbmVyLCAuZGF0YS5ibG9iLXdyYXBwZXIsIC5qcy1kaWZmLWxvYWQtY29udGFpbmVyLCAuZGlmZi10YWJsZSB0Ym9keSI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogImRpZmYiCgkJCX0sCgkJCS8vIGlzc3Vlcy9wciBzaWRlYmFyICYgdGltZWxpbmUgc2VjdGlvbnM6IGUuZy4gZm9ybSBhY3Rpb25zLCBjb21taXQKCQkJLy8gcmVmZXJlbmNlcywgZGVwbG95bWVudCBzdGF0ZSAmIFBSIGNoZWNrcyBjb250YWluZXIKCQkJIi5qcy11cGRhdGFibGUtY29udGVudCwgLmpzLXVwZGF0YWJsZS1jb250ZW50LXByZXNlcnZlLXNjcm9sbC1wb3NpdGlvbiI6IHsKCQkJCWNvdW50OiAwLAoJCQkJbmFtZTogInVwZGF0YWJsZSIKCQkJfSwKCQkJLy8gdXNlciBwcm9maWxlIG1lbnUgKGxvYWRzIG9uIGhvdmVyKQoJCQkiZGV0YWlscy1tZW51IjogewoJCQkJY291bnQ6IDAsCgkJCQluYW1lOiAibWVudSIKCQkJfQoJCX0sCgkJbGlzdCA9IE9iamVjdC5rZXlzKHRhcmdldHMpOwoKCWZ1bmN0aW9uIGZpcmVFdmVudHMoKSB7CgkJbGlzdC5mb3JFYWNoKHNlbGVjdG9yID0+IHsKCQkJaWYgKHRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID4gMCkgewoJCQkJLy8gZXZlbnQgPT4gImdobW86Y29udGFpbmVyIiwgImdobW86Y29tbWVudHMiCgkJCQljb25zdCBldmVudCA9IG5ldyBFdmVudChwcmVmaXggKyAiOiIgKyB0YXJnZXRzW3NlbGVjdG9yXS5uYW1lKTsKCQkJCWRvY3VtZW50LmRpc3BhdGNoRXZlbnQoZXZlbnQpOwoJCQl9CgkJCXRhcmdldHNbc2VsZWN0b3JdLmNvdW50ID0gMDsKCQl9KTsKCX0KCglmdW5jdGlvbiBpbml0KCkgewoJCS8vIHByZXZlbnQgZXJyb3Igd2hlbiBsaWJyYXJ5IGlzIGxvYWRlZCBhdCBkb2N1bWVudC1zdGFydCAmIG5vIGJvZHkgZXhpc3RzCgkJY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiYm9keSIpOwoJCWxldCB0aW1lcjsKCQkvLyBwcmV2ZW50IHNjcmlwdCBmcm9tIGluc3RhbGxpbmcgbW9yZSB0aGFuIG9uY2UKCQlpZiAoY29udGFpbmVyICYmICFjb250YWluZXIuY2xhc3NMaXN0LmNvbnRhaW5zKHByZWZpeCArICItZW5hYmxlZCIpKSB7CgkJCWNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKHByZWZpeCArICItZW5hYmxlZCIpOwoJCQkvLyBib3VuZCB0byBkb2N1bWVudC5ib2R5Li4uIHRoaXMgbWF5IGJlIGJhZCBmb3IgcGVyZm9ybWFuY2UKCQkJLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzkzMzIzNDAvMTQ1MzQ2CgkJCW5ldyBNdXRhdGlvbk9ic2VydmVyKG11dGF0aW9ucyA9PiB7CgkJCQljbGVhclRpbWVvdXQodGltZXIpOwoJCQkJLyogZG9jdW1lbnQuYm9keSBhdHRyaWJ1dGUgdXNlZCB0byBkaXNhYmxlIHVwZGF0ZXM7IGl0ICpzaG91bGQgbm90KgoJCQkJICogYmUgdXNlZCByZWd1bGFybHkgYXMgbXVsdGlwbGUgc2NyaXB0cyBtYXkgZW5hYmxlIG9yIGRpc2FibGUgdGhlCgkJCQkgKiBvYnNlcnZlcnMgYXQgaW5hcHByb3ByaWF0ZSB0aW1lcy4gSXQgaXMgYmVzdCB0aGF0IGVhY2ggc2NyaXB0IGhhbmRsZXMKCQkJCSAqIHRoZSBtdXRhdGlvbiBldmVudHMgdHJpZ2dlcmVkIGJ5IHRoaXMgbGlicmFyeSBvbiBpdHMgb3duCgkJCQkgKi8KCQkJCWlmIChjb250YWluZXIuZ2V0QXR0cmlidXRlKGRpc2FibGVBdHRyKSkgewoJCQkJCXJldHVybjsKCQkJCX0KCQkJCWxldCBtaW5keCwgdGFyZ2V0LCBsaW5keCwKCQkJCQlsbGVuID0gbGlzdC5sZW5ndGgsCgkJCQkJbWxlbiA9IG11dGF0aW9ucy5sZW5ndGg7CgkJCQkvLyBhdm9pZGluZyB1c2Ugb2YgZm9yRWFjaCBsb29wcyBmb3IgcGVyZm9ybWFuY2UgcmVhc29ucwoJCQkJZm9yIChtaW5keCA9IDA7IG1pbmR4IDwgbWxlbjsgbWluZHgrKykgewoJCQkJCXRhcmdldCA9IG11dGF0aW9uc1ttaW5keF0udGFyZ2V0OwoJCQkJCWlmICh0YXJnZXQpIHsKCQkJCQkJZm9yIChsaW5keCA9IDA7IGxpbmR4IDwgbGxlbjsgbGluZHgrKykgewoJCQkJCQkJaWYgKHRhcmdldC5tYXRjaGVzKGxpc3RbbGluZHhdKSkgewoJCQkJCQkJCXRhcmdldHNbbGlzdFtsaW5keF1dLmNvdW50Kys7CgkJCQkJCQl9CgkJCQkJCX0KCQkJCQl9CgkJCQkJdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHsKCQkJCQkJZmlyZUV2ZW50cygpOwoJCQkJCX0sIGRlYm91bmNlSW50ZXJ2YWwpOwoJCQkJfQoJCQl9KS5vYnNlcnZlKGNvbnRhaW5lciwgewoJCQkJY2hpbGRMaXN0OiB0cnVlLAoJCQkJc3VidHJlZTogdHJ1ZQoJCQl9KTsKCQl9Cgl9CgoJaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICJsb2FkaW5nIikgewoJCWRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLCAoKSA9PiBpbml0KTsKCX0gZWxzZSB7CgkJaW5pdCgpOwoJfQoKfSkoKTsK"},{"meta":{"name":"utilsjs.js","url":"https://greasyfork.org/scripts/398877-utils-js/code/utilsjs.js?version=952600","ts":1645727303956,"mimetype":"text/javascript"},"source":""}]},{"name":"RichPresence","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://discord.com/*","https://ptb.discord.com/*","https://canary.discord.com/*","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=discord.com%2Fapp","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=canary.discord.com%2Fapp","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=ptb.discord.com%2Fapp"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645115844091,"data":{}},"enabled":false,"position":14,"file_url":"https://github.com/Project-Browser/Userscripts/raw/main/RichPresence.user.js","uuid":"888407ef-b683-4847-ac8a-89b395dea520","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBSaWNoUHJlc2VuY2UKLy8gQHZlcnNpb24gICAgICAxLjAuNQovLyBAZGVzY3JpcHRpb24gIFNldHMgUEMgUXVhbGl0eSBSaWNoIFByZXNlbmNlIG9uIFRoZSBXZWIgVmVyc2lvbiBvZiBZb3VyIERpc2NvcmQgYWNjb3VudC4KLy8gQGF1dGhvciAgICAgICBHYWJlVE0gJiBsZXhpc290aGVyCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9kaXNjb3JkLmNvbS8qCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9wdGIuZGlzY29yZC5jb20vKgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vY2FuYXJ5LmRpc2NvcmQuY29tLyoKLy8gQG1hdGNoICAgICAgICBodHRwOi8vYmxvY2tlZC5jb20tZGVmYXVsdC53cy8/b0k9MTA0MjgzODc0NDkmdHlwZT1jaHJvbWl1bS1tJnVybD1kaXNjb3JkLmNvbSUyRmFwcAovLyBAbWF0Y2ggICAgICAgIGh0dHA6Ly9ibG9ja2VkLmNvbS1kZWZhdWx0LndzLz9vST0xMDQyODM4NzQ0OSZ0eXBlPWNocm9taXVtLW0mdXJsPWNhbmFyeS5kaXNjb3JkLmNvbSUyRmFwcAovLyBAbWF0Y2ggICAgICAgIGh0dHA6Ly9ibG9ja2VkLmNvbS1kZWZhdWx0LndzLz9vST0xMDQyODM4NzQ0OSZ0eXBlPWNocm9taXVtLW0mdXJsPXB0Yi5kaXNjb3JkLmNvbSUyRmFwcAovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gQG5hbWVzcGFjZSAgICBodHRwczovL2dpdGh1Yi5jb20vUHJvamVjdC1Ccm93c2VyL1JpY2hQcmVzZW5jZQovLyBAaWNvbiAgICAgICAgIGh0dHBzOi8vY2RuLmRpc2NvcmRhcHAuY29tL2FwcC1hc3NldHMvODM4ODM5NDU4MzUwMjM1NzU5LzgzODg4NjExMDAwODQ0Mjk1Mi5wbmcKLy8gPT0vVXNlclNjcmlwdD09CgovLyBWYXJzCmNvbnN0IElEID0gJzcxMTQxNjk1NzcxODc1NzQxOCc7IC8vIGhlYWQgdG8gaHR0cHM6Ly9kaXNjb3JkLmNvbS9kZXZlbG9wZXJzIHRvIG1ha2UgeW91ciBvd24KY29uc3QgVElUTEUgPSAnUGFpbic7IC8vIFRpdGxlCmNvbnN0IERFVEFJTFMgPSAnSW0gaW4nOyAvLyAybmQgUGFydCBvZiBUaGUgVGl0bGUKY29uc3QgU1RBVEUgPSAnSGVsbCc7IC8vIExhc3QgUGFydCBvZiBUaGUgVGl0bGUKY29uc3QgTEFSR0VfSU1BR0UgPSAncG93ZXJjb3JkJzsgLy8gaGVhZCB0byBodHRwczovL2Rpc2NvcmQuY29tL2RldmVsb3BlcnMgdG8gYWRkIHlvdXIgb3duIGltYWdlcwpjb25zdCBTTUFMTF9JTUFHRSA9ICdwb3dlcmNvcmQnOyAvLyBoZWFkIHRvIGh0dHBzOi8vZGlzY29yZC5jb20vZGV2ZWxvcGVycyB0byBhZGQgeW91ciBvd24gaW1hZ2VzCmNvbnN0IExBUkdFX0lNQUdFX1RFWFQgPSAnSSB3YW50IHRvIHVucGx1ZyBteSBsaWZlJzsgLy8gQmlnIEltYWdlIFRleHQKY29uc3QgU01BTExfSU1BR0VfVEVYVCA9ICdwbHogdW5wbHVnIG15IGxpZmUnOyAvLyBTbWFsbCBpbWFnZSB0ZXh0CmNvbnN0IEJVVFRPTl8yID0gJ1JpY2hQcmVzZW5jZSc7IC8vIEJ1dHRvbiAyJ3MgTGFiZWwKY29uc3QgQlVUVE9OXzEgPSAnVGFtcGVybW9ua2V5JzsgLy8gQnV0dG9uIDEncyBMYWJlbApjb25zdCBVUkxfMiA9ICdodHRwczovL2dpdGh1Yi5jb20vUHJvamVjdC1Ccm93c2VyL1VzZXJzY3JpcHRzL2Jsb2IvbWFpbi9SaWNoUHJlc2VuY2UudXNlci5qcyc7IC8vIFVSTCAyJ3MgTGluawpjb25zdCBVUkxfMSA9ICdodHRwczovL2Nocm9tZS5nb29nbGUuY29tL3dlYnN0b3JlL2RldGFpbC90YW1wZXJtb25rZXkvZGhkZ2Zma2tlYmhta2Zqb2plam1wYmxkbXBvYmZrZm8nOyAvLyBVUkwgMSdzIExpbmsKCgovLyBPcmlnaW5hbCBDb2RlIE1hZGUgQnkgR2FiZVRNCi8vIE9yaWdpbmFsIENvZGUgTW9kaWZlZCBGb3IgV2ViIEJ5IGxleGlzb3RoZXIgJiBHYWJlVE0KLy8gTWV0YSBNb2RpZmVkIEJ5IFRoZVJlYWxHV0pvc2gKLy8gSG9zdGVkIEJ5IFRoZVJlYWxHV0pvc2gKLy8gSWNvbiBNYWRlIEJ5IHYtYnJpZXNlCi8vIEljb24gTW9kaWZlZCBCeSBUaGVSZWFsR1dKb3NoCgovLyBHYWJlVE0ncyBHaXRodWIgaHR0cHM6Ly9naXRodWIuY29tL0dhYmVUTQovLyBsZXhpc290aGVyJ3MgR2l0aHViIGh0dHBzOi8vZ2l0aHViLmNvbS9sZXhpc290aGVyCi8vIFRoZVJlYWxHV0pvc2gncyBHaXRodWIgaHR0cHM6Ly9naXRodWIuY29tL1RoZVJlYWxHV0pvc2gKLy8gdi1icmllc2UncyBHaXRodWIgaHR0cHM6Ly9naXRodWIuY29tL3YtYnJpZXNlCgpjb25zb2xlLmxvZygnZXhlY3V0ZWQnKTsKCihhc3luYyAoKSA9PiB7CiAgICBhd2FpdCBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gc2V0VGltZW91dChyZXNvbHZlLCAxNTAwMCkpOwogICAgY29uc3QgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB7CiAgICAgICAgY29uc29sZS5sb2coJ3dhaXRpbmcgZm9yIHZhcmlhYmxlJyk7CiAgICAgICAgaWYgKCF3aW5kb3cuaGFzT3duUHJvcGVydHkoJ3dlYnBhY2tKc29ucCcpKXsKICAgICAgICAgICAgY29uc29sZS5sb2coJ05PVCBRVUlURSBUSEVSRSBZRVQnKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBjb25zb2xlLmxvZygndmFyaWFibGUgaXMgZGVmaW5lZCcpOwoKICAgICAgICAgICAgY29uc3QgeCA9IHdpbmRvdy53ZWJwYWNrSnNvbnAucHVzaChbW10sIHsnXyc6IChhLCBfLCBiKSA9PiB7CiAgICAgICAgICAgICAgICBhLmV4cG9ydHMgPSBiOwogICAgICAgICAgICB9fSwgW1snXyddXV0pLmM7CgogICAgICAgICAgICBmb3IgKGNvbnN0IGkgaW4geCkgewogICAgICAgICAgICAgICAgeFtpXT8uZXhwb3J0cz8uZGVmYXVsdD8uU0VUX0FDVElWSVRZPy5oYW5kbGVyKHsKICAgICAgICAgICAgICAgICAgICAnc29ja2V0JzogewogICAgICAgICAgICAgICAgICAgICAgICAnaWQnOiAxMDAsIC8vIExlYXZlIFRoaXMgQWxvbmUKICAgICAgICAgICAgICAgICAgICAgICAgJ2FwcGxpY2F0aW9uJzogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2lkJzogSUQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbmFtZSc6IFRJVExFCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICd0cmFuc3BvcnQnOiAnaXBjJyAvLyBMZWF2ZSBUaGlzIEFsb25lCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAnYXJncyc6IHsKICAgICAgICAgICAgICAgICAgICAgICAgJ3BpZCc6IDEwLCAvLyBMZWF2ZSBUaGlzIEFsb25lCiAgICAgICAgICAgICAgICAgICAgICAgICdhY3Rpdml0eSc6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkZXRhaWxzJzogREVUQUlMUywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzdGF0ZSc6IFNUQVRFLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2J1dHRvbnMnOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbGFiZWwnOiBCVVRUT05fMSwgLy8gQnV0dG9uIDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3VybCc6IFVSTF8xIC8vIFVSTCAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdsYWJlbCc6IEJVVFRPTl8yLCAvLyBCdXR0b24gMgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAndXJsJzogVVJMXzIgLy8gVVJMIDIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RpbWVzdGFtcHMnOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3N0YXJ0JzogRGF0ZS5ub3coKSwgLy8gTGVhdmUgVGhpcyBBbG9uZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdhc3NldHMnOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xhcmdlX2ltYWdlJzogTEFSR0VfSU1BR0UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xhcmdlX3RleHQnOiBMQVJHRV9JTUFHRV9URVhULAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzbWFsbF9pbWFnZSc6IFNNQUxMX0lNQUdFLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzbWFsbF90ZXh0JzogU01BTExfSU1BR0VfVEVYVAogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7CiAgICAgICAgfQogICAgfSwgNTAwMCk7CgogICAgY29uc29sZS5sb2coJ2VuZCBvZiBhc3luYyBjYWxsIHN0YWNrJyk7Cn0pKCk7"},{"name":"Unblock GoGuardian","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://blocked.goguardian.com/*","chrome-extension://haldlgldplgnggkjaafhelgiaglafanh/x3/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645115844092,"data":{}},"enabled":true,"position":15,"file_url":"https://github.com/Project-Browser/Userscripts/raw/main/Unblock-GoGuardian.user.js","uuid":"5d0d2664-1c3f-4080-b00d-1c7ad1c45a55","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBVbmJsb2NrIEdvR3VhcmRpYW4KLy8gQG5hbWVzcGFjZSAgICBodHRwczovL2dpdGh1Yi5jb20vUHJvamVjdC1Ccm93c2VyL1VzZXJzY3JpcHRzLwovLyBAdmVyc2lvbiAgICAgIDEuMgovLyBAZGVzY3JpcHRpb24gIFlvdSBoYXZlIHRvIGRvd25sb2FkIElmcmFtZS1hbGxvdyhodHRwczovL2Nocm9tZS5nb29nbGUuY29tL3dlYnN0b3JlL2RldGFpbC9pZnJhbWUtYWxsb3cvZ2lmZ3BjaWdsaGhwbWVlZmpkbWxwYm9pcGtpYmhiamcpCi8vIEBhdXRob3IgICAgICAgTmltaXR5eCAmIFRoZVJlYWxHV0pvc2gKLy8gQG1hdGNoICAgICAgICBodHRwczovL2Jsb2NrZWQuZ29ndWFyZGlhbi5jb20vKgovLyBAbWF0Y2ggICAgICAgIGNocm9tZS1leHRlbnNpb246Ly9oYWxkbGdsZHBsZ25nZ2tqYWFmaGVsZ2lhZ2xhZmFuaC94My8qCi8vIEBncmFudCAgICAgICAgbm9uZQovLyBAaWNvbiAgICAgICAgIGh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vczIvZmF2aWNvbnM/ZG9tYWluPWJsb2NrZWQuY29tLWRlZmF1bHQud3MKLy8gPT0vVXNlclNjcmlwdD09CgovLyBPbGQgVXBkYXRlIFVSTCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vTmltaXR5eC91c2Vyc2NyaXB0cy9tYWluL3VuYmxvY2stZ29ndWFyZGlhbi1ibG9ja2VkLXdlYnNpdGVzLnVzZXIuanMKCmV2YWwoZnVuY3Rpb24oKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgdXJscmF3ID0gd2luZG93LmxvY2F0aW9uLmhyZWY7CiAgICB2YXIgYyA9IG5ldyBVUkwodXJscmF3KTsKICAgIHZhciB1cmwgPSBjLnNlYXJjaFBhcmFtcy5nZXQoInVybCIpOwogICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmlubmVySFRNTD0nPCFET0NUWVBFIEhUTUw+PGh0bWw+PGhlYWQ+PHRpdGxlPkJsb2NrZWQ8L3RpdGxlPjwvaGVhZD48Ym9keT48c3R5bGU+aHRtbCxib2R5e2JvcmRlcjowO21hcmdpbjowO3BhZGRpbmc6MDtoZWlnaHQ6MTAwJX1pZnJhbWV7Ym9yZGVyOjA7bWFyZ2luOjA7ZGlzcGxheTpibG9ja308L3N0eWxlPjxpZnJhbWUgc3JjPSJodHRwczovL2Rpc2NvcmQuY29tL2FwcCIgaGVpZ2h0PTEwMCUgd2lkdGg9MTAwJT48L2lmcmFtZT48L2JvZHk+PC9odG1sPic7Cn0pKCk7Cg=="},{"name":"RichPresence - Game Alt","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://discord.com/*","https://ptb.discord.com/*","https://canary.discord.com/*","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=discord.com%2Fapp","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=canary.discord.com%2Fapp","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=ptb.discord.com%2Fapp"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645115844093,"data":{}},"enabled":false,"position":16,"uuid":"9992da4c-b75e-4b52-979f-ca39be1dd1b9","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBSaWNoUHJlc2VuY2UgLSBHYW1lIEFsdAovLyBAdmVyc2lvbiAgICAgIDEuMC41Ci8vIEBkZXNjcmlwdGlvbiAgU2V0cyBQQyBRdWFsaXR5IFJpY2ggUHJlc2VuY2UgRm9yIEN1c3RvbSBHYW1lcyBXaXRoIGEgSm9pbiBCdXR0b24gb24gVGhlIFdlYiBWZXJzaW9uIG9mIFlvdXIgRGlzY29yZCBhY2NvdW50LgovLyBAYXV0aG9yICAgICAgIEdhYmVUTSAmIGxleGlzb3RoZXIKLy8gQG1hdGNoICAgICAgICBodHRwczovL2Rpc2NvcmQuY29tLyoKLy8gQG1hdGNoICAgICAgICBodHRwczovL3B0Yi5kaXNjb3JkLmNvbS8qCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9jYW5hcnkuZGlzY29yZC5jb20vKgovLyBAbWF0Y2ggICAgICAgIGh0dHA6Ly9ibG9ja2VkLmNvbS1kZWZhdWx0LndzLz9vST0xMDQyODM4NzQ0OSZ0eXBlPWNocm9taXVtLW0mdXJsPWRpc2NvcmQuY29tJTJGYXBwCi8vIEBtYXRjaCAgICAgICAgaHR0cDovL2Jsb2NrZWQuY29tLWRlZmF1bHQud3MvP29JPTEwNDI4Mzg3NDQ5JnR5cGU9Y2hyb21pdW0tbSZ1cmw9Y2FuYXJ5LmRpc2NvcmQuY29tJTJGYXBwCi8vIEBtYXRjaCAgICAgICAgaHR0cDovL2Jsb2NrZWQuY29tLWRlZmF1bHQud3MvP29JPTEwNDI4Mzg3NDQ5JnR5cGU9Y2hyb21pdW0tbSZ1cmw9cHRiLmRpc2NvcmQuY29tJTJGYXBwCi8vIEBncmFudCAgICAgICAgbm9uZQovLyBAbmFtZXNwYWNlICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9Qcm9qZWN0LUJyb3dzZXIvUmljaFByZXNlbmNlCi8vIEBpY29uICAgICAgICAgaHR0cHM6Ly9jZG4uZGlzY29yZGFwcC5jb20vYXBwLWFzc2V0cy84Mzg4Mzk0NTgzNTAyMzU3NTkvODM4ODg2MTEwMDA4NDQyOTUyLnBuZwovLyA9PS9Vc2VyU2NyaXB0PT0KCi8vIFZhcnMKY29uc3QgSUQgPSAnODM4ODM5NDU4MzUwMjM1NzU5JzsgLy8gaGVhZCB0byBodHRwczovL2Rpc2NvcmQuY29tL2RldmVsb3BlcnMgdG8gbWFrZSB5b3VyIG93bgpjb25zdCBUSVRMRSA9ICdHYW1lUHJlc2VuY2UnOyAvLyBUaXRsZQpjb25zdCBERVRBSUxTID0gJ1N0ZWFtIC0gNDc5NDk5NDAzJzsgLy8gMm5kIFBhcnQgb2YgVGhlIFRpdGxlCmNvbnN0IFNUQVRFID0gJ1BsYXlpbmcgb24gU3RlYW0nOyAvLyBMYXN0IFBhcnQgb2YgVGhlIFRpdGxlCmNvbnN0IExBUkdFX0lNQUdFID0gJ2NycC13ZWInOyAvLyBoZWFkIHRvIGh0dHBzOi8vZGlzY29yZC5jb20vZGV2ZWxvcGVycyB0byBhZGQgeW91ciBvd24gaW1hZ2VzCmNvbnN0IFNNQUxMX0lNQUdFID0gJ2Rpc2NvcmQnOyAvLyBoZWFkIHRvIGh0dHBzOi8vZGlzY29yZC5jb20vZGV2ZWxvcGVycyB0byBhZGQgeW91ciBvd24gaW1hZ2VzCmNvbnN0IExBUkdFX0lNQUdFX1RFWFQgPSAnT3BlbiBNeSBQcm9maWxlIFRvIEpvaW4gb24gU3RlYW0nOyAvLyBCaWcgSW1hZ2UgVGV4dApjb25zdCBTTUFMTF9JTUFHRV9URVhUID0gJ1JpY2ggUHJlc2VuY2UgRm9yIFdlYiBWMS41JzsgLy8gU21hbGwgaW1hZ2UgdGV4dApjb25zdCBNSU5fUEFSVFlfU0laRSA9IDE7IC8vIEhvdyBNYW55IEluIFRoZSBMb2JieQpjb25zdCBNQVhfUEFSVFlfU0laRSA9IDE7IC8vIExvYmJ5IFNpemUKCi8vIE9yaWdpbmFsIENvZGUgTWFkZSBCeSBHYWJlVE0KLy8gT3JpZ2luYWwgQ29kZSBNb2RpZmVkIEZvciBXZWIgQnkgbGV4aXNvdGhlciAmIEdhYmVUTQovLyBNZXRhIE1vZGlmZWQgQnkgVGhlUmVhbEdXSm9zaAovLyBIb3N0ZWQgQnkgVGhlUmVhbEdXSm9zaAovLyBJY29uIE1hZGUgQnkgdi1icmllc2UKLy8gSWNvbiBNb2RpZmVkIEJ5IFRoZVJlYWxHV0pvc2gKCi8vIEdhYmVUTSdzIEdpdGh1YiBodHRwczovL2dpdGh1Yi5jb20vR2FiZVRNCi8vIGxleGlzb3RoZXIncyBHaXRodWIgaHR0cHM6Ly9naXRodWIuY29tL2xleGlzb3RoZXIKLy8gVGhlUmVhbEdXSm9zaCdzIEdpdGh1YiBodHRwczovL2dpdGh1Yi5jb20vVGhlUmVhbEdXSm9zaAovLyB2LWJyaWVzZSdzIEdpdGh1YiBodHRwczovL2dpdGh1Yi5jb20vdi1icmllc2UKCmNvbnNvbGUubG9nKCdleGVjdXRlZCcpOwoKKGFzeW5jICgpID0+IHsKICAgIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDE1MDAwKSk7CiAgICBjb25zdCBpbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHsKICAgICAgICBjb25zb2xlLmxvZygnd2FpdGluZyBmb3IgdmFyaWFibGUnKTsKICAgICAgICBpZiAoIXdpbmRvdy5oYXNPd25Qcm9wZXJ0eSgnd2VicGFja0pzb25wJykpewogICAgICAgICAgICBjb25zb2xlLmxvZygnTk9UIFFVSVRFIFRIRVJFIFlFVCcpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCd2YXJpYWJsZSBpcyBkZWZpbmVkJyk7CgogICAgICAgICAgICBjb25zdCB4ID0gd2luZG93LndlYnBhY2tKc29ucC5wdXNoKFtbXSwgeydfJzogKGEsIF8sIGIpID0+IHsKICAgICAgICAgICAgICAgIGEuZXhwb3J0cyA9IGI7CiAgICAgICAgICAgIH19LCBbWydfJ11dXSkuYzsKCiAgICAgICAgICAgIGZvciAoY29uc3QgaSBpbiB4KSB7CiAgICAgICAgICAgICAgICB4W2ldPy5leHBvcnRzPy5kZWZhdWx0Py5TRVRfQUNUSVZJVFk/LmhhbmRsZXIoewogICAgICAgICAgICAgICAgICAgICdzb2NrZXQnOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICdpZCc6IDEwMCwgLy8gTGVhdmUgVGhpcyBBbG9uZQogICAgICAgICAgICAgICAgICAgICAgICAnYXBwbGljYXRpb24nOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaWQnOiBJRCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICduYW1lJzogVElUTEUKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgJ3RyYW5zcG9ydCc6ICdpcGMnIC8vIExlYXZlIFRoaXMgQWxvbmUKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICdhcmdzJzogewogICAgICAgICAgICAgICAgICAgICAgICAncGlkJzogMTAsIC8vIExlYXZlIFRoaXMgQWxvbmUKICAgICAgICAgICAgICAgICAgICAgICAgJ2FjdGl2aXR5JzogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RldGFpbHMnOiBERVRBSUxTLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3N0YXRlJzogU1RBVEUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndGltZXN0YW1wcyc6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc3RhcnQnOiBEYXRlLm5vdygpLCAvLyBMZWF2ZSBUaGlzIEFsb25lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3BhcnR5JzogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdpZCc6IE1hdGgucmFuZG9tKCkudG9TdHJpbmcoMTYpLnNsaWNlKDIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzaXplJzogIFtNSU5fUEFSVFlfU0laRSwgTUFYX1BBUlRZX1NJWkVdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3NlY3JldHMnOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2pvaW4nOiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDE2KS5zbGljZSgyKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdhc3NldHMnOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xhcmdlX2ltYWdlJzogTEFSR0VfSU1BR0UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xhcmdlX3RleHQnOiBMQVJHRV9JTUFHRV9URVhULAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzbWFsbF9pbWFnZSc6IFNNQUxMX0lNQUdFLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzbWFsbF90ZXh0JzogU01BTExfSU1BR0VfVEVYVAogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7CiAgICAgICAgfQogICAgfSwgNTAwMCk7CgogICAgY29uc29sZS5sb2coJ2VuZCBvZiBhc3luYyBjYWxsIHN0YWNrJyk7Cn0pKCk7"},{"name":"RichPresence - Code Alt","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["https://discord.com/*","https://ptb.discord.com/*","https://canary.discord.com/*","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=discord.com%2Fapp","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=canary.discord.com%2Fapp","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=ptb.discord.com%2Fapp"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645115844096,"data":{}},"enabled":false,"position":17,"uuid":"ff2b9bf9-e0e9-4f10-850f-f1680cecd8fe","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBSaWNoUHJlc2VuY2UgLSBDb2RlIEFsdAovLyBAdmVyc2lvbiAgICAgIDEuMC41Ci8vIEBkZXNjcmlwdGlvbiAgU2V0cyBQQyBRdWFsaXR5IFJpY2ggUHJlc2VuY2Ugb24gVGhlIFdlYiBWZXJzaW9uIG9mIFlvdXIgRGlzY29yZCBhY2NvdW50LgovLyBAYXV0aG9yICAgICAgIEdhYmVUTSAmIGxleGlzb3RoZXIKLy8gQG1hdGNoICAgICAgICBodHRwczovL2Rpc2NvcmQuY29tLyoKLy8gQG1hdGNoICAgICAgICBodHRwczovL3B0Yi5kaXNjb3JkLmNvbS8qCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9jYW5hcnkuZGlzY29yZC5jb20vKgovLyBAbWF0Y2ggICAgICAgIGh0dHA6Ly9ibG9ja2VkLmNvbS1kZWZhdWx0LndzLz9vST0xMDQyODM4NzQ0OSZ0eXBlPWNocm9taXVtLW0mdXJsPWRpc2NvcmQuY29tJTJGYXBwCi8vIEBtYXRjaCAgICAgICAgaHR0cDovL2Jsb2NrZWQuY29tLWRlZmF1bHQud3MvP29JPTEwNDI4Mzg3NDQ5JnR5cGU9Y2hyb21pdW0tbSZ1cmw9Y2FuYXJ5LmRpc2NvcmQuY29tJTJGYXBwCi8vIEBtYXRjaCAgICAgICAgaHR0cDovL2Jsb2NrZWQuY29tLWRlZmF1bHQud3MvP29JPTEwNDI4Mzg3NDQ5JnR5cGU9Y2hyb21pdW0tbSZ1cmw9cHRiLmRpc2NvcmQuY29tJTJGYXBwCi8vIEBncmFudCAgICAgICAgbm9uZQovLyBAbmFtZXNwYWNlICAgIGh0dHBzOi8vZ2l0aHViLmNvbS9HYWJlVE0KLy8gQGljb24gICAgICAgICBodHRwczovL2Nkbi5kaXNjb3JkYXBwLmNvbS9hcHAtYXNzZXRzLzgzODgzOTQ1ODM1MDIzNTc1OS84Mzg4ODYxMTAwMDg0NDI5NTIucG5nCi8vID09L1VzZXJTY3JpcHQ9PQoKLy8gVmFycwpjb25zdCBJRCA9ICczODMyMjYzMjA5NzAwNTU2ODEnOyAvLyBoZWFkIHRvIGh0dHBzOi8vZGlzY29yZC5jb20vZGV2ZWxvcGVycyB0byBtYWtlIHlvdXIgb3duCmNvbnN0IFRJVExFID0gJ0NvZGVQcmVzZW5jZSc7IC8vIFRpdGxlCmNvbnN0IERFVEFJTFMgPSAnVmlzdWFsIFN0dWRpbyBDb2RlJzsgLy8gMm5kIFBhcnQgb2YgVGhlIFRpdGxlCmNvbnN0IFNUQVRFID0gJ0VkaXRpbmcnOyAvLyBMYXN0IFBhcnQgb2YgVGhlIFRpdGxlCmNvbnN0IExBUkdFX0lNQUdFID0gJ3N0eWx1cyc7IC8vIGhlYWQgdG8gaHR0cHM6Ly9kaXNjb3JkLmNvbS9kZXZlbG9wZXJzIHRvIGFkZCB5b3VyIG93biBpbWFnZXMKY29uc3QgU01BTExfSU1BR0UgPSAndnNjb2RlaWdub3JlJzsgLy8gaGVhZCB0byBodHRwczovL2Rpc2NvcmQuY29tL2RldmVsb3BlcnMgdG8gYWRkIHlvdXIgb3duIGltYWdlcwpjb25zdCBMQVJHRV9JTUFHRV9URVhUID0gJ0JldHRlckJHLnVzZXIuY3NzJzsgLy8gQmlnIEltYWdlIFRleHQKY29uc3QgU01BTExfSU1BR0VfVEVYVCA9ICdSaWNoIFByZXNlbmNlIEZvciBXZWIgVjEuNSc7IC8vIFNtYWxsIGltYWdlIHRleHQKY29uc3QgQlVUVE9OXzIgPSAnUmljaFByZXNlbmNlJzsgLy8gQnV0dG9uIDIncyBMYWJlbApjb25zdCBCVVRUT05fMSA9ICdUYW1wZXJtb25rZXknOyAvLyBCdXR0b24gMSdzIExhYmVsCmNvbnN0IFVSTF8yID0gJ2h0dHBzOi8vZ2l0aHViLmNvbS9Qcm9qZWN0LUJyb3dzZXIvVXNlcnNjcmlwdHMvYmxvYi9tYWluL1JpY2hQcmVzZW5jZS51c2VyLmpzJzsgLy8gVVJMIDIncyBMaW5rCmNvbnN0IFVSTF8xID0gJ2h0dHBzOi8vY2hyb21lLmdvb2dsZS5jb20vd2Vic3RvcmUvZGV0YWlsL3RhbXBlcm1vbmtleS9kaGRnZmZra2ViaG1rZmpvamVqbXBibGRtcG9iZmtmbyc7IC8vIFVSTCAxJ3MgTGluawpjb25zdCBNSU5fUEFSVFlfU0laRSA9IDE7IC8vIEZpbGUgWW91ciBXb3JraW4gb24KY29uc3QgTUFYX1BBUlRZX1NJWkUgPSAyOyAvLyBIb3cgTWFueSBGaWxlcyBMZWZ0CgoKLy8gT3JpZ2luYWwgQ29kZSBNYWRlIEJ5IEdhYmVUTQovLyBPcmlnaW5hbCBDb2RlIE1vZGlmZWQgRm9yIFdlYiBCeSBsZXhpc290aGVyICYgR2FiZVRNCi8vIE1ldGEgTW9kaWZlZCBCeSBUaGVSZWFsR1dKb3NoCi8vIEhvc3RlZCBCeSBUaGVSZWFsR1dKb3NoCi8vIEljb24gTWFkZSBCeSB2LWJyaWVzZQovLyBJY29uIE1vZGlmZWQgQnkgVGhlUmVhbEdXSm9zaAoKLy8gbGV4aXNvdGhlcidzIEdpdGh1YiBodHRwczovL2dpdGh1Yi5jb20vbGV4aXNvdGhlcgovLyBUaGVSZWFsR1dKb3NoJ3MgR2l0aHViIGh0dHBzOi8vZ2l0aHViLmNvbS9UaGVSZWFsR1dKb3NoCi8vIHYtYnJpZXNlJ3MgR2l0aHViIGh0dHBzOi8vZ2l0aHViLmNvbS92LWJyaWVzZQoKY29uc29sZS5sb2coJ2V4ZWN1dGVkJyk7CgooYXN5bmMgKCkgPT4gewogICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMTUwMDApKTsKICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgICAgIGNvbnNvbGUubG9nKCd3YWl0aW5nIGZvciB2YXJpYWJsZScpOwogICAgICAgIGlmICghd2luZG93Lmhhc093blByb3BlcnR5KCd3ZWJwYWNrSnNvbnAnKSl7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdOT1QgUVVJVEUgVEhFUkUgWUVUJyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgY29uc29sZS5sb2coJ3ZhcmlhYmxlIGlzIGRlZmluZWQnKTsKCiAgICAgICAgICAgIGNvbnN0IHggPSB3aW5kb3cud2VicGFja0pzb25wLnB1c2goW1tdLCB7J18nOiAoYSwgXywgYikgPT4gewogICAgICAgICAgICAgICAgYS5leHBvcnRzID0gYjsKICAgICAgICAgICAgfX0sIFtbJ18nXV1dKS5jOwoKICAgICAgICAgICAgZm9yIChjb25zdCBpIGluIHgpIHsKICAgICAgICAgICAgICAgIHhbaV0/LmV4cG9ydHM/LmRlZmF1bHQ/LlNFVF9BQ1RJVklUWT8uaGFuZGxlcih7CiAgICAgICAgICAgICAgICAgICAgJ3NvY2tldCc6IHsKICAgICAgICAgICAgICAgICAgICAgICAgJ2lkJzogMTAwLCAvLyBMZWF2ZSBUaGlzIEFsb25lCiAgICAgICAgICAgICAgICAgICAgICAgICdhcHBsaWNhdGlvbic6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdpZCc6IElELAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ25hbWUnOiBUSVRMRQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAndHJhbnNwb3J0JzogJ2lwYycgLy8gTGVhdmUgVGhpcyBBbG9uZQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgJ2FyZ3MnOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICdwaWQnOiAxMCwgLy8gTGVhdmUgVGhpcyBBbG9uZQogICAgICAgICAgICAgICAgICAgICAgICAnYWN0aXZpdHknOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGV0YWlscyc6IERFVEFJTFMsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc3RhdGUnOiBTVEFURSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdidXR0b25zJzogWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJzogQlVUVE9OXzEsIC8vIEJ1dHRvbiAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd1cmwnOiBVUkxfMSAvLyBVUkwgMQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbGFiZWwnOiBCVVRUT05fMiwgLy8gQnV0dG9uIDIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3VybCc6IFVSTF8yIC8vIFVSTCAyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdwYXJ0eSc6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaWQnOiAnMTAwJywgLy8gTGVhdmUgVGhpcyBBbG9uZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzaXplJzogW01JTl9QQVJUWV9TSVpFLCBNQVhfUEFSVFlfU0laRV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndGltZXN0YW1wcyc6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc3RhcnQnOiBEYXRlLm5vdygpLCAvLyBMZWF2ZSBUaGlzIEFsb25lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2Fzc2V0cyc6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbGFyZ2VfaW1hZ2UnOiBMQVJHRV9JTUFHRSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbGFyZ2VfdGV4dCc6IExBUkdFX0lNQUdFX1RFWFQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3NtYWxsX2ltYWdlJzogU01BTExfSU1BR0UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3NtYWxsX3RleHQnOiBTTUFMTF9JTUFHRV9URVhUCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsKTsKICAgICAgICB9CiAgICB9LCA1MDAwKTsKCiAgICBjb25zb2xlLmxvZygnZW5kIG9mIGFzeW5jIGNhbGwgc3RhY2snKTsKfSkoKTs="},{"name":"RichPresence - Anime Alt","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["https://discord.com/*","https://ptb.discord.com/*","https://canary.discord.com/*","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=discord.com%2Fapp","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=canary.discord.com%2Fapp","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=ptb.discord.com%2Fapp"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645115844099,"data":{}},"enabled":false,"position":18,"uuid":"120cb190-e587-430b-b19d-71e07922d148","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBSaWNoUHJlc2VuY2UgLSBBbmltZSBBbHQKLy8gQHZlcnNpb24gICAgICAxLjAuNQovLyBAZGVzY3JpcHRpb24gIFNldHMgUEMgUXVhbGl0eSBSaWNoIFByZXNlbmNlIG9uIFRoZSBXZWIgVmVyc2lvbiBvZiBZb3VyIERpc2NvcmQgYWNjb3VudC4KLy8gQGF1dGhvciAgICAgICBHYWJlVE0gJiBsZXhpc290aGVyCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9kaXNjb3JkLmNvbS8qCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9wdGIuZGlzY29yZC5jb20vKgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vY2FuYXJ5LmRpc2NvcmQuY29tLyoKLy8gQG1hdGNoICAgICAgICBodHRwOi8vYmxvY2tlZC5jb20tZGVmYXVsdC53cy8/b0k9MTA0MjgzODc0NDkmdHlwZT1jaHJvbWl1bS1tJnVybD1kaXNjb3JkLmNvbSUyRmFwcAovLyBAbWF0Y2ggICAgICAgIGh0dHA6Ly9ibG9ja2VkLmNvbS1kZWZhdWx0LndzLz9vST0xMDQyODM4NzQ0OSZ0eXBlPWNocm9taXVtLW0mdXJsPWNhbmFyeS5kaXNjb3JkLmNvbSUyRmFwcAovLyBAbWF0Y2ggICAgICAgIGh0dHA6Ly9ibG9ja2VkLmNvbS1kZWZhdWx0LndzLz9vST0xMDQyODM4NzQ0OSZ0eXBlPWNocm9taXVtLW0mdXJsPXB0Yi5kaXNjb3JkLmNvbSUyRmFwcAovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gQG5hbWVzcGFjZSAgICBodHRwczovL2dpdGh1Yi5jb20vR2FiZVRNCi8vIEBpY29uICAgICAgICAgaHR0cHM6Ly9jZG4uZGlzY29yZGFwcC5jb20vYXBwLWFzc2V0cy84Mzg4Mzk0NTgzNTAyMzU3NTkvODM4ODg2MTEwMDA4NDQyOTUyLnBuZwovLyA9PS9Vc2VyU2NyaXB0PT0KCi8vIFZhcnMKY29uc3QgSUQgPSAnODM4ODM5NDU4MzUwMjM1NzU5JzsgLy8gaGVhZCB0byBodHRwczovL2Rpc2NvcmQuY29tL2RldmVsb3BlcnMgdG8gbWFrZSB5b3VyIG93bgpjb25zdCBUSVRMRSA9ICdXYXRjaGluZyBBbmltZSc7IC8vIFRpdGxlCmNvbnN0IERFVEFJTFMgPSAnR3VuZGFtIEJ1aWxkIEZpZ2h0ZXJzJzsgLy8gMm5kIFBhcnQgb2YgVGhlIFRpdGxlCmNvbnN0IFNUQVRFID0gJ1MyIEUxMic7IC8vIExhc3QgUGFydCBvZiBUaGUgVGl0bGUKY29uc3QgTEFSR0VfSU1BR0UgPSAnY3JwLXdlYic7IC8vIGhlYWQgdG8gaHR0cHM6Ly9kaXNjb3JkLmNvbS9kZXZlbG9wZXJzIHRvIGFkZCB5b3VyIG93biBpbWFnZXMKY29uc3QgU01BTExfSU1BR0UgPSAnZGlzY29yZCc7IC8vIGhlYWQgdG8gaHR0cHM6Ly9kaXNjb3JkLmNvbS9kZXZlbG9wZXJzIHRvIGFkZCB5b3VyIG93biBpbWFnZXMKY29uc3QgTEFSR0VfSU1BR0VfVEVYVCA9ICdFUDEyIFRvIEZseSBUbyB0aGUgRnV0dXJlJzsgLy8gQmlnIEltYWdlIFRleHQKY29uc3QgU01BTExfSU1BR0VfVEVYVCA9ICdSaWNoIFByZXNlbmNlIEZvciBXZWIgVjEuNSc7IC8vIFNtYWxsIGltYWdlIHRleHQKY29uc3QgQlVUVE9OXzIgPSAnUmljaFByZXNlbmNlJzsgLy8gQnV0dG9uIDIncyBMYWJlbApjb25zdCBCVVRUT05fMSA9ICdUYW1wZXJtb25rZXknOyAvLyBCdXR0b24gMSdzIExhYmVsCmNvbnN0IFVSTF8yID0gJ2h0dHBzOi8vZ2l0aHViLmNvbS9Qcm9qZWN0LUJyb3dzZXIvVXNlcnNjcmlwdHMvYmxvYi9tYWluL1JpY2hQcmVzZW5jZS51c2VyLmpzJzsgLy8gVVJMIDIncyBMaW5rCmNvbnN0IFVSTF8xID0gJ2h0dHBzOi8vY2hyb21lLmdvb2dsZS5jb20vd2Vic3RvcmUvZGV0YWlsL3RhbXBlcm1vbmtleS9kaGRnZmZra2ViaG1rZmpvamVqbXBibGRtcG9iZmtmbyc7IC8vIFVSTCAxJ3MgTGluawpjb25zdCBNSU5fUEFSVFlfU0laRSA9IDE7IC8vIEZpbGUgWW91ciBXb3JraW4gb24KY29uc3QgTUFYX1BBUlRZX1NJWkUgPSAxOyAvLyBIb3cgTWFueSBGaWxlcyBMZWZ0CgoKLy8gT3JpZ2luYWwgQ29kZSBNYWRlIEJ5IEdhYmVUTQovLyBPcmlnaW5hbCBDb2RlIE1vZGlmZWQgRm9yIFdlYiBCeSBsZXhpc290aGVyICYgR2FiZVRNCi8vIE1ldGEgTW9kaWZlZCBCeSBUaGVSZWFsR1dKb3NoCi8vIEhvc3RlZCBCeSBUaGVSZWFsR1dKb3NoCi8vIEljb24gTWFkZSBCeSB2LWJyaWVzZQovLyBJY29uIE1vZGlmZWQgQnkgVGhlUmVhbEdXSm9zaAoKLy8gbGV4aXNvdGhlcidzIEdpdGh1YiBodHRwczovL2dpdGh1Yi5jb20vbGV4aXNvdGhlcgovLyBUaGVSZWFsR1dKb3NoJ3MgR2l0aHViIGh0dHBzOi8vZ2l0aHViLmNvbS9UaGVSZWFsR1dKb3NoCi8vIHYtYnJpZXNlJ3MgR2l0aHViIGh0dHBzOi8vZ2l0aHViLmNvbS92LWJyaWVzZQoKY29uc29sZS5sb2coJ2V4ZWN1dGVkJyk7CgooYXN5bmMgKCkgPT4gewogICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgMTUwMDApKTsKICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgICAgIGNvbnNvbGUubG9nKCd3YWl0aW5nIGZvciB2YXJpYWJsZScpOwogICAgICAgIGlmICghd2luZG93Lmhhc093blByb3BlcnR5KCd3ZWJwYWNrSnNvbnAnKSl7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdOT1QgUVVJVEUgVEhFUkUgWUVUJyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgY29uc29sZS5sb2coJ3ZhcmlhYmxlIGlzIGRlZmluZWQnKTsKCiAgICAgICAgICAgIGNvbnN0IHggPSB3aW5kb3cud2VicGFja0pzb25wLnB1c2goW1tdLCB7J18nOiAoYSwgXywgYikgPT4gewogICAgICAgICAgICAgICAgYS5leHBvcnRzID0gYjsKICAgICAgICAgICAgfX0sIFtbJ18nXV1dKS5jOwoKICAgICAgICAgICAgZm9yIChjb25zdCBpIGluIHgpIHsKICAgICAgICAgICAgICAgIHhbaV0/LmV4cG9ydHM/LmRlZmF1bHQ/LlNFVF9BQ1RJVklUWT8uaGFuZGxlcih7CiAgICAgICAgICAgICAgICAgICAgJ3NvY2tldCc6IHsKICAgICAgICAgICAgICAgICAgICAgICAgJ2lkJzogMTAwLCAvLyBMZWF2ZSBUaGlzIEFsb25lCiAgICAgICAgICAgICAgICAgICAgICAgICdhcHBsaWNhdGlvbic6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdpZCc6IElELAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ25hbWUnOiBUSVRMRQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAndHJhbnNwb3J0JzogJ2lwYycgLy8gTGVhdmUgVGhpcyBBbG9uZQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgJ2FyZ3MnOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICdwaWQnOiAxMCwgLy8gTGVhdmUgVGhpcyBBbG9uZQogICAgICAgICAgICAgICAgICAgICAgICAnYWN0aXZpdHknOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnZGV0YWlscyc6IERFVEFJTFMsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc3RhdGUnOiBTVEFURSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdidXR0b25zJzogWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xhYmVsJzogQlVUVE9OXzEsIC8vIEJ1dHRvbiAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICd1cmwnOiBVUkxfMSAvLyBVUkwgMQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbGFiZWwnOiBCVVRUT05fMiwgLy8gQnV0dG9uIDIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3VybCc6IFVSTF8yIC8vIFVSTCAyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICdwYXJ0eSc6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnaWQnOiAnMTAwJywgLy8gTGVhdmUgVGhpcyBBbG9uZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzaXplJzogW01JTl9QQVJUWV9TSVpFLCBNQVhfUEFSVFlfU0laRV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAndGltZXN0YW1wcyc6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnc3RhcnQnOiBEYXRlLm5vdygpLCAvLyBMZWF2ZSBUaGlzIEFsb25lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2Fzc2V0cyc6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbGFyZ2VfaW1hZ2UnOiBMQVJHRV9JTUFHRSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbGFyZ2VfdGV4dCc6IExBUkdFX0lNQUdFX1RFWFQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3NtYWxsX2ltYWdlJzogU01BTExfSU1BR0UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3NtYWxsX3RleHQnOiBTTUFMTF9JTUFHRV9URVhUCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsKTsKICAgICAgICB9CiAgICB9LCA1MDAwKTsKCiAgICBjb25zb2xlLmxvZygnZW5kIG9mIGFzeW5jIGNhbGwgc3RhY2snKTsKfSkoKTs="},{"name":"ceo.ca darkmode","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["/https?:\\/\\/ceo\\.ca.*/"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645115844103,"data":{}},"enabled":true,"position":19,"uuid":"65981150-f38a-4490-a5e7-1fc0dfb1a6db","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBjZW8uY2EgZGFya21vZGUKLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vdGFtcGVybW9ua2V5Lm5ldC8KLy8gQHZlcnNpb24gICAgICAwLjEKLy8gQGRlc2NyaXB0aW9uICB0cnkgdG8gdGFrZSBvdmVyIHRoZSB3b3JsZCEKLy8gQGF1dGhvciAgICAgICBZb3UKLy8gQGluY2x1ZGUgICAgICAvaHR0cHM/OlwvXC9jZW9cLmNhLiovCi8vIEBydW4tYXQgICAgICAgZG9jdW1lbnQtc3RhcnQKLy8gQGljb24gICAgICAgICBodHRwczovL3d3dy5nb29nbGUuY29tL3MyL2Zhdmljb25zP2RvbWFpbj1jZW8uY2EKLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2Rhcmttb2RlJyk7"},{"name":"Cumcord Loader","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://discord.com/*","https://ptb.discord.com/*","https://canary.discord.com/*","https://lunadisco.herokuapp.com/*","https://womginx.wmeluna.repl.co/*","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=discord.com%2Fapp","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=canary.discord.com%2Fapp","http://blocked.com-default.ws/?oI=10428387449&type=chromium-m&url=ptb.discord.com%2Fapp"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645115844107,"data":{}},"enabled":true,"position":20,"file_url":"https://github.com/Project-Browser/Userscripts/raw/main/Cumcord-Loader.user.js","uuid":"7472ab66-6c6e-4e10-b3ff-26753a0885e8","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBDdW1jb3JkIExvYWRlcgovLyBAdmVyc2lvbiAgICAgIDEuMC4wCi8vIEBkZXNjcmlwdGlvbiAgSW5qZWN0IEN1bWNvcmQgSW50byBEaXNjb3JkIFlvdSBOZWVkIFRoaXMgRXh0ZW5zaW9uIG9yIERpc2FibGUgQ1NQIEluIFRhbXBlcm1vbmtleSAtIGh0dHBzOi8vY2hyb21lLmdvb2dsZS5jb20vd2Vic3RvcmUvZGV0YWlsL2Rpc2FibGUtY29udGVudC1zZWN1cml0eS9pZWVsbWNtY2Fnb21tcGxjZWViZmVkamxha2tocGRlbgovLyBAYXV0aG9yICAgICAgIEhla2t5IzY4NjkgJiBJdCdzSnVzdEpvc2gjMjgxMgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vZGlzY29yZC5jb20vKgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vcHRiLmRpc2NvcmQuY29tLyoKLy8gQG1hdGNoICAgICAgICBodHRwczovL2NhbmFyeS5kaXNjb3JkLmNvbS8qCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9sdW5hZGlzY28uaGVyb2t1YXBwLmNvbS8qCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly93b21naW54LndtZWx1bmEucmVwbC5jby8qCi8vIEBtYXRjaCAgICAgICAgaHR0cDovL2Jsb2NrZWQuY29tLWRlZmF1bHQud3MvP29JPTEwNDI4Mzg3NDQ5JnR5cGU9Y2hyb21pdW0tbSZ1cmw9ZGlzY29yZC5jb20lMkZhcHAKLy8gQG1hdGNoICAgICAgICBodHRwOi8vYmxvY2tlZC5jb20tZGVmYXVsdC53cy8/b0k9MTA0MjgzODc0NDkmdHlwZT1jaHJvbWl1bS1tJnVybD1jYW5hcnkuZGlzY29yZC5jb20lMkZhcHAKLy8gQG1hdGNoICAgICAgICBodHRwOi8vYmxvY2tlZC5jb20tZGVmYXVsdC53cy8/b0k9MTA0MjgzODc0NDkmdHlwZT1jaHJvbWl1bS1tJnVybD1wdGIuZGlzY29yZC5jb20lMkZhcHAKLy8gQGdyYW50ICAgICAgICBub25lCi8vIEBuYW1lc3BhY2UgICAgaHR0cHM6Ly9kaXNjb3JkLmdnL1hXYk5WNWEydmgKLy8gQGljb24gICAgICAgICBodHRwczovL2kuaW1ndXIuY29tL25xcld4NUMucG5nCi8vID09L1VzZXJTY3JpcHQ9PQoKLy8gUmVxdWVzdGVkIEJ5IEl0J3NKdXN0Sm9zaCMyODEyICYgTWFkZSBCeSBIZWtreSM2ODY5CgovLyBDdW0KKGFzeW5jIGZ1bmN0aW9uKCkgeyBldmFsKGF3YWl0IChhd2FpdCBmZXRjaCgnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0N1bWNvcmQvQ3VtY29yZC9zdGFibGUvZGlzdC9idWlsZC5qcycpKS50ZXh0KCkpOyB9KSgpCgo="},{"name":"Skip Ads on Spotify","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://*.spotify.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645115844110,"data":{}},"enabled":false,"position":21,"uuid":"6c6a94a5-78a0-440f-a9e8-49044c4ff436","source":"ICAgIC8vLy8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBTa2lwIEFkcyBvbiBTcG90aWZ5Ci8vIEB2ZXJzaW9uICAgICAgMS4wCi8vIEBuYW1lc3BhY2UgICAgaHR0cHM6Ly9naXRodWIuY29tL01vbm9saXRvdmV0cy9Ta2lwLWFkcy1vbi1TcG90aWZ5Ci8vIEBkZXNjcmlwdGlvbiAgSW4gY29uanVuY3Rpb24gd2l0aCB1QmxvY2sgT3JpZ2luLCB3aGljaCBjYW4gYmxvY2sgYWRzIG9uIFNwb3RpZnkgYnV0IHN0b3BzIHRoZSBtdXNpYywgdGhpcyBlc3NlbnRpYWxseSBoaXRzIHBsYXkgdG8gY29udGludWUgdW5pbnRlcnJ1cHRlZC4KLy8gQG1hdGNoICAgICAgICBodHRwczovLyouc3BvdGlmeS5jb20vKgovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gPT0vVXNlclNjcmlwdD09CgpzZXRJbnRlcnZhbCgoKSA9PiB7Cgl2YXIgbm93UGxheWluZ0xpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIubm93LXBsYXlpbmcgYSIpOwoJdmFyIHRoZXJlc0FuQWQgPSBub3dQbGF5aW5nTGluayAmJiBub3dQbGF5aW5nTGluay5ob3N0bmFtZSAhPT0gbG9jYXRpb24uaG9zdG5hbWU7CgkvLyBUaGUgcGxheSBidXR0b24gaXMgYWN0dWFsbHkgc2hvd24gYXMgYSAnUGF1c2UnIGJ1dHRvbiBiZWNhdXNlIGl0IGdldHMgY29uZnVzZWQgd2hlbiB0aGUgYWQgaXMgYmxvY2tlZC4KCXZhciBwbGF5UGF1c2VCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCJidXR0b25bdGl0bGU9J1BsYXknXSwgYnV0dG9uW3RpdGxlPSdQYXVzZSddIik7CglpZiAodGhlcmVzQW5BZCkgewoJCXBsYXlQYXVzZUJ1dHRvbi5jbGljaygpOwoJCS8vIEl0IHBhdXNlcyBvbiB0aGUgbmV4dCBzb25nLCBzby4uLiBkZWxheSBhbmQgcGxheSEgKFRoaXMgbWF5IGJlIGEgcmFjZSBjb25kaXRpb24uKQoJCXNldFRpbWVvdXQoKCkgPT4gewoJCQkvLyBJbiB0aGlzIGNhc2UgaXQgc2hvdWxkIGJlIGNvcnJlY3RseSBkaXNwbGF5ZWQgYXMgYSBQbGF5IGJ1dHRvbiwgYW5kIHdlIGRlZmluaXRlbHkgZG9uJ3Qgd2FudCB0byBwYXVzZS4KCQkJdmFyIHBsYXlCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCJidXR0b25bdGl0bGU9J1BsYXknXSIpOwoJCQlwbGF5QnV0dG9uICYmIHBsYXlCdXR0b24uY2xpY2soKTsKCQl9LCAyMDApOwoJfQp9LCA1MDApOwo7"},{"name":"Eruda Loader","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://*/*","chrome-extension://dhdgffkkebhmkfjojejmpbldmpobfkfo","chrome-extension://apmmpaebfobifelkijhaljbmpcgbjbdo"],"orig_noframes":true,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"tab_types":null,"unwrap":null},"storage":{"ts":1645115844154,"data":{}},"enabled":true,"position":22,"uuid":"da4b103d-5e63-4455-9768-c6f125f3a69d","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgRXJ1ZGEgTG9hZGVyCi8vIEBkZXNjcmlwdGlvbiAgIExvYWQgYW5kIHNldHVwIEVydWRhIHdpdGggRE9NIHBsdWdpbgovLyBAbmFtZXNwYWNlICAgICBFcnVkYQovLyBAYXV0aG9yICAgICAgICBSYWluU2xpZGUKLy8gQG1hdGNoICAgICAgICAgKjovLyovKgovLyBAbWF0Y2ggICAgICAgICBjaHJvbWUtZXh0ZW5zaW9uOi8vZGhkZ2Zma2tlYmhta2Zqb2plam1wYmxkbXBvYmZrZm8KLy8gQG1hdGNoICAgICAgICAgY2hyb21lLWV4dGVuc2lvbjovL2FwbW1wYWViZm9iaWZlbGtpamhhbGpibXBjZ2JqYmRvCi8vIEBleGNsdWRlLW1hdGNoIGh0dHBzOi8vZXJ1ZGEubGlyaWxpcmkuaW8vKgovLyBAdmVyc2lvbiAgICAgICAxLjEKLy8gQGdyYW50ICAgICAgICAgbm9uZQovLyBAcnVuLWF0ICAgICAgICBkb2N1bWVudC1pZGxlCi8vIEByZXF1aXJlICAgaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9lcnVkYQovLyBAcmVxdWlyZSAgIGh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vZXJ1ZGEtZG9tCi8vIEBub2ZyYW1lcwovLyA9PS9Vc2VyU2NyaXB0PT0KCiJ1c2Ugc3RyaWN0IjsKCmNvbnN0IGdldFR5cGUgPSBfID0+CiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoXykKICAuc2xpY2UoOCwgLTEpOwoKY29uc3QgZXJyb3IgPSBtc2cgPT4KIGNvbnNvbGUuZXJyb3IoIltFcnVkYSBMb2FkZXJdICIgKyBtc2cpOwoKY29uc3QgbG9hZEVycm9yID0gKG5hbWUsIHR5cGUpID0+IHsKIGVycm9yKG5hbWUgKyAiIGlzIG5vdCBhbiAiICsgdHlwZSk7CiByZXR1cm4gZmFsc2U7Cn0KCmNvbnN0IGlzRXJ1ZGFMb2FkZWQgPQogZ2V0VHlwZSh3aW5kb3cuZXJ1ZGEpICE9PSAiT2JqZWN0IgogPyBsb2FkRXJyb3IoIndpbmRvdy5lcnVkYSIsICJPYmplY3QiKQogOiBnZXRUeXBlKGVydWRhLl9pc0luaXQpICE9PSAiQm9vbGVhbiIKID8gbG9hZEVycm9yKCJlcnVkYS5faXNJbml0IiwgIkJvb2xlYW4iKQogOiB0cnVlOwoKaWYgKAogaXNFcnVkYUxvYWRlZCAmJgogZXJ1ZGEuX2lzSW5pdCA9PT0gZmFsc2UKKSB7CgplcnVkYS5pbml0KCk7CgovKgplcnVkYS5pbml0KHsKLy8gY29udGFpbmVyOiBjb250YWluZXJFbGVtZW50LAovLyB0b29sOiBbICJ0b29sTmFtZTEiLCAidG9vbE5hbWUyIiBdLAovLyB1c2VTaGFkb3dEb206IHRydWUsCi8vIGF1dG9TY2FsZTogdHJ1ZSwKLy8gZGVmYXVsdHM6IHsKLy8gIHRyYW5zcGFyZW5jeTogMSwKLy8gIGRpc3BsYXlTaXplOiA4MCwKLy8gIHRoZW1lOiAidGhlbWVOYW1lIgovLyB9Cn0pOwoqLwoKZXJ1ZGEuZ2V0KCJjb25zb2xlIikuY29uZmlnLnNldCgKICJtYXhMb2dOdW0iLCAyNTYKKTsKCmVydWRhLmFkZChlcnVkYURvbSk7CgooKCkgPT4gewoKZXJ1ZGEuX3NoYWRvd1Jvb3QuYXBwZW5kQ2hpbGQoCiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzdHlsZSIpCikudGV4dENvbnRlbnQgPSBgCi8qIHVzZSBtb25vc3BhY2UgZm9udCAqLwojZXJ1ZGEtY29uc29sZSAuZXJ1ZGEtbG9ncy1jb250YWluZXIsCiNlcnVkYS1lbGVtZW50cyAuZXJ1ZGEtcGFyZW50cywKI2VydWRhLWVsZW1lbnRzIC5lcnVkYS1icmVhZGNydW1iLAojZXJ1ZGEtZWxlbWVudHMgLmVydWRhLWNoaWxkcmVuLAojZXJ1ZGEtZWxlbWVudHMgLmVydWRhLXRhYmxlLXdyYXBwZXIsCiNlcnVkYS1lbGVtZW50cyAuZXJ1ZGEtc3R5bGUtcnVsZXMsCiNlcnVkYS1yZXNvdXJjZXMgdGFibGUsCiNlcnVkYS1zb3VyY2VzIC5lcnVkYS1jb2RlLXdyYXBwZXIsCiNlcnVkYS1zb3VyY2VzIC5lcnVkYS1yYXctd3JhcHBlciB7CiBmb250LWZhbWlseTogbW9ub3NwYWNlOwp9CgovKiBDaXJjbGl6ZSB0aGUgZW50cnkgYnV0dG9uICovCi5lcnVkYS1jb250YWluZXIgLmVydWRhLWVudHJ5LWJ0biB7CiBib3JkZXItcmFkaXVzOiA1MCU7Cn0KLyogQ2VudGVyaXplIGl0cyBpY29uICovCi5lcnVkYS1pY29uLXRvb2wgewogZm9udC1zaXplOiAyOHB4Owp9Ci5lcnVkYS1pY29uLXRvb2w6OmJlZm9yZSB7CiB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOwp9CgpgLnRyaW0oKTsKCn0pKCk7Cgp9Cg==","requires":[{"meta":{"name":"eruda","url":"https://cdn.jsdelivr.net/npm/eruda","ts":1645720713334,"mimetype":"text/plain"},"source":""},{"meta":{"name":"eruda-dom","url":"https://cdn.jsdelivr.net/npm/eruda-dom","ts":1645720704308,"mimetype":"text/plain"},"source":""}]}]}